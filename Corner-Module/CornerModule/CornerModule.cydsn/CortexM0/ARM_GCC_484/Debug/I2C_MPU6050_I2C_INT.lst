ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_MPU6050_I2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_MPU6050_I2C_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	I2C_MPU6050_I2C_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	I2C_MPU6050_I2C_ISR, %function
  23              	I2C_MPU6050_I2C_ISR:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\I2C_MPU6050_I2C_INT.c"
   1:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * File Name: I2C_MPU6050_I2C_INT.c
   3:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *
   5:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *  the SCB Component in I2C mode.
   8:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *
   9:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *
  11:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  18:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** #include "I2C_MPU6050_PVT.h"
  19:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** #include "I2C_MPU6050_I2C_PVT.h"
  20:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  21:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  22:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** /*******************************************************************************
  23:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Function Name: I2C_MPU6050_I2C_ISR
  24:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** ********************************************************************************
  25:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *
  26:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Summary:
  27:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *  Handles the Interrupt Service Routine for the SCB I2C mode.
  28:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *
  29:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Parameters:
  30:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *  None
  31:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *
  32:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** * Return:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 2


  33:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *  None
  34:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *
  35:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** *******************************************************************************/
  36:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** CY_ISR(I2C_MPU6050_I2C_ISR)
  37:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** {
  26              		.loc 1 37 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  38:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     uint32 diffCount;
  39:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     uint32 endTransfer;
  40:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  41:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     #if(I2C_MPU6050_CHECK_I2C_ACCEPT_ADDRESS_CONST)
  42:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         uint32 address;
  43:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     #endif /* (I2C_MPU6050_CHECK_I2C_ACCEPT_ADDRESS_CONST) */
  44:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  45:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     endTransfer = 0u; /* Continue active transfer */
  36              		.loc 1 45 0
  37 0006 0023     		mov	r3, #0
  38 0008 3B60     		str	r3, [r7]
  46:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  47:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     /* Calls customer routine if registered */
  48:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     if(NULL != I2C_MPU6050_customIntrHandler)
  39              		.loc 1 48 0
  40 000a C54B     		ldr	r3, .L43
  41 000c 1B68     		ldr	r3, [r3]
  42 000e 002B     		cmp	r3, #0
  43 0010 02D0     		beq	.L2
  49:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     {
  50:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_customIntrHandler();
  44              		.loc 1 50 0
  45 0012 C34B     		ldr	r3, .L43
  46 0014 1B68     		ldr	r3, [r3]
  47 0016 9847     		blx	r3
  48              	.L2:
  51:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     }
  52:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  53:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     if(I2C_MPU6050_CHECK_INTR_I2C_EC_MASKED(I2C_MPU6050_INTR_I2C_EC_WAKE_UP))
  49              		.loc 1 53 0
  50 0018 C24B     		ldr	r3, .L43+4
  51 001a 1A68     		ldr	r2, [r3]
  52 001c 0123     		mov	r3, #1
  53 001e 1340     		and	r3, r2
  54 0020 02D0     		beq	.L3
  54:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     {
  55:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         /* Mask-off after wakeup */
  56:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_SetI2CExtClkInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
  55              		.loc 1 56 0
  56 0022 C14B     		ldr	r3, .L43+8
  57 0024 0022     		mov	r2, #0
  58 0026 1A60     		str	r2, [r3]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 3


  59              	.L3:
  57:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     }
  58:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  59:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     /* Master and Slave error tracking:
  60:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * Add the master state check to track only the master errors when the master is active or
  61:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * track slave errors when the slave is active or idle.
  62:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * A special MMS case: in the address phase with misplaced Start: the master sets the LOST_ARB a
  63:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * slave BUS_ERR. The valid event is LOST_ARB comes from the master.
  64:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     */
  65:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     if(I2C_MPU6050_CHECK_I2C_FSM_MASTER)
  60              		.loc 1 65 0
  61 0028 C04B     		ldr	r3, .L43+12
  62 002a 1B78     		ldrb	r3, [r3]
  63 002c DAB2     		uxtb	r2, r3
  64 002e 2023     		mov	r3, #32
  65 0030 1340     		and	r3, r2
  66 0032 DBB2     		uxtb	r3, r3
  67 0034 002B     		cmp	r3, #0
  68 0036 3CD0     		beq	.L4
  66:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     {
  67:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #if(I2C_MPU6050_I2C_MASTER)
  68:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         {
  69:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* INTR_MASTER_I2C_BUS_ERROR:
  70:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * A misplaced Start or Stop condition occurred on the bus: complete the transaction.
  71:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The interrupt is cleared in I2C_FSM_EXIT_IDLE.
  72:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
  73:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_MASTER_MASKED(I2C_MPU6050_INTR_MASTER_I2C_BUS_ERROR))
  69              		.loc 1 73 0
  70 0038 BD4B     		ldr	r3, .L43+16
  71 003a 1A68     		ldr	r2, [r3]
  72 003c 8023     		mov	r3, #128
  73 003e 5B00     		lsl	r3, r3, #1
  74 0040 1340     		and	r3, r2
  75 0042 0AD0     		beq	.L5
  74:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
  75:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_ERR_XFER |
  76              		.loc 1 75 0
  77 0044 BB4B     		ldr	r3, .L43+20
  78 0046 1B88     		ldrh	r3, [r3]
  79 0048 9BB2     		uxth	r3, r3
  80 004a C022     		mov	r2, #192
  81 004c 9200     		lsl	r2, r2, #2
  82 004e 1343     		orr	r3, r2
  83 0050 9AB2     		uxth	r2, r3
  84 0052 B84B     		ldr	r3, .L43+20
  85 0054 1A80     		strh	r2, [r3]
  76:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                          I2C_MPU6050_I2C_MSTAT_ERR_BUS_ERROR);
  77:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  78:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
  86              		.loc 1 78 0
  87 0056 0123     		mov	r3, #1
  88 0058 3B60     		str	r3, [r7]
  89              	.L5:
  79:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
  80:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  81:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* INTR_MASTER_I2C_ARB_LOST:
  82:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The MultiMaster lost arbitrage during transaction.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 4


  83:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * A Misplaced Start or Stop condition is treated as lost arbitration when the master dr
  84:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The interrupt source is cleared in I2C_FSM_EXIT_IDLE.
  85:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
  86:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_MASTER_MASKED(I2C_MPU6050_INTR_MASTER_I2C_ARB_LOST))
  90              		.loc 1 86 0
  91 005a B54B     		ldr	r3, .L43+16
  92 005c 1A68     		ldr	r2, [r3]
  93 005e 0123     		mov	r3, #1
  94 0060 1340     		and	r3, r2
  95 0062 0AD0     		beq	.L6
  87:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
  88:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_ERR_XFER |
  96              		.loc 1 88 0
  97 0064 B34B     		ldr	r3, .L43+20
  98 0066 1B88     		ldrh	r3, [r3]
  99 0068 9BB2     		uxth	r3, r3
 100 006a 9022     		mov	r2, #144
 101 006c 9200     		lsl	r2, r2, #2
 102 006e 1343     		orr	r3, r2
 103 0070 9AB2     		uxth	r2, r3
 104 0072 B04B     		ldr	r3, .L43+20
 105 0074 1A80     		strh	r2, [r3]
  89:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                          I2C_MPU6050_I2C_MSTAT_ERR_ARB_LOST);
  90:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  91:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 106              		.loc 1 91 0
 107 0076 0123     		mov	r3, #1
 108 0078 3B60     		str	r3, [r7]
 109              	.L6:
  92:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
  93:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
  94:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             #if(I2C_MPU6050_I2C_MULTI_MASTER_SLAVE)
  95:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
  96:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* I2C_MASTER_CMD_M_START_ON_IDLE:
  97:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 * MultiMaster-Slave does not generate start, because Slave was addressed.
  98:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 * Pass control to slave.
  99:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 */
 100:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_CHECK_I2C_MASTER_CMD(I2C_MPU6050_I2C_MASTER_CMD_M_START_ON_IDLE))
 101:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 102:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_ERR_XFER |
 103:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                              I2C_MPU6050_I2C_MSTAT_ERR_ABORT_XFER);
 104:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 105:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 106:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 107:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 108:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             #endif
 109:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 110:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* The error handling common part:
 111:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * Sets a completion flag of the master transaction and passes control to:
 112:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             *  - I2C_FSM_EXIT_IDLE - to complete transaction in case of: ARB_LOST or BUS_ERR.
 113:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             *  - I2C_FSM_IDLE      - to take chance for the slave to process incoming transaction.
 114:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 115:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(0u != endTransfer)
 110              		.loc 1 115 0
 111 007a 3B68     		ldr	r3, [r7]
 112 007c 002B     		cmp	r3, #0
 113 007e 18D0     		beq	.L4
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 5


 116:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 117:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Set completion flags for master */
 118:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_mstrStatus |= (uint16) I2C_MPU6050_GET_I2C_MSTAT_CMPLT;
 114              		.loc 1 118 0
 115 0080 AA4B     		ldr	r3, .L43+12
 116 0082 1B78     		ldrb	r3, [r3]
 117 0084 DAB2     		uxtb	r2, r3
 118 0086 0123     		mov	r3, #1
 119 0088 1340     		and	r3, r2
 120 008a DBB2     		uxtb	r3, r3
 121 008c 002B     		cmp	r3, #0
 122 008e 01D0     		beq	.L8
 123              		.loc 1 118 0 is_stmt 0 discriminator 1
 124 0090 0123     		mov	r3, #1
 125 0092 00E0     		b	.L9
 126              	.L8:
 127              		.loc 1 118 0 discriminator 2
 128 0094 0223     		mov	r3, #2
 129              	.L9:
 130              		.loc 1 118 0 discriminator 3
 131 0096 A74A     		ldr	r2, .L43+20
 132 0098 1288     		ldrh	r2, [r2]
 133 009a 92B2     		uxth	r2, r2
 134 009c 91B2     		uxth	r1, r2
 135 009e 1A1C     		add	r2, r3, #0
 136 00a0 0B1C     		add	r3, r1, #0
 137 00a2 1343     		orr	r3, r2
 138 00a4 9BB2     		uxth	r3, r3
 139 00a6 9AB2     		uxth	r2, r3
 140 00a8 A24B     		ldr	r3, .L43+20
 141 00aa 1A80     		strh	r2, [r3]
 119:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 120:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #if(I2C_MPU6050_I2C_MULTI_MASTER_SLAVE)
 121:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 122:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     if(I2C_MPU6050_CHECK_I2C_FSM_ADDR)
 123:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 124:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Start generation is set after another master starts accessing Slave.
 125:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * Clean-up master and turn to slave. Set state to IDLE.
 126:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 127:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(I2C_MPU6050_CHECK_I2C_MASTER_CMD(I2C_MPU6050_I2C_MASTER_CMD_M_START_ON_I
 128:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 129:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_I2C_MASTER_CLEAR_START;
 130:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 131:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Sl
 132:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 133:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Valid arbitration lost on the address phase happens only when: master LO
 134:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * slave BUS_ERR is cleared. Only in that case set the state to IDLE without
 135:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 136:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else if((!I2C_MPU6050_CHECK_INTR_SLAVE_MASKED(I2C_MPU6050_INTR_SLAVE_I2C_BU
 137:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                && I2C_MPU6050_CHECK_INTR_MASTER_MASKED(I2C_MPU6050_INTR_MASTER_I2C_
 138:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 139:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Sl
 140:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 141:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else
 142:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 143:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             endTransfer = 0u; /* Causes I2C_FSM_EXIT_IDLE to be set below */
 144:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 6


 145:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 146:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(0u != endTransfer) /* Clean-up master to proceed with slave */
 147:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 148:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_CLEAR_TX_FIFO; /* Shifter keeps address, clear it */
 149:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 150:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_DISABLE_MASTER_AUTO_DATA_ACK; /* In case of reading disable
 151:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 152:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Clean-up master interrupt sources */
 153:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_ClearMasterInterruptSource(I2C_MPU6050_INTR_MASTER_ALL);
 154:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 155:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Disable data processing interrupts: they have to be cleared before *
 156:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 157:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 158:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 159:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_IDLE;
 160:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 161:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else
 162:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 163:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Set I2C_FSM_EXIT_IDLE for BUS_ERR and ARB_LOST (that is really bus e
 164:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_EXIT_IDLE;
 165:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 166:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 167:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     else
 168:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 169:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Set I2C_FSM_EXIT_IDLE if any other state than address */
 170:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_EXIT_IDLE;
 171:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 172:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 173:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #else
 174:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 175:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* In case of LOST*/
 176:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_EXIT_IDLE;
 142              		.loc 1 176 0 is_stmt 1 discriminator 3
 143 00ac 9F4B     		ldr	r3, .L43+12
 144 00ae 0022     		mov	r2, #0
 145 00b0 1A70     		strb	r2, [r3]
 146              	.L4:
 177:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 178:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #endif
 179:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 180:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         }
 181:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #endif
 182:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     }
 183:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     else /* (I2C_MPU6050_CHECK_I2C_FSM_SLAVE) */
 184:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     {
 185:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #if(I2C_MPU6050_I2C_SLAVE)
 186:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         {
 187:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* INTR_SLAVE_I2C_BUS_ERROR or I2C_MPU6050_INTR_SLAVE_I2C_ARB_LOST:
 188:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * A Misplaced Start or Stop condition occurred on the bus: set a flag
 189:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * to notify an error condition.
 190:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 191:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_SLAVE_MASKED(I2C_MPU6050_INTR_SLAVE_I2C_BUS_ERROR |
 192:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                         I2C_MPU6050_INTR_SLAVE_I2C_ARB_LOST))
 193:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 194:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_CHECK_I2C_FSM_RD)
 195:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 196:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* TX direction: master reads from slave */
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 7


 197:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus &= (uint8) ~I2C_MPU6050_I2C_SSTAT_RD_BUSY;
 198:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus |= (uint8) (I2C_MPU6050_I2C_SSTAT_RD_ERR |
 199:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                           I2C_MPU6050_I2C_SSTAT_RD_CMPLT);
 200:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 201:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 else
 202:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 203:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* RX direction: master writes into slave */
 204:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus &= (uint8) ~I2C_MPU6050_I2C_SSTAT_WR_BUSY;
 205:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus |= (uint8) (I2C_MPU6050_I2C_SSTAT_WR_ERR |
 206:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                           I2C_MPU6050_I2C_SSTAT_WR_CMPLT);
 207:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 208:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 209:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_EXIT_IDLE;
 210:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 211:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         }
 212:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #endif
 213:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     }
 214:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 215:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     /* States description:
 216:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * Any Master operation starts from: the ADDR_RD/WR state as the master generates traffic on the
 217:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * Any Slave operation starts from: the IDLE state as the slave always waits for actions from th
 218:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     */
 219:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 220:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     /* FSM Master */
 221:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     if(I2C_MPU6050_CHECK_I2C_FSM_MASTER)
 147              		.loc 1 221 0
 148 00b2 9E4B     		ldr	r3, .L43+12
 149 00b4 1B78     		ldrb	r3, [r3]
 150 00b6 DAB2     		uxtb	r2, r3
 151 00b8 2023     		mov	r3, #32
 152 00ba 1340     		and	r3, r2
 153 00bc DBB2     		uxtb	r3, r3
 154 00be 002B     		cmp	r3, #0
 155 00c0 00D1     		bne	.LCB123
 156 00c2 AEE1     		b	.L10	@long jump
 157              	.LCB123:
 222:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     {
 223:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #if(I2C_MPU6050_I2C_MASTER)
 224:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         {
 225:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* INTR_MASTER_I2C_STOP:
 226:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * A Stop condition was generated by the master: the end of the transaction.
 227:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * Set completion flags to notify the API.
 228:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 229:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_MASTER_MASKED(I2C_MPU6050_INTR_MASTER_I2C_STOP))
 158              		.loc 1 229 0
 159 00c4 9A4B     		ldr	r3, .L43+16
 160 00c6 1A68     		ldr	r2, [r3]
 161 00c8 1023     		mov	r3, #16
 162 00ca 1340     		and	r3, r2
 163 00cc 1CD0     		beq	.L11
 230:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 231:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearMasterInterruptSource(I2C_MPU6050_INTR_MASTER_I2C_STOP);
 164              		.loc 1 231 0
 165 00ce 9A4B     		ldr	r3, .L43+24
 166 00d0 1022     		mov	r2, #16
 167 00d2 1A60     		str	r2, [r3]
 232:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 8


 233:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_mstrStatus |= (uint16) I2C_MPU6050_GET_I2C_MSTAT_CMPLT;
 168              		.loc 1 233 0
 169 00d4 954B     		ldr	r3, .L43+12
 170 00d6 1B78     		ldrb	r3, [r3]
 171 00d8 DAB2     		uxtb	r2, r3
 172 00da 0123     		mov	r3, #1
 173 00dc 1340     		and	r3, r2
 174 00de DBB2     		uxtb	r3, r3
 175 00e0 002B     		cmp	r3, #0
 176 00e2 01D0     		beq	.L12
 177              		.loc 1 233 0 is_stmt 0 discriminator 1
 178 00e4 0123     		mov	r3, #1
 179 00e6 00E0     		b	.L13
 180              	.L12:
 181              		.loc 1 233 0 discriminator 2
 182 00e8 0223     		mov	r3, #2
 183              	.L13:
 184              		.loc 1 233 0 discriminator 1
 185 00ea 924A     		ldr	r2, .L43+20
 186 00ec 1288     		ldrh	r2, [r2]
 187 00ee 92B2     		uxth	r2, r2
 188 00f0 91B2     		uxth	r1, r2
 189 00f2 1A1C     		add	r2, r3, #0
 190 00f4 0B1C     		add	r3, r1, #0
 191 00f6 1343     		orr	r3, r2
 192 00f8 9BB2     		uxth	r3, r3
 193 00fa 9AB2     		uxth	r2, r3
 194 00fc 8D4B     		ldr	r3, .L43+20
 195 00fe 1A80     		strh	r2, [r3]
 234:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_state       = I2C_MPU6050_I2C_FSM_IDLE;
 196              		.loc 1 234 0 is_stmt 1 discriminator 1
 197 0100 8A4B     		ldr	r3, .L43+12
 198 0102 1022     		mov	r2, #16
 199 0104 1A70     		strb	r2, [r3]
 200 0106 B0E1     		b	.L1
 201              	.L11:
 235:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 236:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             else
 237:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 238:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_CHECK_I2C_FSM_ADDR) /* Address stage */
 202              		.loc 1 238 0
 203 0108 884B     		ldr	r3, .L43+12
 204 010a 1B78     		ldrb	r3, [r3]
 205 010c DAB2     		uxtb	r2, r3
 206 010e 0823     		mov	r3, #8
 207 0110 1340     		and	r3, r2
 208 0112 DBB2     		uxtb	r3, r3
 209 0114 002B     		cmp	r3, #0
 210 0116 29D0     		beq	.L15
 239:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 240:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* INTR_MASTER_I2C_NACK:
 241:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     * The master sent an address but it was NACKed by the slave. Complete transacti
 242:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     */
 243:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     if(I2C_MPU6050_CHECK_INTR_MASTER_MASKED(I2C_MPU6050_INTR_MASTER_I2C_NACK))
 211              		.loc 1 243 0
 212 0118 854B     		ldr	r3, .L43+16
 213 011a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 9


 214 011c 0223     		mov	r3, #2
 215 011e 1340     		and	r3, r2
 216 0120 0ED0     		beq	.L16
 244:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 245:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_ClearMasterInterruptSource(I2C_MPU6050_INTR_MASTER_I2C_NACK);
 217              		.loc 1 245 0
 218 0122 854B     		ldr	r3, .L43+24
 219 0124 0222     		mov	r2, #2
 220 0126 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 247:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_ERR_XFER |
 221              		.loc 1 247 0
 222 0128 824B     		ldr	r3, .L43+20
 223 012a 1B88     		ldrh	r3, [r3]
 224 012c 9BB2     		uxth	r3, r3
 225 012e 8822     		mov	r2, #136
 226 0130 9200     		lsl	r2, r2, #2
 227 0132 1343     		orr	r3, r2
 228 0134 9AB2     		uxth	r2, r3
 229 0136 7F4B     		ldr	r3, .L43+20
 230 0138 1A80     		strh	r2, [r3]
 248:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                                  I2C_MPU6050_I2C_MSTAT_ERR_ADDR_NAK
 249:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 250:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 231              		.loc 1 250 0
 232 013a 0123     		mov	r3, #1
 233 013c 3B60     		str	r3, [r7]
 234 013e 15E0     		b	.L15
 235              	.L16:
 251:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 252:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* INTR_TX_UNDERFLOW. The master sent an address:
 253:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     *  - TX direction: the clock is stretched after the ACK phase, because the TX F
 254:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     *    EMPTY. The TX EMPTY cleans all the TX interrupt sources.
 255:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     *  - RX direction: the 1st byte is received, but there is no ACK permission,
 256:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     *    the clock is stretched after 1 byte is received.
 257:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     */
 258:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     else
 259:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 260:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(I2C_MPU6050_CHECK_I2C_FSM_RD) /* Reading */
 236              		.loc 1 260 0
 237 0140 7A4B     		ldr	r3, .L43+12
 238 0142 1B78     		ldrb	r3, [r3]
 239 0144 DAB2     		uxtb	r2, r3
 240 0146 0123     		mov	r3, #1
 241 0148 1340     		and	r3, r2
 242 014a DBB2     		uxtb	r3, r3
 243 014c 002B     		cmp	r3, #0
 244 014e 03D0     		beq	.L17
 261:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 262:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_MSTR_RD_DATA;
 245              		.loc 1 262 0
 246 0150 764B     		ldr	r3, .L43+12
 247 0152 2522     		mov	r2, #37
 248 0154 1A70     		strb	r2, [r3]
 249 0156 09E0     		b	.L15
 250              	.L17:
 263:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 10


 264:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else /* Writing */
 265:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 266:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_MSTR_WR_DATA;
 251              		.loc 1 266 0
 252 0158 744B     		ldr	r3, .L43+12
 253 015a 2422     		mov	r2, #36
 254 015c 1A70     		strb	r2, [r3]
 267:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             if(0u != I2C_MPU6050_mstrWrBufSize)
 255              		.loc 1 267 0
 256 015e 774B     		ldr	r3, .L43+28
 257 0160 1B68     		ldr	r3, [r3]
 258 0162 002B     		cmp	r3, #0
 259 0164 02D0     		beq	.L15
 268:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 269:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 /* Enable INTR.TX_EMPTY if there is data to transmit */
 270:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_INTR_TX_EMPTY);
 260              		.loc 1 270 0
 261 0166 764B     		ldr	r3, .L43+32
 262 0168 1022     		mov	r2, #16
 263 016a 1A60     		str	r2, [r3]
 264              	.L15:
 271:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 272:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 273:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 274:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 275:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 276:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_CHECK_I2C_FSM_DATA) /* Data phase */
 265              		.loc 1 276 0
 266 016c 6F4B     		ldr	r3, .L43+12
 267 016e 1B78     		ldrb	r3, [r3]
 268 0170 DAB2     		uxtb	r2, r3
 269 0172 0423     		mov	r3, #4
 270 0174 1340     		and	r3, r2
 271 0176 DBB2     		uxtb	r3, r3
 272 0178 002B     		cmp	r3, #0
 273 017a 00D1     		bne	.LCB233
 274 017c 15E1     		b	.L18	@long jump
 275              	.LCB233:
 277:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 278:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     if(I2C_MPU6050_CHECK_I2C_FSM_RD) /* Reading */
 276              		.loc 1 278 0
 277 017e 6B4B     		ldr	r3, .L43+12
 278 0180 1B78     		ldrb	r3, [r3]
 279 0182 DAB2     		uxtb	r2, r3
 280 0184 0123     		mov	r3, #1
 281 0186 1340     		and	r3, r2
 282 0188 DBB2     		uxtb	r3, r3
 283 018a 002B     		cmp	r3, #0
 284 018c 5CD0     		beq	.L19
 279:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 280:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* INTR_RX_FULL:
 281:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * RX direction: the master received 8 bytes.
 282:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * Get data from RX FIFO and decide whether to ACK or  NACK the following by
 283:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 284:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(I2C_MPU6050_CHECK_INTR_RX_MASKED(I2C_MPU6050_INTR_RX_FULL))
 285              		.loc 1 284 0
 286 018e 6D4B     		ldr	r3, .L43+36
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 11


 287 0190 1A68     		ldr	r2, [r3]
 288 0192 0823     		mov	r3, #8
 289 0194 1340     		and	r3, r2
 290 0196 34D0     		beq	.L20
 285:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 286:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Calculate difference */
 287:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             diffCount =  I2C_MPU6050_mstrRdBufSize -
 291              		.loc 1 287 0
 292 0198 6B4B     		ldr	r3, .L43+40
 293 019a 1A68     		ldr	r2, [r3]
 288:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                         (I2C_MPU6050_mstrRdBufIndex + I2C_MPU6050_GET_RX_FIFO_ENTRI
 294              		.loc 1 288 0
 295 019c 6B4B     		ldr	r3, .L43+44
 296 019e 1968     		ldr	r1, [r3]
 297 01a0 1F23     		mov	r3, #31
 298 01a2 1940     		and	r1, r3
 299 01a4 6A4B     		ldr	r3, .L43+48
 300 01a6 1B68     		ldr	r3, [r3]
 301 01a8 CB18     		add	r3, r1, r3
 287:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             diffCount =  I2C_MPU6050_mstrRdBufSize -
 302              		.loc 1 287 0
 303 01aa D31A     		sub	r3, r2, r3
 304 01ac 7B60     		str	r3, [r7, #4]
 289:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 290:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Proceed transaction or end it when RX FIFO becomes FULL again */
 291:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             if(diffCount > I2C_MPU6050_I2C_FIFO_SIZE)
 305              		.loc 1 291 0
 306 01ae 7B68     		ldr	r3, [r7, #4]
 307 01b0 082B     		cmp	r3, #8
 308 01b2 02D9     		bls	.L21
 292:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 293:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 diffCount = I2C_MPU6050_I2C_FIFO_SIZE;
 309              		.loc 1 293 0
 310 01b4 0823     		mov	r3, #8
 311 01b6 7B60     		str	r3, [r7, #4]
 312 01b8 0DE0     		b	.L22
 313              	.L21:
 294:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 295:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             else
 296:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 297:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 if(0u == diffCount)
 314              		.loc 1 297 0
 315 01ba 7B68     		ldr	r3, [r7, #4]
 316 01bc 002B     		cmp	r3, #0
 317 01be 0AD1     		bne	.L22
 298:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 {
 299:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     I2C_MPU6050_DISABLE_MASTER_AUTO_DATA_ACK;
 318              		.loc 1 299 0
 319 01c0 644B     		ldr	r3, .L43+52
 320 01c2 644A     		ldr	r2, .L43+52
 321 01c4 1168     		ldr	r1, [r2]
 322 01c6 644A     		ldr	r2, .L43+56
 323 01c8 0A40     		and	r2, r1
 324 01ca 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 301:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     diffCount   = I2C_MPU6050_I2C_FIFO_SIZE;
 325              		.loc 1 301 0
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 12


 326 01cc 0823     		mov	r3, #8
 327 01ce 7B60     		str	r3, [r7, #4]
 302:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 328              		.loc 1 302 0
 329 01d0 0123     		mov	r3, #1
 330 01d2 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 }
 304:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 305:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 306:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             for(; (0u != diffCount); diffCount--)
 331              		.loc 1 306 0
 332 01d4 11E0     		b	.L23
 333              	.L22:
 334 01d6 10E0     		b	.L23
 335              	.L24:
 307:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 308:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_mstrRdBufPtr[I2C_MPU6050_mstrRdBufIndex] = (uint8)
 336              		.loc 1 308 0 discriminator 2
 337 01d8 604B     		ldr	r3, .L43+60
 338 01da 1A68     		ldr	r2, [r3]
 339 01dc 5C4B     		ldr	r3, .L43+48
 340 01de 1B68     		ldr	r3, [r3]
 341 01e0 D218     		add	r2, r2, r3
 309:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                                                         I2C_MPU6050
 342              		.loc 1 309 0 discriminator 2
 343 01e2 5F4B     		ldr	r3, .L43+64
 344 01e4 1B68     		ldr	r3, [r3]
 308:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_mstrRdBufPtr[I2C_MPU6050_mstrRdBufIndex] = (uint8)
 345              		.loc 1 308 0 discriminator 2
 346 01e6 DBB2     		uxtb	r3, r3
 347 01e8 1370     		strb	r3, [r2]
 310:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_mstrRdBufIndex++;
 348              		.loc 1 310 0 discriminator 2
 349 01ea 594B     		ldr	r3, .L43+48
 350 01ec 1B68     		ldr	r3, [r3]
 351 01ee 5A1C     		add	r2, r3, #1
 352 01f0 574B     		ldr	r3, .L43+48
 353 01f2 1A60     		str	r2, [r3]
 306:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             for(; (0u != diffCount); diffCount--)
 354              		.loc 1 306 0 discriminator 2
 355 01f4 7B68     		ldr	r3, [r7, #4]
 356 01f6 013B     		sub	r3, r3, #1
 357 01f8 7B60     		str	r3, [r7, #4]
 358              	.L23:
 306:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             for(; (0u != diffCount); diffCount--)
 359              		.loc 1 306 0 is_stmt 0 discriminator 1
 360 01fa 7B68     		ldr	r3, [r7, #4]
 361 01fc 002B     		cmp	r3, #0
 362 01fe EBD1     		bne	.L24
 363 0200 1EE0     		b	.L25
 364              	.L20:
 311:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 312:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 313:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* INTR_RX_NOT_EMPTY:
 314:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * RX direction: the master received one data byte, ACK or NACK it.
 315:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * The last byte is stored and NACKed by the master. The NACK and Stop is
 316:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * generated by one command generate Stop.
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 13


 317:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 318:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else if(I2C_MPU6050_CHECK_INTR_RX_MASKED(I2C_MPU6050_INTR_RX_NOT_EMPTY))
 365              		.loc 1 318 0 is_stmt 1
 366 0202 504B     		ldr	r3, .L43+36
 367 0204 1A68     		ldr	r2, [r3]
 368 0206 0423     		mov	r3, #4
 369 0208 1340     		and	r3, r2
 370 020a 19D0     		beq	.L25
 319:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 320:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Put data in component buffer */
 321:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrRdBufPtr[I2C_MPU6050_mstrRdBufIndex] = (uint8) I2C_MPU6
 371              		.loc 1 321 0
 372 020c 534B     		ldr	r3, .L43+60
 373 020e 1A68     		ldr	r2, [r3]
 374 0210 4F4B     		ldr	r3, .L43+48
 375 0212 1B68     		ldr	r3, [r3]
 376 0214 D218     		add	r2, r2, r3
 377 0216 524B     		ldr	r3, .L43+64
 378 0218 1B68     		ldr	r3, [r3]
 379 021a DBB2     		uxtb	r3, r3
 380 021c 1370     		strb	r3, [r2]
 322:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrRdBufIndex++;
 381              		.loc 1 322 0
 382 021e 4C4B     		ldr	r3, .L43+48
 383 0220 1B68     		ldr	r3, [r3]
 384 0222 5A1C     		add	r2, r3, #1
 385 0224 4A4B     		ldr	r3, .L43+48
 386 0226 1A60     		str	r2, [r3]
 323:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 324:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             if(I2C_MPU6050_mstrRdBufIndex < I2C_MPU6050_mstrRdBufSize)
 387              		.loc 1 324 0
 388 0228 494B     		ldr	r3, .L43+48
 389 022a 1A68     		ldr	r2, [r3]
 390 022c 464B     		ldr	r3, .L43+40
 391 022e 1B68     		ldr	r3, [r3]
 392 0230 9A42     		cmp	r2, r3
 393 0232 03D2     		bcs	.L26
 325:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 326:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_I2C_MASTER_GENERATE_ACK;
 394              		.loc 1 326 0
 395 0234 4B4B     		ldr	r3, .L43+68
 396 0236 0422     		mov	r2, #4
 397 0238 1A60     		str	r2, [r3]
 398 023a 01E0     		b	.L25
 399              	.L26:
 327:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 328:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             else
 329:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 330:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 400              		.loc 1 330 0
 401 023c 0123     		mov	r3, #1
 402 023e 3B60     		str	r3, [r7]
 403              	.L25:
 331:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 332:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 333:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else
 334:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 14


 335:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Do nothing */
 336:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 337:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 338:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_ClearRxInterruptSource(I2C_MPU6050_INTR_RX_ALL);
 404              		.loc 1 338 0 discriminator 3
 405 0240 494B     		ldr	r3, .L43+72
 406 0242 4A4A     		ldr	r2, .L43+76
 407 0244 1A60     		str	r2, [r3]
 408 0246 B0E0     		b	.L18
 409              	.L19:
 339:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 340:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     else /* Writing */
 341:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 342:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* INTR_MASTER_I2C_NACK :
 343:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * The master writes data to the slave and NACK was received: not all the by
 344:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * written to the slave from the TX FIFO. Revert the index if there is data 
 345:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * the TX FIFO and pass control to a complete transfer.
 346:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 347:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(I2C_MPU6050_CHECK_INTR_MASTER_MASKED(I2C_MPU6050_INTR_MASTER_I2C_NACK))
 410              		.loc 1 347 0
 411 0248 394B     		ldr	r3, .L43+16
 412 024a 1A68     		ldr	r2, [r3]
 413 024c 0223     		mov	r3, #2
 414 024e 1340     		and	r3, r2
 415 0250 32D0     		beq	.L28
 348:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 349:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_ClearMasterInterruptSource(I2C_MPU6050_INTR_MASTER_I2C_NACK
 416              		.loc 1 349 0
 417 0252 394B     		ldr	r3, .L43+24
 418 0254 0222     		mov	r2, #2
 419 0256 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 351:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Rollback write buffer index: NACKed byte remains in shifter */
 352:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrWrBufIndexTmp -= (I2C_MPU6050_GET_TX_FIFO_ENTRIES +
 420              		.loc 1 352 0
 421 0258 454B     		ldr	r3, .L43+80
 422 025a 1A68     		ldr	r2, [r3]
 423 025c 454B     		ldr	r3, .L43+84
 424 025e 1968     		ldr	r1, [r3]
 425 0260 1F23     		mov	r3, #31
 426 0262 1940     		and	r1, r3
 353:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                                    I2C_MPU6050_GET_TX_FIFO_SR_VALID
 427              		.loc 1 353 0
 428 0264 434B     		ldr	r3, .L43+84
 429 0266 1868     		ldr	r0, [r3]
 430 0268 8023     		mov	r3, #128
 431 026a 1B02     		lsl	r3, r3, #8
 432 026c 0340     		and	r3, r0
 352:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrWrBufIndexTmp -= (I2C_MPU6050_GET_TX_FIFO_ENTRIES +
 433              		.loc 1 352 0
 434 026e 01D0     		beq	.L29
 352:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrWrBufIndexTmp -= (I2C_MPU6050_GET_TX_FIFO_ENTRIES +
 435              		.loc 1 352 0 is_stmt 0 discriminator 1
 436 0270 0123     		mov	r3, #1
 437 0272 00E0     		b	.L30
 438              	.L29:
 352:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrWrBufIndexTmp -= (I2C_MPU6050_GET_TX_FIFO_ENTRIES +
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 15


 439              		.loc 1 352 0 discriminator 2
 440 0274 0023     		mov	r3, #0
 441              	.L30:
 352:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrWrBufIndexTmp -= (I2C_MPU6050_GET_TX_FIFO_ENTRIES +
 442              		.loc 1 352 0 discriminator 5
 443 0276 CB18     		add	r3, r1, r3
 444 0278 D21A     		sub	r2, r2, r3
 445 027a 3D4B     		ldr	r3, .L43+80
 446 027c 1A60     		str	r2, [r3]
 354:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 355:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Update number of transferred bytes */
 356:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrWrBufIndex = I2C_MPU6050_mstrWrBufIndexTmp;
 447              		.loc 1 356 0 is_stmt 1 discriminator 5
 448 027e 3C4B     		ldr	r3, .L43+80
 449 0280 1A68     		ldr	r2, [r3]
 450 0282 3D4B     		ldr	r3, .L43+88
 451 0284 1A60     		str	r2, [r3]
 357:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 358:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_ERR_XFER |
 452              		.loc 1 358 0 discriminator 5
 453 0286 2B4B     		ldr	r3, .L43+20
 454 0288 1B88     		ldrh	r3, [r3]
 455 028a 9BB2     		uxth	r3, r3
 456 028c 8422     		mov	r2, #132
 457 028e 9200     		lsl	r2, r2, #2
 458 0290 1343     		orr	r3, r2
 459 0292 9AB2     		uxth	r2, r3
 460 0294 274B     		ldr	r3, .L43+20
 461 0296 1A80     		strh	r2, [r3]
 359:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                                      I2C_MPU6050_I2C_MSTAT_ERR_SHOR
 360:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 361:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_CLEAR_TX_FIFO;
 462              		.loc 1 361 0 discriminator 5
 463 0298 384B     		ldr	r3, .L43+92
 464 029a 384A     		ldr	r2, .L43+92
 465 029c 1268     		ldr	r2, [r2]
 466 029e 8021     		mov	r1, #128
 467 02a0 4902     		lsl	r1, r1, #9
 468 02a2 0A43     		orr	r2, r1
 469 02a4 1A60     		str	r2, [r3]
 470 02a6 354B     		ldr	r3, .L43+92
 471 02a8 344A     		ldr	r2, .L43+92
 472 02aa 1168     		ldr	r1, [r2]
 473 02ac 344A     		ldr	r2, .L43+96
 474 02ae 0A40     		and	r2, r1
 475 02b0 1A60     		str	r2, [r3]
 362:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 363:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 476              		.loc 1 363 0 discriminator 5
 477 02b2 0123     		mov	r3, #1
 478 02b4 3B60     		str	r3, [r7]
 479 02b6 78E0     		b	.L18
 480              	.L28:
 364:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 365:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* INTR_TX_EMPTY :
 366:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * TX direction: the TX FIFO is EMPTY, the data from the buffer needs to be 
 367:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * When there is no data in the component buffer, the underflow interrupt is
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 16


 368:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * enabled to catch when all the data has been transferred.
 369:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 370:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else if(I2C_MPU6050_CHECK_INTR_TX_MASKED(I2C_MPU6050_INTR_TX_EMPTY))
 481              		.loc 1 370 0
 482 02b8 324B     		ldr	r3, .L43+100
 483 02ba 1A68     		ldr	r2, [r3]
 484 02bc 1023     		mov	r3, #16
 485 02be 1340     		and	r3, r2
 486 02c0 68D0     		beq	.L31
 371:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 372:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             while(I2C_MPU6050_I2C_FIFO_SIZE != I2C_MPU6050_GET_TX_FIFO_ENTRIES)
 487              		.loc 1 372 0
 488 02c2 22E0     		b	.L32
 489              	.L36:
 373:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 374:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 /* The temporary mstrWrBufIndexTmp is used because slave could NACK
 375:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 * roll-back required in this case. The mstrWrBufIndex is updated at
 376:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 */
 377:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 if(I2C_MPU6050_mstrWrBufIndexTmp < I2C_MPU6050_mstrWrBufSize)
 490              		.loc 1 377 0
 491 02c4 2A4B     		ldr	r3, .L43+80
 492 02c6 1A68     		ldr	r2, [r3]
 493 02c8 1C4B     		ldr	r3, .L43+28
 494 02ca 1B68     		ldr	r3, [r3]
 495 02cc 9A42     		cmp	r2, r3
 496 02ce 1BD2     		bcs	.L33
 378:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 {
 379:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 #if(!I2C_MPU6050_CY_SCBIP_V0)
 380:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                    /* Clear INTR_TX.UNDERFLOW before putting the last byte into TX 
 381:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     * a proper trigger at the end of transaction when INTR_TX.UNDER
 382:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     * event. Ticket ID# 156735.
 383:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     */
 384:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     if(I2C_MPU6050_mstrWrBufIndexTmp == (I2C_MPU6050_mstrWrBufSize 
 497              		.loc 1 384 0
 498 02d0 1A4B     		ldr	r3, .L43+28
 499 02d2 1B68     		ldr	r3, [r3]
 500 02d4 5A1E     		sub	r2, r3, #1
 501 02d6 264B     		ldr	r3, .L43+80
 502 02d8 1B68     		ldr	r3, [r3]
 503 02da 9A42     		cmp	r2, r3
 504 02dc 05D1     		bne	.L34
 385:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     {
 386:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                         I2C_MPU6050_ClearTxInterruptSource(I2C_MPU6050_INTR_TX_UNDE
 505              		.loc 1 386 0
 506 02de 2A4B     		ldr	r3, .L43+104
 507 02e0 4022     		mov	r2, #64
 508 02e2 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                         I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_INTR_TX_UNDERFLO
 509              		.loc 1 387 0
 510 02e4 164B     		ldr	r3, .L43+32
 511 02e6 4022     		mov	r2, #64
 512 02e8 1A60     		str	r2, [r3]
 513              	.L34:
 388:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     }
 389:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                  #endif /* (!I2C_MPU6050_CY_SCBIP_V0) */
 390:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 391:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     /* Put data into TX FIFO */
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 17


 392:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     I2C_MPU6050_TX_FIFO_WR_REG = (uint32) I2C_MPU6050_mstrWrBufPtr[
 514              		.loc 1 392 0
 515 02ea 284B     		ldr	r3, .L43+108
 516 02ec 284A     		ldr	r2, .L43+112
 517 02ee 1168     		ldr	r1, [r2]
 518 02f0 1F4A     		ldr	r2, .L43+80
 519 02f2 1268     		ldr	r2, [r2]
 520 02f4 8A18     		add	r2, r1, r2
 521 02f6 1278     		ldrb	r2, [r2]
 522 02f8 D2B2     		uxtb	r2, r2
 523 02fa 1A60     		str	r2, [r3]
 393:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     I2C_MPU6050_mstrWrBufIndexTmp++;
 524              		.loc 1 393 0
 525 02fc 1C4B     		ldr	r3, .L43+80
 526 02fe 1B68     		ldr	r3, [r3]
 527 0300 5A1C     		add	r2, r3, #1
 528 0302 1B4B     		ldr	r3, .L43+80
 529 0304 1A60     		str	r2, [r3]
 530 0306 00E0     		b	.L32
 531              	.L33:
 394:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 }
 395:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 else
 396:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 {
 397:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                     break; /* No more data to put */
 532              		.loc 1 397 0
 533 0308 05E0     		b	.L35
 534              	.L32:
 372:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             while(I2C_MPU6050_I2C_FIFO_SIZE != I2C_MPU6050_GET_TX_FIFO_ENTRIES)
 535              		.loc 1 372 0 discriminator 1
 536 030a 1A4B     		ldr	r3, .L43+84
 537 030c 1A68     		ldr	r2, [r3]
 538 030e 1F23     		mov	r3, #31
 539 0310 1340     		and	r3, r2
 540 0312 082B     		cmp	r3, #8
 541 0314 D6D1     		bne	.L36
 542              	.L35:
 398:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 }
 399:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 400:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 401:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         #if(I2C_MPU6050_CY_SCBIP_V0)
 402:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             if(I2C_MPU6050_mstrWrBufIndexTmp == I2C_MPU6050_mstrWrBufSize)
 403:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 404:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_INTR_TX_UNDERFLOW);
 405:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 406:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 407:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_ClearTxInterruptSource(I2C_MPU6050_INTR_TX_ALL);
 408:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         #else
 409:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_ClearTxInterruptSource(I2C_MPU6050_INTR_TX_EMPTY);
 543              		.loc 1 409 0
 544 0316 1C4B     		ldr	r3, .L43+104
 545 0318 1022     		mov	r2, #16
 546 031a 1A60     		str	r2, [r3]
 547 031c 45E0     		b	.L18
 548              	.L44:
 549 031e C046     		.align	2
 550              	.L43:
 551 0320 00000000 		.word	I2C_MPU6050_customIntrHandler
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 18


 552 0324 8C0E2540 		.word	1076170380
 553 0328 880E2540 		.word	1076170376
 554 032c 00000000 		.word	I2C_MPU6050_state
 555 0330 0C0F2540 		.word	1076170508
 556 0334 00000000 		.word	I2C_MPU6050_mstrStatus
 557 0338 000F2540 		.word	1076170496
 558 033c 00000000 		.word	I2C_MPU6050_mstrWrBufSize
 559 0340 880F2540 		.word	1076170632
 560 0344 CC0F2540 		.word	1076170700
 561 0348 00000000 		.word	I2C_MPU6050_mstrRdBufSize
 562 034c 08032540 		.word	1076167432
 563 0350 00000000 		.word	I2C_MPU6050_mstrRdBufIndex
 564 0354 60002540 		.word	1076166752
 565 0358 FFFEFFFF 		.word	-257
 566 035c 00000000 		.word	I2C_MPU6050_mstrRdBufPtr
 567 0360 40032540 		.word	1076167488
 568 0364 68002540 		.word	1076166760
 569 0368 C00F2540 		.word	1076170688
 570 036c ED0F0000 		.word	4077
 571 0370 00000000 		.word	I2C_MPU6050_mstrWrBufIndexTmp
 572 0374 08022540 		.word	1076167176
 573 0378 00000000 		.word	I2C_MPU6050_mstrWrBufIndex
 574 037c 04022540 		.word	1076167172
 575 0380 FFFFFEFF 		.word	-65537
 576 0384 8C0F2540 		.word	1076170636
 577 0388 800F2540 		.word	1076170624
 578 038c 40022540 		.word	1076167232
 579 0390 00000000 		.word	I2C_MPU6050_mstrWrBufPtr
 580              	.L31:
 410:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         #endif /* (I2C_MPU6050_CY_SCBIP_V0) */
 411:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 412:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* INTR_TX_UNDERFLOW:
 413:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * TX direction: all data from the TX FIFO was transferred to the slave.
 414:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * The transaction needs to be completed.
 415:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 416:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else if(I2C_MPU6050_CHECK_INTR_TX_MASKED(I2C_MPU6050_INTR_TX_UNDERFLOW))
 581              		.loc 1 416 0
 582 0394 364B     		ldr	r3, .L45
 583 0396 1A68     		ldr	r2, [r3]
 584 0398 4023     		mov	r3, #64
 585 039a 1340     		and	r3, r2
 586 039c 05D0     		beq	.L18
 417:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 418:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Update number of transferred bytes */
 419:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_mstrWrBufIndex = I2C_MPU6050_mstrWrBufIndexTmp;
 587              		.loc 1 419 0
 588 039e 354B     		ldr	r3, .L45+4
 589 03a0 1A68     		ldr	r2, [r3]
 590 03a2 354B     		ldr	r3, .L45+8
 591 03a4 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 421:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 592              		.loc 1 421 0
 593 03a6 0123     		mov	r3, #1
 594 03a8 3B60     		str	r3, [r7]
 595              	.L18:
 422:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 19


 423:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else
 424:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 425:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Do nothing */
 426:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 427:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 428:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 429:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 430:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(0u != endTransfer) /* Complete transfer */
 596              		.loc 1 430 0
 597 03aa 3B68     		ldr	r3, [r7]
 598 03ac 002B     		cmp	r3, #0
 599 03ae 5CD0     		beq	.L1
 431:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 432:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Clean-up master after reading: only in case of NACK */
 433:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_DISABLE_MASTER_AUTO_DATA_ACK;
 600              		.loc 1 433 0
 601 03b0 324B     		ldr	r3, .L45+12
 602 03b2 324A     		ldr	r2, .L45+12
 603 03b4 1168     		ldr	r1, [r2]
 604 03b6 324A     		ldr	r2, .L45+16
 605 03b8 0A40     		and	r2, r1
 606 03ba 1A60     		str	r2, [r3]
 434:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 435:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Disable data processing interrupts: they have to be cleared before */
 436:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 607              		.loc 1 436 0
 608 03bc 314B     		ldr	r3, .L45+20
 609 03be 0022     		mov	r2, #0
 610 03c0 1A60     		str	r2, [r3]
 437:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 611              		.loc 1 437 0
 612 03c2 314B     		ldr	r3, .L45+24
 613 03c4 0022     		mov	r2, #0
 614 03c6 1A60     		str	r2, [r3]
 438:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 439:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     if(I2C_MPU6050_CHECK_I2C_MODE_NO_STOP(I2C_MPU6050_mstrControl))
 615              		.loc 1 439 0
 616 03c8 304B     		ldr	r3, .L45+28
 617 03ca 1B78     		ldrb	r3, [r3]
 618 03cc DAB2     		uxtb	r2, r3
 619 03ce 0223     		mov	r3, #2
 620 03d0 1340     		and	r3, r2
 621 03d2 DBB2     		uxtb	r3, r3
 622 03d4 002B     		cmp	r3, #0
 623 03d6 19D0     		beq	.L37
 440:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 441:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* On-going transaction is suspended: the ReStart is generated by the API r
 442:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_XFER_HALT |
 443:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                                                  I2C_MPU6050_GET_I2C_MSTAT_CMPLT);
 624              		.loc 1 443 0
 625 03d8 2D4B     		ldr	r3, .L45+32
 626 03da 1B78     		ldrb	r3, [r3]
 627 03dc DAB2     		uxtb	r2, r3
 628 03de 0123     		mov	r3, #1
 629 03e0 1340     		and	r3, r2
 630 03e2 DBB2     		uxtb	r3, r3
 442:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_XFER_HALT |
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 20


 631              		.loc 1 442 0
 632 03e4 002B     		cmp	r3, #0
 633 03e6 01D0     		beq	.L38
 442:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_XFER_HALT |
 634              		.loc 1 442 0 is_stmt 0 discriminator 1
 635 03e8 0923     		mov	r3, #9
 636 03ea 00E0     		b	.L39
 637              	.L38:
 442:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_XFER_HALT |
 638              		.loc 1 442 0 discriminator 2
 639 03ec 0A23     		mov	r3, #10
 640              	.L39:
 442:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_mstrStatus |= (uint16) (I2C_MPU6050_I2C_MSTAT_XFER_HALT |
 641              		.loc 1 442 0 discriminator 6
 642 03ee 294A     		ldr	r2, .L45+36
 643 03f0 1288     		ldrh	r2, [r2]
 644 03f2 92B2     		uxth	r2, r2
 645 03f4 91B2     		uxth	r1, r2
 646 03f6 1A1C     		add	r2, r3, #0
 647 03f8 0B1C     		add	r3, r1, #0
 648 03fa 1343     		orr	r3, r2
 649 03fc 9BB2     		uxth	r3, r3
 650 03fe 9AB2     		uxth	r2, r3
 651 0400 244B     		ldr	r3, .L45+36
 652 0402 1A80     		strh	r2, [r3]
 444:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 445:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_MSTR_HALT;
 653              		.loc 1 445 0 is_stmt 1 discriminator 6
 654 0404 224B     		ldr	r3, .L45+32
 655 0406 6022     		mov	r2, #96
 656 0408 1A70     		strb	r2, [r3]
 657 040a 2EE0     		b	.L1
 658              	.L37:
 446:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 447:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     else
 448:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 449:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Complete transaction: exclude the data processing state and generate Sto
 450:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * The completion status will be set after Stop generation.
 451:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * A special case is read: because NACK and Stop are generated by the comman
 452:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * Lost arbitration can occur during NACK generation when
 453:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * the other master is still reading from the slave.
 454:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 455:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_I2C_MASTER_GENERATE_STOP;
 659              		.loc 1 455 0
 660 040c 224B     		ldr	r3, .L45+40
 661 040e 234A     		ldr	r2, .L45+44
 662 0410 1168     		ldr	r1, [r2]
 663 0412 2022     		mov	r2, #32
 664 0414 0A40     		and	r2, r1
 665 0416 01D0     		beq	.L40
 666              		.loc 1 455 0 is_stmt 0 discriminator 1
 667 0418 1822     		mov	r2, #24
 668 041a 00E0     		b	.L41
 669              	.L40:
 670              		.loc 1 455 0 discriminator 2
 671 041c 1022     		mov	r2, #16
 672              	.L41:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 21


 673              		.loc 1 455 0 discriminator 3
 674 041e 1A60     		str	r2, [r3]
 675 0420 23E0     		b	.L1
 676              	.L10:
 456:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 457:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 458:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 459:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 460:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         } /* (I2C_MPU6050_I2C_MASTER) */
 461:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #endif
 462:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 463:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     } /* (I2C_MPU6050_CHECK_I2C_FSM_MASTER) */
 464:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 465:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 466:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     /* FSM Slave */
 467:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     else if(I2C_MPU6050_CHECK_I2C_FSM_SLAVE)
 677              		.loc 1 467 0 is_stmt 1
 678 0422 1B4B     		ldr	r3, .L45+32
 679 0424 1B78     		ldrb	r3, [r3]
 680 0426 DAB2     		uxtb	r2, r3
 681 0428 1023     		mov	r3, #16
 682 042a 1340     		and	r3, r2
 683 042c DBB2     		uxtb	r3, r3
 684 042e 002B     		cmp	r3, #0
 685 0430 1BD1     		bne	.L1
 468:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     {
 469:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #if(I2C_MPU6050_I2C_SLAVE)
 470:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         {
 471:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* INTR_SLAVE_NACK:
 472:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The master completes reading the slave: the appropriate flags have to be set.
 473:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The TX FIFO is cleared after an overflow condition is set.
 474:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 475:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_SLAVE_MASKED(I2C_MPU6050_INTR_SLAVE_I2C_NACK))
 476:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 477:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearSlaveInterruptSource(I2C_MPU6050_INTR_SLAVE_I2C_NACK);
 478:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 479:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* All entries that remain in TX FIFO max value is 9: 8 (FIFO) + 1 (SHIFTER) */
 480:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 diffCount = (I2C_MPU6050_GET_TX_FIFO_ENTRIES + I2C_MPU6050_GET_TX_FIFO_SR_VALID);
 481:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 482:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_slOverFlowCount > diffCount) /* Overflow */
 483:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 484:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus |= (uint8) I2C_MPU6050_I2C_SSTAT_RD_OVFL;
 485:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 486:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 else /* No Overflow */
 487:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 488:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Roll-back temporary index */
 489:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slRdBufIndexTmp -= (diffCount - I2C_MPU6050_slOverFlowCount);
 490:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 491:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 492:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Update slave of transferred bytes */
 493:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_slRdBufIndex = I2C_MPU6050_slRdBufIndexTmp;
 494:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 495:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Clean-up TX FIFO */
 496:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 497:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_slOverFlowCount = 0u;
 498:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_CLEAR_TX_FIFO;
 499:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 22


 500:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Complete master reading */
 501:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_slStatus &= (uint8) ~I2C_MPU6050_I2C_SSTAT_RD_BUSY;
 502:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_slStatus |= (uint8)  I2C_MPU6050_I2C_SSTAT_RD_CMPLT;
 503:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_state     =  I2C_MPU6050_I2C_FSM_IDLE;
 504:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 505:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 506:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 507:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* INTR_SLAVE_I2C_WRITE_STOP:
 508:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The master completes writing to the slave: the appropriate flags have to be set.
 509:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The RX FIFO contains 1-8 bytes from the previous transaction which needs to be read.
 510:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * There is a possibility that RX FIFO contains an address, it needs to leave it there.
 511:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 512:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_SLAVE_MASKED(I2C_MPU6050_INTR_SLAVE_I2C_WRITE_STOP))
 513:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 514:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearSlaveInterruptSource(I2C_MPU6050_INTR_SLAVE_I2C_WRITE_STOP);
 515:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 516:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Read bytes from RX FIFO when auto data ACK receive logic is enabled. Otherwise a
 517:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 * were already read from the RX FIFO except for address byte which has to stay here
 518:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 * I2C_ADDR_MATCH.
 519:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 */
 520:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if (0u != (I2C_MPU6050_I2C_CTRL_REG & I2C_MPU6050_I2C_CTRL_S_READY_DATA_ACK))
 521:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 522:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     while(0u != I2C_MPU6050_GET_RX_FIFO_ENTRIES)
 523:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 524:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         #if(I2C_MPU6050_CHECK_I2C_ACCEPT_ADDRESS)
 525:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 526:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             if((1u == I2C_MPU6050_GET_RX_FIFO_ENTRIES) &&
 527:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                (I2C_MPU6050_CHECK_INTR_SLAVE_MASKED(I2C_MPU6050_INTR_SLAVE_I2C_ADDR
 528:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 529:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 break; /* Leave address in RX FIFO */
 530:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 531:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 532:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         #endif
 533:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 534:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Put data in component buffer */
 535:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_slWrBufPtr[I2C_MPU6050_slWrBufIndex] = (uint8) I2C_MPU6050_RX_F
 536:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_slWrBufIndex++;
 537:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 538:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 539:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_DISABLE_SLAVE_AUTO_DATA;
 540:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 541:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 542:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_CHECK_INTR_RX(I2C_MPU6050_INTR_RX_OVERFLOW))
 543:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 544:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus |= (uint8) I2C_MPU6050_I2C_SSTAT_WR_OVFL;
 545:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 546:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 547:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Clears RX interrupt sources triggered on data receiving */
 548:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 549:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearRxInterruptSource(I2C_MPU6050_INTR_RX_ALL);
 550:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 551:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Complete master writing */
 552:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_slStatus &= (uint8) ~I2C_MPU6050_I2C_SSTAT_WR_BUSY;
 553:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_slStatus |= (uint8)  I2C_MPU6050_I2C_SSTAT_WR_CMPLT;
 554:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_state     =  I2C_MPU6050_I2C_FSM_IDLE;
 555:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 556:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 23


 557:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 558:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* INTR_SLAVE_I2C_ADDR_MATCH:
 559:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The address match event starts the slave operation: after leaving the TX or RX
 560:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * direction has to be chosen.
 561:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The wakeup interrupt must be cleared only after an address match is set.
 562:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 563:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_SLAVE_MASKED(I2C_MPU6050_INTR_SLAVE_I2C_ADDR_MATCH))
 564:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 565:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #if(I2C_MPU6050_CHECK_I2C_ACCEPT_ADDRESS)
 566:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 567:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     address = I2C_MPU6050_RX_FIFO_RD_REG; /* Address in the RX FIFO */
 568:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 569:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Clears RX sources if address was received in RX FIFO */
 570:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_ClearRxInterruptSource(I2C_MPU6050_INTR_RX_ALL);
 571:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 572:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     if(0u != address)
 573:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 574:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Suppress compiler warning */
 575:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 576:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 577:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #endif
 578:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 579:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_CHECK_I2C_STATUS(I2C_MPU6050_I2C_STATUS_S_READ))
 580:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* TX direction: master reads from slave */
 581:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 582:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_INTR_TX_EMPTY);
 583:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 584:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Set temporary index to address buffer clear from API */
 585:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slRdBufIndexTmp = I2C_MPU6050_slRdBufIndex;
 586:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 587:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Start master reading */
 588:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus |= (uint8) I2C_MPU6050_I2C_SSTAT_RD_BUSY;
 589:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_state     = I2C_MPU6050_I2C_FSM_SL_RD;
 590:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 591:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 else
 592:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* RX direction: master writes into slave */
 593:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 594:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Calculate available buffer size */
 595:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     diffCount = (I2C_MPU6050_slWrBufSize - I2C_MPU6050_slWrBufIndex);
 596:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 597:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #if (I2C_MPU6050_CY_SCBIP_V0)
 598:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 599:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     if(diffCount < I2C_MPU6050_I2C_FIFO_SIZE)
 600:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Receive data: byte-by-byte */
 601:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 602:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_INTR_RX_NOT_EMPTY);
 603:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 604:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     else
 605:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Receive data: into RX FIFO */
 606:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 607:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(diffCount == I2C_MPU6050_I2C_FIFO_SIZE)
 608:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 609:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* NACK when RX FIFO become FULL */
 610:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_ENABLE_SLAVE_AUTO_DATA;
 611:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 612:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else
 613:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 24


 614:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Stretch clock when RX FIFO becomes FULL */
 615:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_ENABLE_SLAVE_AUTO_DATA_ACK;
 616:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_INTR_RX_FULL);
 617:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 618:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 619:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 620:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #else
 621:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 622:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     #if(I2C_MPU6050_CHECK_I2C_ACCEPT_ADDRESS)
 623:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 624:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Enable RX.NOT_EMPTY interrupt source to receive byte by byte.
 625:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * The byte by byte receive is always chosen for the case when an address is
 626:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         * Ticket ID#175559.
 627:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         */
 628:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_INTR_RX_NOT_EMPTY);
 629:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 630:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     #else
 631:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 632:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(diffCount < I2C_MPU6050_I2C_FIFO_SIZE)
 633:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Receive data: byte-by-byte */
 634:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 635:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_INTR_RX_NOT_EMPTY);
 636:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 637:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         else
 638:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         /* Receive data: into RX FIFO */
 639:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 640:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             if(diffCount == I2C_MPU6050_I2C_FIFO_SIZE)
 641:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 642:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 /* NACK when RX FIFO become FULL */
 643:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_ENABLE_SLAVE_AUTO_DATA;
 644:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 645:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             else
 646:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             {
 647:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 /* Stretch clock when RX FIFO becomes FULL */
 648:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_ENABLE_SLAVE_AUTO_DATA_ACK;
 649:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                                 I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_INTR_RX_FULL);
 650:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             }
 651:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 652:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 653:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     #endif
 654:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 655:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 #endif /* (I2C_MPU6050_CY_SCBIP_V0) */
 656:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 657:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Start master reading */
 658:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus |= (uint8) I2C_MPU6050_I2C_SSTAT_WR_BUSY;
 659:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_state     = I2C_MPU6050_I2C_FSM_SL_WR;
 660:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 661:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 662:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Clear interrupts before ACK address */
 663:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearI2CExtClkInterruptSource(I2C_MPU6050_INTR_I2C_EC_WAKE_UP);
 664:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearSlaveInterruptSource(I2C_MPU6050_INTR_SLAVE_ALL);
 665:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 666:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Preparation complete: ACK the address */
 667:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_I2C_SLAVE_GENERATE_ACK;
 668:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 669:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 670:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* I2C_MPU6050_INTR_RX_FULL:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 25


 671:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * Get data from the RX FIFO and decide whether to ACK or NACK the following bytes
 672:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 673:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_RX_MASKED(I2C_MPU6050_INTR_RX_FULL))
 674:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 675:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Calculate available buffer size to take into account that RX FIFO is FULL */
 676:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 diffCount =  I2C_MPU6050_slWrBufSize -
 677:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             (I2C_MPU6050_slWrBufIndex + I2C_MPU6050_I2C_FIFO_SIZE);
 678:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 679:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(diffCount > I2C_MPU6050_I2C_FIFO_SIZE) /* Proceed transaction */
 680:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 681:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     diffCount   = I2C_MPU6050_I2C_FIFO_SIZE;
 682:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     endTransfer = 0u;  /* Continue active transfer */
 683:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 684:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 else /* End when FIFO becomes FULL again */
 685:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 686:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     endTransfer = I2C_MPU6050_I2C_CMPLT_ANY_TRANSFER;
 687:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 688:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 689:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 for(; (0u != diffCount); diffCount--)
 690:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 691:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Put data in component buffer */
 692:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slWrBufPtr[I2C_MPU6050_slWrBufIndex] = (uint8) I2C_MPU6050_RX_FIFO_
 693:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slWrBufIndex++;
 694:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 695:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 696:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(0u != endTransfer) /* End transfer sending NACK */
 697:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 698:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_ENABLE_SLAVE_AUTO_DATA_NACK;
 699:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 700:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* INTR_RX_FULL triggers earlier than INTR_SLAVE_I2C_STOP:
 701:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     * disable all RX interrupt sources.
 702:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     */
 703:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 704:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 705:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 706:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearRxInterruptSource(I2C_MPU6050_INTR_RX_FULL);
 707:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 708:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* I2C_MPU6050_INTR_RX_NOT_EMPTY:
 709:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The buffer size is less than 8: it requires processing in byte-by-byte mode.
 710:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 711:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             else if(I2C_MPU6050_CHECK_INTR_RX_MASKED(I2C_MPU6050_INTR_RX_NOT_EMPTY))
 712:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 713:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 diffCount = I2C_MPU6050_RX_FIFO_RD_REG;
 714:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 715:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 if(I2C_MPU6050_slWrBufIndex < I2C_MPU6050_slWrBufSize)
 716:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 717:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_I2C_SLAVE_GENERATE_ACK;
 718:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 719:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Put data into component buffer */
 720:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slWrBufPtr[I2C_MPU6050_slWrBufIndex] = (uint8) diffCount;
 721:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slWrBufIndex++;
 722:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 723:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 else /* Overflow: there is no space in write buffer */
 724:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 725:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_I2C_SLAVE_GENERATE_NACK;
 726:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 727:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     I2C_MPU6050_slStatus |= (uint8) I2C_MPU6050_I2C_SSTAT_WR_OVFL;
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 26


 728:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 729:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 730:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearRxInterruptSource(I2C_MPU6050_INTR_RX_NOT_EMPTY);
 731:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 732:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             else
 733:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 734:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 /* Does nothing */
 735:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 736:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 737:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 738:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             /* I2C_MPU6050_INTR_TX_EMPTY:
 739:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The master reads the slave: provide data to read or 0xFF in the case of the end of th
 740:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * The overflow condition must be captured, but not set until the end of transaction.
 741:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             * There is a possibility of a false overflow due to TX FIFO utilization.
 742:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             */
 743:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             if(I2C_MPU6050_CHECK_INTR_TX_MASKED(I2C_MPU6050_INTR_TX_EMPTY))
 744:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             {
 745:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 while(I2C_MPU6050_I2C_FIFO_SIZE != I2C_MPU6050_GET_TX_FIFO_ENTRIES)
 746:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 {
 747:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Temporary slRdBufIndexTmp is used because the master can NACK the byte and
 748:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     * index roll-back is required in this case. The slRdBufIndex is updated at the 
 749:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     * of the read transfer.
 750:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     */
 751:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     if(I2C_MPU6050_slRdBufIndexTmp < I2C_MPU6050_slRdBufSize)
 752:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Data from buffer */
 753:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 754:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_TX_FIFO_WR_REG = (uint32) I2C_MPU6050_slRdBufPtr[I2C_MPU6050_sl
 755:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_slRdBufIndexTmp++;
 756:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 757:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     else
 758:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     /* Probably Overflow */
 759:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     {
 760:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         I2C_MPU6050_TX_FIFO_WR_REG = I2C_MPU6050_I2C_SLAVE_OVFL_RETURN;
 761:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 762:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         if(0u == (I2C_MPU6050_INTR_TX_OVERFLOW & I2C_MPU6050_slOverFlowCount))
 763:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         {
 764:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             /* Get counter in range of byte: value 10 is overflow */
 765:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                             I2C_MPU6050_slOverFlowCount++;
 766:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                         }
 767:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                     }
 768:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 }
 769:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 770:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****                 I2C_MPU6050_ClearTxInterruptSource(I2C_MPU6050_INTR_TX_EMPTY);
 771:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****             }
 772:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 773:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         }  /* (I2C_MPU6050_I2C_SLAVE) */
 774:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         #endif
 775:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     }
 776:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 777:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 778:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     /* FSM EXIT:
 779:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * Slave:  INTR_SLAVE_I2C_BUS_ERROR, INTR_SLAVE_I2C_ARB_LOST
 780:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     * Master: INTR_MASTER_I2C_BUS_ERROR, INTR_MASTER_I2C_ARB_LOST.
 781:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     */
 782:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     else
 783:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     {
 784:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_CTRL_REG &= (uint32) ~I2C_MPU6050_CTRL_ENABLED; /* Disable scb IP */
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 27


 686              		.loc 1 784 0
 687 0432 1B4B     		ldr	r3, .L45+48
 688 0434 1A4A     		ldr	r2, .L45+48
 689 0436 1268     		ldr	r2, [r2]
 690 0438 5200     		lsl	r2, r2, #1
 691 043a 5208     		lsr	r2, r2, #1
 692 043c 1A60     		str	r2, [r3]
 785:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 786:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_state = I2C_MPU6050_I2C_FSM_IDLE;
 693              		.loc 1 786 0
 694 043e 144B     		ldr	r3, .L45+32
 695 0440 1022     		mov	r2, #16
 696 0442 1A70     		strb	r2, [r3]
 787:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 788:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_DISABLE_SLAVE_AUTO_DATA;
 697              		.loc 1 788 0
 698 0444 0D4B     		ldr	r3, .L45+12
 699 0446 0D4A     		ldr	r2, .L45+12
 700 0448 1168     		ldr	r1, [r2]
 701 044a 164A     		ldr	r2, .L45+52
 702 044c 0A40     		and	r2, r1
 703 044e 1A60     		str	r2, [r3]
 789:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_DISABLE_MASTER_AUTO_DATA;
 704              		.loc 1 789 0
 705 0450 0A4B     		ldr	r3, .L45+12
 706 0452 0A4A     		ldr	r2, .L45+12
 707 0454 1168     		ldr	r1, [r2]
 708 0456 144A     		ldr	r2, .L45+56
 709 0458 0A40     		and	r2, r1
 710 045a 1A60     		str	r2, [r3]
 790:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 791:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     #if(I2C_MPU6050_CY_SCBIP_V0)
 792:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_SetRxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 793:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_SetTxInterruptMode(I2C_MPU6050_NO_INTR_SOURCES);
 794:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 795:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         /* Clear interrupt sources as they are not automatically cleared after SCB is disabled */
 796:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_ClearTxInterruptSource(I2C_MPU6050_INTR_RX_ALL);
 797:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_ClearRxInterruptSource(I2C_MPU6050_INTR_TX_ALL);
 798:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_ClearSlaveInterruptSource(I2C_MPU6050_INTR_SLAVE_ALL);
 799:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_ClearMasterInterruptSource(I2C_MPU6050_INTR_MASTER_ALL);
 800:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     #endif /* (I2C_MPU6050_CY_SCBIP_V0) */
 801:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** 
 802:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****         I2C_MPU6050_CTRL_REG |= (uint32) I2C_MPU6050_CTRL_ENABLED;  /* Enable scb IP */
 711              		.loc 1 802 0
 712 045c 104B     		ldr	r3, .L45+48
 713 045e 104A     		ldr	r2, .L45+48
 714 0460 1268     		ldr	r2, [r2]
 715 0462 8021     		mov	r1, #128
 716 0464 0906     		lsl	r1, r1, #24
 717 0466 0A43     		orr	r2, r1
 718 0468 1A60     		str	r2, [r3]
 719              	.L1:
 803:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c ****     }
 804:.\Generated_Source\PSoC4/I2C_MPU6050_I2C_INT.c **** }
 720              		.loc 1 804 0
 721 046a BD46     		mov	sp, r7
 722 046c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 28


 723              		@ sp needed
 724 046e 80BD     		pop	{r7, pc}
 725              	.L46:
 726              		.align	2
 727              	.L45:
 728 0470 8C0F2540 		.word	1076170636
 729 0474 00000000 		.word	I2C_MPU6050_mstrWrBufIndexTmp
 730 0478 00000000 		.word	I2C_MPU6050_mstrWrBufIndex
 731 047c 60002540 		.word	1076166752
 732 0480 FFFEFFFF 		.word	-257
 733 0484 C80F2540 		.word	1076170696
 734 0488 880F2540 		.word	1076170632
 735 048c 00000000 		.word	I2C_MPU6050_mstrControl
 736 0490 00000000 		.word	I2C_MPU6050_state
 737 0494 00000000 		.word	I2C_MPU6050_mstrStatus
 738 0498 68002540 		.word	1076166760
 739 049c 64002540 		.word	1076166756
 740 04a0 00002540 		.word	1076166656
 741 04a4 FF5FFFFF 		.word	-40961
 742 04a8 FFFCFFFF 		.word	-769
 743              		.cfi_endproc
 744              	.LFE2:
 745              		.size	I2C_MPU6050_I2C_ISR, .-I2C_MPU6050_I2C_ISR
 746              		.text
 747              	.Letext0:
 748              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 749              		.file 3 ".\\Generated_Source\\PSoC4\\I2C_MPU6050_PVT.h"
 750              		.file 4 ".\\Generated_Source\\PSoC4\\I2C_MPU6050_I2C_PVT.h"
 751              		.section	.debug_info,"",%progbits
 752              	.Ldebug_info0:
 753 0000 84010000 		.4byte	0x184
 754 0004 0400     		.2byte	0x4
 755 0006 00000000 		.4byte	.Ldebug_abbrev0
 756 000a 04       		.byte	0x4
 757 000b 01       		.uleb128 0x1
 758 000c 90000000 		.4byte	.LASF31
 759 0010 01       		.byte	0x1
 760 0011 7E020000 		.4byte	.LASF32
 761 0015 96010000 		.4byte	.LASF33
 762 0019 00000000 		.4byte	.Ldebug_ranges0+0
 763 001d 00000000 		.4byte	0
 764 0021 00000000 		.4byte	.Ldebug_line0
 765 0025 02       		.uleb128 0x2
 766 0026 01       		.byte	0x1
 767 0027 06       		.byte	0x6
 768 0028 EF020000 		.4byte	.LASF0
 769 002c 02       		.uleb128 0x2
 770 002d 01       		.byte	0x1
 771 002e 08       		.byte	0x8
 772 002f 81010000 		.4byte	.LASF1
 773 0033 02       		.uleb128 0x2
 774 0034 02       		.byte	0x2
 775 0035 05       		.byte	0x5
 776 0036 DC020000 		.4byte	.LASF2
 777 003a 02       		.uleb128 0x2
 778 003b 02       		.byte	0x2
 779 003c 07       		.byte	0x7
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 29


 780 003d 6B000000 		.4byte	.LASF3
 781 0041 02       		.uleb128 0x2
 782 0042 04       		.byte	0x4
 783 0043 05       		.byte	0x5
 784 0044 E6020000 		.4byte	.LASF4
 785 0048 02       		.uleb128 0x2
 786 0049 04       		.byte	0x4
 787 004a 07       		.byte	0x7
 788 004b 45010000 		.4byte	.LASF5
 789 004f 02       		.uleb128 0x2
 790 0050 08       		.byte	0x8
 791 0051 05       		.byte	0x5
 792 0052 70020000 		.4byte	.LASF6
 793 0056 02       		.uleb128 0x2
 794 0057 08       		.byte	0x8
 795 0058 07       		.byte	0x7
 796 0059 2A020000 		.4byte	.LASF7
 797 005d 03       		.uleb128 0x3
 798 005e 04       		.byte	0x4
 799 005f 05       		.byte	0x5
 800 0060 696E7400 		.ascii	"int\000"
 801 0064 02       		.uleb128 0x2
 802 0065 04       		.byte	0x4
 803 0066 07       		.byte	0x7
 804 0067 1D020000 		.4byte	.LASF8
 805 006b 04       		.uleb128 0x4
 806 006c 61010000 		.4byte	.LASF9
 807 0070 02       		.byte	0x2
 808 0071 A1       		.byte	0xa1
 809 0072 2C000000 		.4byte	0x2c
 810 0076 04       		.uleb128 0x4
 811 0077 FB010000 		.4byte	.LASF10
 812 007b 02       		.byte	0x2
 813 007c A2       		.byte	0xa2
 814 007d 3A000000 		.4byte	0x3a
 815 0081 04       		.uleb128 0x4
 816 0082 02020000 		.4byte	.LASF11
 817 0086 02       		.byte	0x2
 818 0087 A3       		.byte	0xa3
 819 0088 48000000 		.4byte	0x48
 820 008c 02       		.uleb128 0x2
 821 008d 04       		.byte	0x4
 822 008e 04       		.byte	0x4
 823 008f 8A000000 		.4byte	.LASF12
 824 0093 02       		.uleb128 0x2
 825 0094 08       		.byte	0x8
 826 0095 04       		.byte	0x4
 827 0096 8F010000 		.4byte	.LASF13
 828 009a 02       		.uleb128 0x2
 829 009b 01       		.byte	0x1
 830 009c 08       		.byte	0x8
 831 009d AD020000 		.4byte	.LASF14
 832 00a1 05       		.uleb128 0x5
 833 00a2 6B000000 		.4byte	0x6b
 834 00a6 05       		.uleb128 0x5
 835 00a7 76000000 		.4byte	0x76
 836 00ab 06       		.uleb128 0x6
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 30


 837 00ac 00000000 		.4byte	.LASF15
 838 00b0 02       		.byte	0x2
 839 00b1 4D01     		.2byte	0x14d
 840 00b3 B7000000 		.4byte	0xb7
 841 00b7 05       		.uleb128 0x5
 842 00b8 81000000 		.4byte	0x81
 843 00bc 06       		.uleb128 0x6
 844 00bd 41020000 		.4byte	.LASF16
 845 00c1 02       		.byte	0x2
 846 00c2 5D01     		.2byte	0x15d
 847 00c4 C8000000 		.4byte	0xc8
 848 00c8 07       		.uleb128 0x7
 849 00c9 04       		.byte	0x4
 850 00ca CE000000 		.4byte	0xce
 851 00ce 08       		.uleb128 0x8
 852 00cf 02       		.uleb128 0x2
 853 00d0 04       		.byte	0x4
 854 00d1 07       		.byte	0x7
 855 00d2 4E020000 		.4byte	.LASF17
 856 00d6 09       		.uleb128 0x9
 857 00d7 09020000 		.4byte	.LASF34
 858 00db 01       		.byte	0x1
 859 00dc 24       		.byte	0x24
 860 00dd 00000000 		.4byte	.LFB2
 861 00e1 AC040000 		.4byte	.LFE2-.LFB2
 862 00e5 01       		.uleb128 0x1
 863 00e6 9C       		.byte	0x9c
 864 00e7 08010000 		.4byte	0x108
 865 00eb 0A       		.uleb128 0xa
 866 00ec 57010000 		.4byte	.LASF18
 867 00f0 01       		.byte	0x1
 868 00f1 26       		.byte	0x26
 869 00f2 81000000 		.4byte	0x81
 870 00f6 02       		.uleb128 0x2
 871 00f7 91       		.byte	0x91
 872 00f8 74       		.sleb128 -12
 873 00f9 0A       		.uleb128 0xa
 874 00fa 7E000000 		.4byte	.LASF19
 875 00fe 01       		.byte	0x1
 876 00ff 27       		.byte	0x27
 877 0100 81000000 		.4byte	0x81
 878 0104 02       		.uleb128 0x2
 879 0105 91       		.byte	0x91
 880 0106 70       		.sleb128 -16
 881 0107 00       		.byte	0
 882 0108 0B       		.uleb128 0xb
 883 0109 0C010000 		.4byte	.LASF20
 884 010d 03       		.byte	0x3
 885 010e 39       		.byte	0x39
 886 010f BC000000 		.4byte	0xbc
 887 0113 0B       		.uleb128 0xb
 888 0114 B2020000 		.4byte	.LASF21
 889 0118 04       		.byte	0x4
 890 0119 1D       		.byte	0x1d
 891 011a A1000000 		.4byte	0xa1
 892 011e 0B       		.uleb128 0xb
 893 011f 54000000 		.4byte	.LASF22
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 31


 894 0123 04       		.byte	0x4
 895 0124 30       		.byte	0x30
 896 0125 A6000000 		.4byte	0xa6
 897 0129 0B       		.uleb128 0xb
 898 012a C4020000 		.4byte	.LASF23
 899 012e 04       		.byte	0x4
 900 012f 31       		.byte	0x31
 901 0130 A1000000 		.4byte	0xa1
 902 0134 0B       		.uleb128 0xb
 903 0135 57020000 		.4byte	.LASF24
 904 0139 04       		.byte	0x4
 905 013a 34       		.byte	0x34
 906 013b 3F010000 		.4byte	0x13f
 907 013f 07       		.uleb128 0x7
 908 0140 04       		.byte	0x4
 909 0141 A1000000 		.4byte	0xa1
 910 0145 0B       		.uleb128 0xb
 911 0146 3A000000 		.4byte	.LASF25
 912 014a 04       		.byte	0x4
 913 014b 35       		.byte	0x35
 914 014c B7000000 		.4byte	0xb7
 915 0150 0B       		.uleb128 0xb
 916 0151 2A010000 		.4byte	.LASF26
 917 0155 04       		.byte	0x4
 918 0156 36       		.byte	0x36
 919 0157 B7000000 		.4byte	0xb7
 920 015b 0B       		.uleb128 0xb
 921 015c 06000000 		.4byte	.LASF27
 922 0160 04       		.byte	0x4
 923 0161 39       		.byte	0x39
 924 0162 3F010000 		.4byte	0x13f
 925 0166 0B       		.uleb128 0xb
 926 0167 67010000 		.4byte	.LASF28
 927 016b 04       		.byte	0x4
 928 016c 3A       		.byte	0x3a
 929 016d B7000000 		.4byte	0xb7
 930 0171 0B       		.uleb128 0xb
 931 0172 1F000000 		.4byte	.LASF29
 932 0176 04       		.byte	0x4
 933 0177 3B       		.byte	0x3b
 934 0178 B7000000 		.4byte	0xb7
 935 017c 0B       		.uleb128 0xb
 936 017d FB020000 		.4byte	.LASF30
 937 0181 04       		.byte	0x4
 938 0182 3C       		.byte	0x3c
 939 0183 B7000000 		.4byte	0xb7
 940 0187 00       		.byte	0
 941              		.section	.debug_abbrev,"",%progbits
 942              	.Ldebug_abbrev0:
 943 0000 01       		.uleb128 0x1
 944 0001 11       		.uleb128 0x11
 945 0002 01       		.byte	0x1
 946 0003 25       		.uleb128 0x25
 947 0004 0E       		.uleb128 0xe
 948 0005 13       		.uleb128 0x13
 949 0006 0B       		.uleb128 0xb
 950 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 32


 951 0008 0E       		.uleb128 0xe
 952 0009 1B       		.uleb128 0x1b
 953 000a 0E       		.uleb128 0xe
 954 000b 55       		.uleb128 0x55
 955 000c 17       		.uleb128 0x17
 956 000d 11       		.uleb128 0x11
 957 000e 01       		.uleb128 0x1
 958 000f 10       		.uleb128 0x10
 959 0010 17       		.uleb128 0x17
 960 0011 00       		.byte	0
 961 0012 00       		.byte	0
 962 0013 02       		.uleb128 0x2
 963 0014 24       		.uleb128 0x24
 964 0015 00       		.byte	0
 965 0016 0B       		.uleb128 0xb
 966 0017 0B       		.uleb128 0xb
 967 0018 3E       		.uleb128 0x3e
 968 0019 0B       		.uleb128 0xb
 969 001a 03       		.uleb128 0x3
 970 001b 0E       		.uleb128 0xe
 971 001c 00       		.byte	0
 972 001d 00       		.byte	0
 973 001e 03       		.uleb128 0x3
 974 001f 24       		.uleb128 0x24
 975 0020 00       		.byte	0
 976 0021 0B       		.uleb128 0xb
 977 0022 0B       		.uleb128 0xb
 978 0023 3E       		.uleb128 0x3e
 979 0024 0B       		.uleb128 0xb
 980 0025 03       		.uleb128 0x3
 981 0026 08       		.uleb128 0x8
 982 0027 00       		.byte	0
 983 0028 00       		.byte	0
 984 0029 04       		.uleb128 0x4
 985 002a 16       		.uleb128 0x16
 986 002b 00       		.byte	0
 987 002c 03       		.uleb128 0x3
 988 002d 0E       		.uleb128 0xe
 989 002e 3A       		.uleb128 0x3a
 990 002f 0B       		.uleb128 0xb
 991 0030 3B       		.uleb128 0x3b
 992 0031 0B       		.uleb128 0xb
 993 0032 49       		.uleb128 0x49
 994 0033 13       		.uleb128 0x13
 995 0034 00       		.byte	0
 996 0035 00       		.byte	0
 997 0036 05       		.uleb128 0x5
 998 0037 35       		.uleb128 0x35
 999 0038 00       		.byte	0
 1000 0039 49       		.uleb128 0x49
 1001 003a 13       		.uleb128 0x13
 1002 003b 00       		.byte	0
 1003 003c 00       		.byte	0
 1004 003d 06       		.uleb128 0x6
 1005 003e 16       		.uleb128 0x16
 1006 003f 00       		.byte	0
 1007 0040 03       		.uleb128 0x3
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 33


 1008 0041 0E       		.uleb128 0xe
 1009 0042 3A       		.uleb128 0x3a
 1010 0043 0B       		.uleb128 0xb
 1011 0044 3B       		.uleb128 0x3b
 1012 0045 05       		.uleb128 0x5
 1013 0046 49       		.uleb128 0x49
 1014 0047 13       		.uleb128 0x13
 1015 0048 00       		.byte	0
 1016 0049 00       		.byte	0
 1017 004a 07       		.uleb128 0x7
 1018 004b 0F       		.uleb128 0xf
 1019 004c 00       		.byte	0
 1020 004d 0B       		.uleb128 0xb
 1021 004e 0B       		.uleb128 0xb
 1022 004f 49       		.uleb128 0x49
 1023 0050 13       		.uleb128 0x13
 1024 0051 00       		.byte	0
 1025 0052 00       		.byte	0
 1026 0053 08       		.uleb128 0x8
 1027 0054 15       		.uleb128 0x15
 1028 0055 00       		.byte	0
 1029 0056 27       		.uleb128 0x27
 1030 0057 19       		.uleb128 0x19
 1031 0058 00       		.byte	0
 1032 0059 00       		.byte	0
 1033 005a 09       		.uleb128 0x9
 1034 005b 2E       		.uleb128 0x2e
 1035 005c 01       		.byte	0x1
 1036 005d 3F       		.uleb128 0x3f
 1037 005e 19       		.uleb128 0x19
 1038 005f 03       		.uleb128 0x3
 1039 0060 0E       		.uleb128 0xe
 1040 0061 3A       		.uleb128 0x3a
 1041 0062 0B       		.uleb128 0xb
 1042 0063 3B       		.uleb128 0x3b
 1043 0064 0B       		.uleb128 0xb
 1044 0065 27       		.uleb128 0x27
 1045 0066 19       		.uleb128 0x19
 1046 0067 11       		.uleb128 0x11
 1047 0068 01       		.uleb128 0x1
 1048 0069 12       		.uleb128 0x12
 1049 006a 06       		.uleb128 0x6
 1050 006b 40       		.uleb128 0x40
 1051 006c 18       		.uleb128 0x18
 1052 006d 9642     		.uleb128 0x2116
 1053 006f 19       		.uleb128 0x19
 1054 0070 01       		.uleb128 0x1
 1055 0071 13       		.uleb128 0x13
 1056 0072 00       		.byte	0
 1057 0073 00       		.byte	0
 1058 0074 0A       		.uleb128 0xa
 1059 0075 34       		.uleb128 0x34
 1060 0076 00       		.byte	0
 1061 0077 03       		.uleb128 0x3
 1062 0078 0E       		.uleb128 0xe
 1063 0079 3A       		.uleb128 0x3a
 1064 007a 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 34


 1065 007b 3B       		.uleb128 0x3b
 1066 007c 0B       		.uleb128 0xb
 1067 007d 49       		.uleb128 0x49
 1068 007e 13       		.uleb128 0x13
 1069 007f 02       		.uleb128 0x2
 1070 0080 18       		.uleb128 0x18
 1071 0081 00       		.byte	0
 1072 0082 00       		.byte	0
 1073 0083 0B       		.uleb128 0xb
 1074 0084 34       		.uleb128 0x34
 1075 0085 00       		.byte	0
 1076 0086 03       		.uleb128 0x3
 1077 0087 0E       		.uleb128 0xe
 1078 0088 3A       		.uleb128 0x3a
 1079 0089 0B       		.uleb128 0xb
 1080 008a 3B       		.uleb128 0x3b
 1081 008b 0B       		.uleb128 0xb
 1082 008c 49       		.uleb128 0x49
 1083 008d 13       		.uleb128 0x13
 1084 008e 3F       		.uleb128 0x3f
 1085 008f 19       		.uleb128 0x19
 1086 0090 3C       		.uleb128 0x3c
 1087 0091 19       		.uleb128 0x19
 1088 0092 00       		.byte	0
 1089 0093 00       		.byte	0
 1090 0094 00       		.byte	0
 1091              		.section	.debug_aranges,"",%progbits
 1092 0000 1C000000 		.4byte	0x1c
 1093 0004 0200     		.2byte	0x2
 1094 0006 00000000 		.4byte	.Ldebug_info0
 1095 000a 04       		.byte	0x4
 1096 000b 00       		.byte	0
 1097 000c 0000     		.2byte	0
 1098 000e 0000     		.2byte	0
 1099 0010 00000000 		.4byte	.LFB2
 1100 0014 AC040000 		.4byte	.LFE2-.LFB2
 1101 0018 00000000 		.4byte	0
 1102 001c 00000000 		.4byte	0
 1103              		.section	.debug_ranges,"",%progbits
 1104              	.Ldebug_ranges0:
 1105 0000 00000000 		.4byte	.LFB2
 1106 0004 AC040000 		.4byte	.LFE2
 1107 0008 00000000 		.4byte	0
 1108 000c 00000000 		.4byte	0
 1109              		.section	.debug_line,"",%progbits
 1110              	.Ldebug_line0:
 1111 0000 BD010000 		.section	.debug_str,"MS",%progbits,1
 1111      02009700 
 1111      00000201 
 1111      FB0E0D00 
 1111      01010101 
 1112              	.LASF15:
 1113 0000 72656733 		.ascii	"reg32\000"
 1113      3200
 1114              	.LASF27:
 1115 0006 4932435F 		.ascii	"I2C_MPU6050_mstrWrBufPtr\000"
 1115      4D505536 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 35


 1115      3035305F 
 1115      6D737472 
 1115      57724275 
 1116              	.LASF29:
 1117 001f 4932435F 		.ascii	"I2C_MPU6050_mstrWrBufIndex\000"
 1117      4D505536 
 1117      3035305F 
 1117      6D737472 
 1117      57724275 
 1118              	.LASF25:
 1119 003a 4932435F 		.ascii	"I2C_MPU6050_mstrRdBufSize\000"
 1119      4D505536 
 1119      3035305F 
 1119      6D737472 
 1119      52644275 
 1120              	.LASF22:
 1121 0054 4932435F 		.ascii	"I2C_MPU6050_mstrStatus\000"
 1121      4D505536 
 1121      3035305F 
 1121      6D737472 
 1121      53746174 
 1122              	.LASF3:
 1123 006b 73686F72 		.ascii	"short unsigned int\000"
 1123      7420756E 
 1123      7369676E 
 1123      65642069 
 1123      6E7400
 1124              	.LASF19:
 1125 007e 656E6454 		.ascii	"endTransfer\000"
 1125      72616E73 
 1125      66657200 
 1126              	.LASF12:
 1127 008a 666C6F61 		.ascii	"float\000"
 1127      7400
 1128              	.LASF31:
 1129 0090 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1129      4320342E 
 1129      382E3420 
 1129      32303134 
 1129      30353236 
 1130 00c3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1130      20726576 
 1130      6973696F 
 1130      6E203231 
 1130      31333538 
 1131 00f6 30202D66 		.ascii	"0 -ffunction-sections\000"
 1131      66756E63 
 1131      74696F6E 
 1131      2D736563 
 1131      74696F6E 
 1132              	.LASF20:
 1133 010c 4932435F 		.ascii	"I2C_MPU6050_customIntrHandler\000"
 1133      4D505536 
 1133      3035305F 
 1133      63757374 
 1133      6F6D496E 
 1134              	.LASF26:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 36


 1135 012a 4932435F 		.ascii	"I2C_MPU6050_mstrRdBufIndex\000"
 1135      4D505536 
 1135      3035305F 
 1135      6D737472 
 1135      52644275 
 1136              	.LASF5:
 1137 0145 6C6F6E67 		.ascii	"long unsigned int\000"
 1137      20756E73 
 1137      69676E65 
 1137      6420696E 
 1137      7400
 1138              	.LASF18:
 1139 0157 64696666 		.ascii	"diffCount\000"
 1139      436F756E 
 1139      7400
 1140              	.LASF9:
 1141 0161 75696E74 		.ascii	"uint8\000"
 1141      3800
 1142              	.LASF28:
 1143 0167 4932435F 		.ascii	"I2C_MPU6050_mstrWrBufSize\000"
 1143      4D505536 
 1143      3035305F 
 1143      6D737472 
 1143      57724275 
 1144              	.LASF1:
 1145 0181 756E7369 		.ascii	"unsigned char\000"
 1145      676E6564 
 1145      20636861 
 1145      7200
 1146              	.LASF13:
 1147 018f 646F7562 		.ascii	"double\000"
 1147      6C6500
 1148              	.LASF33:
 1149 0196 433A5C55 		.ascii	"C:\\Users\\Christina\\Documents\\For_fun\\GitHub\\D"
 1149      73657273 
 1149      5C436872 
 1149      69737469 
 1149      6E615C44 
 1150 01c3 65707265 		.ascii	"eprecated\\Corner-Module\\CornerModule\\CornerModul"
 1150      63617465 
 1150      645C436F 
 1150      726E6572 
 1150      2D4D6F64 
 1151 01f3 652E6379 		.ascii	"e.cydsn\000"
 1151      64736E00 
 1152              	.LASF10:
 1153 01fb 75696E74 		.ascii	"uint16\000"
 1153      313600
 1154              	.LASF11:
 1155 0202 75696E74 		.ascii	"uint32\000"
 1155      333200
 1156              	.LASF34:
 1157 0209 4932435F 		.ascii	"I2C_MPU6050_I2C_ISR\000"
 1157      4D505536 
 1157      3035305F 
 1157      4932435F 
 1157      49535200 
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 37


 1158              	.LASF8:
 1159 021d 756E7369 		.ascii	"unsigned int\000"
 1159      676E6564 
 1159      20696E74 
 1159      00
 1160              	.LASF7:
 1161 022a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1161      206C6F6E 
 1161      6720756E 
 1161      7369676E 
 1161      65642069 
 1162              	.LASF16:
 1163 0241 63796973 		.ascii	"cyisraddress\000"
 1163      72616464 
 1163      72657373 
 1163      00
 1164              	.LASF17:
 1165 024e 73697A65 		.ascii	"sizetype\000"
 1165      74797065 
 1165      00
 1166              	.LASF24:
 1167 0257 4932435F 		.ascii	"I2C_MPU6050_mstrRdBufPtr\000"
 1167      4D505536 
 1167      3035305F 
 1167      6D737472 
 1167      52644275 
 1168              	.LASF6:
 1169 0270 6C6F6E67 		.ascii	"long long int\000"
 1169      206C6F6E 
 1169      6720696E 
 1169      7400
 1170              	.LASF32:
 1171 027e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\I2C_MPU6050_I2C_INT.c\000"
 1171      6E657261 
 1171      7465645F 
 1171      536F7572 
 1171      63655C50 
 1172              	.LASF14:
 1173 02ad 63686172 		.ascii	"char\000"
 1173      00
 1174              	.LASF21:
 1175 02b2 4932435F 		.ascii	"I2C_MPU6050_state\000"
 1175      4D505536 
 1175      3035305F 
 1175      73746174 
 1175      6500
 1176              	.LASF23:
 1177 02c4 4932435F 		.ascii	"I2C_MPU6050_mstrControl\000"
 1177      4D505536 
 1177      3035305F 
 1177      6D737472 
 1177      436F6E74 
 1178              	.LASF2:
 1179 02dc 73686F72 		.ascii	"short int\000"
 1179      7420696E 
 1179      7400
 1180              	.LASF4:
ARM GAS  C:\Users\CHRIST~1\AppData\Local\Temp\ccAyZ27I.s 			page 38


 1181 02e6 6C6F6E67 		.ascii	"long int\000"
 1181      20696E74 
 1181      00
 1182              	.LASF0:
 1183 02ef 7369676E 		.ascii	"signed char\000"
 1183      65642063 
 1183      68617200 
 1184              	.LASF30:
 1185 02fb 4932435F 		.ascii	"I2C_MPU6050_mstrWrBufIndexTmp\000"
 1185      4D505536 
 1185      3035305F 
 1185      6D737472 
 1185      57724275 
 1186              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
