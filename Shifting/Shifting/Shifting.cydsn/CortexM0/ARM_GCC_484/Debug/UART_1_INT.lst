ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_1_RXISR,"ax",%progbits
  18              		.align	2
  19              		.global	UART_1_RXISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_1_RXISR, %function
  23              	UART_1_RXISR:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1_INT.c"
   1:.\Generated_Source\PSoC4/UART_1_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1_INT.c **** * File Name: UART_1INT.c
   3:.\Generated_Source\PSoC4/UART_1_INT.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/UART_1_INT.c **** *
   5:.\Generated_Source\PSoC4/UART_1_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC4/UART_1_INT.c **** *
   8:.\Generated_Source\PSoC4/UART_1_INT.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_1_INT.c **** *
  10:.\Generated_Source\PSoC4/UART_1_INT.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART_1_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_1_INT.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_1_INT.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  17:.\Generated_Source\PSoC4/UART_1_INT.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  19:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  20:.\Generated_Source\PSoC4/UART_1_INT.c **** /***************************************
  21:.\Generated_Source\PSoC4/UART_1_INT.c **** * Custom Declarations
  22:.\Generated_Source\PSoC4/UART_1_INT.c **** ***************************************/
  23:.\Generated_Source\PSoC4/UART_1_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  24:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  25:.\Generated_Source\PSoC4/UART_1_INT.c **** /* `#END` */
  26:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  27:.\Generated_Source\PSoC4/UART_1_INT.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  28:.\Generated_Source\PSoC4/UART_1_INT.c ****     /*******************************************************************************
  29:.\Generated_Source\PSoC4/UART_1_INT.c ****     * Function Name: UART_1_RXISR
  30:.\Generated_Source\PSoC4/UART_1_INT.c ****     ********************************************************************************
  31:.\Generated_Source\PSoC4/UART_1_INT.c ****     *
  32:.\Generated_Source\PSoC4/UART_1_INT.c ****     * Summary:
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 2


  33:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  34:.\Generated_Source\PSoC4/UART_1_INT.c ****     *
  35:.\Generated_Source\PSoC4/UART_1_INT.c ****     * Parameters:
  36:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  None.
  37:.\Generated_Source\PSoC4/UART_1_INT.c ****     *
  38:.\Generated_Source\PSoC4/UART_1_INT.c ****     * Return:
  39:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  None.
  40:.\Generated_Source\PSoC4/UART_1_INT.c ****     *
  41:.\Generated_Source\PSoC4/UART_1_INT.c ****     * Global Variables:
  42:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
  43:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
  44:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     increments after each byte saved to buffer.
  45:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
  46:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     checked to detect overflow condition.
  47:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  UART_1_rxBufferOverflow - software overflow flag. Set to one
  48:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     when UART_1_rxBufferWrite index overtakes
  49:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     UART_1_rxBufferRead index.
  50:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  UART_1_rxBufferLoopDetect - additional variable to detect overflow.
  51:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     Set to one when UART_1_rxBufferWrite is equal to
  52:.\Generated_Source\PSoC4/UART_1_INT.c ****     *    UART_1_rxBufferRead
  53:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  UART_1_rxAddressMode - this variable contains the Address mode,
  54:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  55:.\Generated_Source\PSoC4/UART_1_INT.c ****     *  UART_1_rxAddressDetected - set to 1 when correct address received,
  56:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  57:.\Generated_Source\PSoC4/UART_1_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  58:.\Generated_Source\PSoC4/UART_1_INT.c ****     *
  59:.\Generated_Source\PSoC4/UART_1_INT.c ****     *******************************************************************************/
  60:.\Generated_Source\PSoC4/UART_1_INT.c ****     CY_ISR(UART_1_RXISR)
  61:.\Generated_Source\PSoC4/UART_1_INT.c ****     {
  26              		.loc 1 61 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  62:.\Generated_Source\PSoC4/UART_1_INT.c ****         uint8 readData;
  63:.\Generated_Source\PSoC4/UART_1_INT.c ****         uint8 increment_pointer = 0u;
  36              		.loc 1 63 0
  37 0006 BB1D     		add	r3, r7, #6
  38 0008 0022     		mov	r2, #0
  39 000a 1A70     		strb	r2, [r3]
  64:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  65:.\Generated_Source\PSoC4/UART_1_INT.c ****     #if(CY_PSOC3)
  66:.\Generated_Source\PSoC4/UART_1_INT.c ****         uint8 int_en;
  67:.\Generated_Source\PSoC4/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
  68:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  69:.\Generated_Source\PSoC4/UART_1_INT.c ****         /* User code required at start of ISR */
  70:.\Generated_Source\PSoC4/UART_1_INT.c ****         /* `#START UART_1_RXISR_START` */
  71:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  72:.\Generated_Source\PSoC4/UART_1_INT.c ****         /* `#END` */
  73:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  74:.\Generated_Source\PSoC4/UART_1_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  75:.\Generated_Source\PSoC4/UART_1_INT.c ****         int_en = EA;
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 3


  76:.\Generated_Source\PSoC4/UART_1_INT.c ****         CyGlobalIntEnable;
  77:.\Generated_Source\PSoC4/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
  78:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  79:.\Generated_Source\PSoC4/UART_1_INT.c ****         readData = UART_1_RXSTATUS_REG;
  40              		.loc 1 79 0
  41 000c 274A     		ldr	r2, .L8
  42 000e FB1D     		add	r3, r7, #7
  43 0010 1278     		ldrb	r2, [r2]
  44 0012 1A70     		strb	r2, [r3]
  80:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  81:.\Generated_Source\PSoC4/UART_1_INT.c ****         if((readData & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
  82:.\Generated_Source\PSoC4/UART_1_INT.c ****                         UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
  45              		.loc 1 82 0
  46 0014 FB1D     		add	r3, r7, #7
  47 0016 1A78     		ldrb	r2, [r3]
  48 0018 1E23     		mov	r3, #30
  49 001a 1340     		and	r3, r2
  81:.\Generated_Source\PSoC4/UART_1_INT.c ****         if((readData & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
  50              		.loc 1 81 0
  51 001c 07D0     		beq	.L2
  83:.\Generated_Source\PSoC4/UART_1_INT.c ****         {
  84:.\Generated_Source\PSoC4/UART_1_INT.c ****             /* ERROR handling. */
  85:.\Generated_Source\PSoC4/UART_1_INT.c ****             UART_1_errorStatus = readData & ( UART_1_RX_STS_BREAK | 
  52              		.loc 1 85 0
  53 001e FB1D     		add	r3, r7, #7
  54 0020 1A78     		ldrb	r2, [r3]
  55 0022 1E23     		mov	r3, #30
  56 0024 1340     		and	r3, r2
  57 0026 DAB2     		uxtb	r2, r3
  58 0028 214B     		ldr	r3, .L8+4
  59 002a 1A70     		strb	r2, [r3]
  86:.\Generated_Source\PSoC4/UART_1_INT.c ****                                                         UART_1_RX_STS_PAR_ERROR | 
  87:.\Generated_Source\PSoC4/UART_1_INT.c ****                                                         UART_1_RX_STS_STOP_ERROR | 
  88:.\Generated_Source\PSoC4/UART_1_INT.c ****                                                         UART_1_RX_STS_OVERRUN);
  89:.\Generated_Source\PSoC4/UART_1_INT.c ****             /* `#START UART_1_RXISR_ERROR` */
  90:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  91:.\Generated_Source\PSoC4/UART_1_INT.c ****             /* `#END` */
  92:.\Generated_Source\PSoC4/UART_1_INT.c ****         }
  93:.\Generated_Source\PSoC4/UART_1_INT.c **** 
  94:.\Generated_Source\PSoC4/UART_1_INT.c ****         while((readData & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
  60              		.loc 1 94 0
  61 002c 35E0     		b	.L3
  62              	.L2:
  63 002e 34E0     		b	.L3
  64              	.L7:
  95:.\Generated_Source\PSoC4/UART_1_INT.c ****         {
  96:.\Generated_Source\PSoC4/UART_1_INT.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
  97:.\Generated_Source\PSoC4/UART_1_INT.c ****             if(UART_1_rxAddressMode == (uint8)UART_1__B_UART__AM_SW_DETECT_TO_BUFFER)
  98:.\Generated_Source\PSoC4/UART_1_INT.c ****             {
  99:.\Generated_Source\PSoC4/UART_1_INT.c ****                 if((readData & UART_1_RX_STS_MRKSPC) != 0u)
 100:.\Generated_Source\PSoC4/UART_1_INT.c ****                 {
 101:.\Generated_Source\PSoC4/UART_1_INT.c ****                     if ((readData & UART_1_RX_STS_ADDR_MATCH) != 0u)
 102:.\Generated_Source\PSoC4/UART_1_INT.c ****                     {
 103:.\Generated_Source\PSoC4/UART_1_INT.c ****                         UART_1_rxAddressDetected = 1u;
 104:.\Generated_Source\PSoC4/UART_1_INT.c ****                     }
 105:.\Generated_Source\PSoC4/UART_1_INT.c ****                     else
 106:.\Generated_Source\PSoC4/UART_1_INT.c ****                     {
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 4


 107:.\Generated_Source\PSoC4/UART_1_INT.c ****                         UART_1_rxAddressDetected = 0u;
 108:.\Generated_Source\PSoC4/UART_1_INT.c ****                     }
 109:.\Generated_Source\PSoC4/UART_1_INT.c ****                 }
 110:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 111:.\Generated_Source\PSoC4/UART_1_INT.c ****                 readData = UART_1_RXDATA_REG;
 112:.\Generated_Source\PSoC4/UART_1_INT.c ****                 if(UART_1_rxAddressDetected != 0u)
 113:.\Generated_Source\PSoC4/UART_1_INT.c ****                 {   /* Store only addressed data */
 114:.\Generated_Source\PSoC4/UART_1_INT.c ****                     UART_1_rxBuffer[UART_1_rxBufferWrite] = readData;
 115:.\Generated_Source\PSoC4/UART_1_INT.c ****                     increment_pointer = 1u;
 116:.\Generated_Source\PSoC4/UART_1_INT.c ****                 }
 117:.\Generated_Source\PSoC4/UART_1_INT.c ****             }
 118:.\Generated_Source\PSoC4/UART_1_INT.c ****             else /* Without software addressing */
 119:.\Generated_Source\PSoC4/UART_1_INT.c ****             {
 120:.\Generated_Source\PSoC4/UART_1_INT.c ****                 UART_1_rxBuffer[UART_1_rxBufferWrite] = UART_1_RXDATA_REG;
 121:.\Generated_Source\PSoC4/UART_1_INT.c ****                 increment_pointer = 1u;
 122:.\Generated_Source\PSoC4/UART_1_INT.c ****             }
 123:.\Generated_Source\PSoC4/UART_1_INT.c ****         #else  /* Without addressing */
 124:.\Generated_Source\PSoC4/UART_1_INT.c ****             UART_1_rxBuffer[UART_1_rxBufferWrite] = UART_1_RXDATA_REG;
  65              		.loc 1 124 0
  66 0030 204B     		ldr	r3, .L8+8
  67 0032 1B78     		ldrb	r3, [r3]
  68 0034 DBB2     		uxtb	r3, r3
  69 0036 204A     		ldr	r2, .L8+12
  70 0038 1278     		ldrb	r2, [r2]
  71 003a D1B2     		uxtb	r1, r2
  72 003c 1F4A     		ldr	r2, .L8+16
  73 003e D154     		strb	r1, [r2, r3]
 125:.\Generated_Source\PSoC4/UART_1_INT.c ****             increment_pointer = 1u;
  74              		.loc 1 125 0
  75 0040 BB1D     		add	r3, r7, #6
  76 0042 0122     		mov	r2, #1
  77 0044 1A70     		strb	r2, [r3]
 126:.\Generated_Source\PSoC4/UART_1_INT.c ****         #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 127:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 128:.\Generated_Source\PSoC4/UART_1_INT.c ****             /* Do not increment buffer pointer when skip not addressed data */
 129:.\Generated_Source\PSoC4/UART_1_INT.c ****             if(increment_pointer != 0u)
  78              		.loc 1 129 0
  79 0046 BB1D     		add	r3, r7, #6
  80 0048 1B78     		ldrb	r3, [r3]
  81 004a 002B     		cmp	r3, #0
  82 004c 21D0     		beq	.L4
 130:.\Generated_Source\PSoC4/UART_1_INT.c ****             {
 131:.\Generated_Source\PSoC4/UART_1_INT.c ****                 if(UART_1_rxBufferLoopDetect != 0u)
  83              		.loc 1 131 0
  84 004e 1C4B     		ldr	r3, .L8+20
  85 0050 1B78     		ldrb	r3, [r3]
  86 0052 DBB2     		uxtb	r3, r3
  87 0054 002B     		cmp	r3, #0
  88 0056 02D0     		beq	.L5
 132:.\Generated_Source\PSoC4/UART_1_INT.c ****                 {   /* Set Software Buffer status Overflow */
 133:.\Generated_Source\PSoC4/UART_1_INT.c ****                     UART_1_rxBufferOverflow = 1u;
  89              		.loc 1 133 0
  90 0058 1A4B     		ldr	r3, .L8+24
  91 005a 0122     		mov	r2, #1
  92 005c 1A70     		strb	r2, [r3]
  93              	.L5:
 134:.\Generated_Source\PSoC4/UART_1_INT.c ****                 }
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 5


 135:.\Generated_Source\PSoC4/UART_1_INT.c ****                 /* Set next pointer. */
 136:.\Generated_Source\PSoC4/UART_1_INT.c ****                 UART_1_rxBufferWrite++;
  94              		.loc 1 136 0
  95 005e 154B     		ldr	r3, .L8+8
  96 0060 1B78     		ldrb	r3, [r3]
  97 0062 DBB2     		uxtb	r3, r3
  98 0064 0133     		add	r3, r3, #1
  99 0066 DAB2     		uxtb	r2, r3
 100 0068 124B     		ldr	r3, .L8+8
 101 006a 1A70     		strb	r2, [r3]
 137:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 138:.\Generated_Source\PSoC4/UART_1_INT.c ****                 /* Check pointer for a loop condition */
 139:.\Generated_Source\PSoC4/UART_1_INT.c ****                 if(UART_1_rxBufferWrite >= UART_1_RX_BUFFER_SIZE)
 102              		.loc 1 139 0
 103 006c 114B     		ldr	r3, .L8+8
 104 006e 1B78     		ldrb	r3, [r3]
 105 0070 DBB2     		uxtb	r3, r3
 106 0072 0C2B     		cmp	r3, #12
 107 0074 02D9     		bls	.L6
 140:.\Generated_Source\PSoC4/UART_1_INT.c ****                 {
 141:.\Generated_Source\PSoC4/UART_1_INT.c ****                     UART_1_rxBufferWrite = 0u;
 108              		.loc 1 141 0
 109 0076 0F4B     		ldr	r3, .L8+8
 110 0078 0022     		mov	r2, #0
 111 007a 1A70     		strb	r2, [r3]
 112              	.L6:
 142:.\Generated_Source\PSoC4/UART_1_INT.c ****                 }
 143:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 144:.\Generated_Source\PSoC4/UART_1_INT.c ****                 /* Detect pre-overload condition and set flag */
 145:.\Generated_Source\PSoC4/UART_1_INT.c ****                 if(UART_1_rxBufferWrite == UART_1_rxBufferRead)
 113              		.loc 1 145 0
 114 007c 0D4B     		ldr	r3, .L8+8
 115 007e 1B78     		ldrb	r3, [r3]
 116 0080 DAB2     		uxtb	r2, r3
 117 0082 114B     		ldr	r3, .L8+28
 118 0084 1B78     		ldrb	r3, [r3]
 119 0086 DBB2     		uxtb	r3, r3
 120 0088 9A42     		cmp	r2, r3
 121 008a 02D1     		bne	.L4
 146:.\Generated_Source\PSoC4/UART_1_INT.c ****                 {
 147:.\Generated_Source\PSoC4/UART_1_INT.c ****                     UART_1_rxBufferLoopDetect = 1u;
 122              		.loc 1 147 0
 123 008c 0C4B     		ldr	r3, .L8+20
 124 008e 0122     		mov	r2, #1
 125 0090 1A70     		strb	r2, [r3]
 126              	.L4:
 148:.\Generated_Source\PSoC4/UART_1_INT.c ****                     /* When Hardware Flow Control selected */
 149:.\Generated_Source\PSoC4/UART_1_INT.c ****                     #if (UART_1_FLOW_CONTROL != 0u)
 150:.\Generated_Source\PSoC4/UART_1_INT.c ****                         /* Disable RX interrupt mask, it is enabled when user read data from the bu
 151:.\Generated_Source\PSoC4/UART_1_INT.c ****                         UART_1_RXSTATUS_MASK_REG  &= (uint8)~UART_1_RX_STS_FIFO_NOTEMPTY;
 152:.\Generated_Source\PSoC4/UART_1_INT.c ****                         CyIntClearPending(UART_1_RX_VECT_NUM);
 153:.\Generated_Source\PSoC4/UART_1_INT.c ****                         break; /* Break the reading of the FIFO loop, leave the data there for gene
 154:.\Generated_Source\PSoC4/UART_1_INT.c ****                     #endif /* (UART_1_FLOW_CONTROL != 0u) */
 155:.\Generated_Source\PSoC4/UART_1_INT.c ****                 }
 156:.\Generated_Source\PSoC4/UART_1_INT.c ****             }
 157:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 158:.\Generated_Source\PSoC4/UART_1_INT.c ****             /* Read status to decide whether read more bytes */
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 6


 159:.\Generated_Source\PSoC4/UART_1_INT.c ****             readData = UART_1_RXSTATUS_REG;
 127              		.loc 1 159 0
 128 0092 064A     		ldr	r2, .L8
 129 0094 FB1D     		add	r3, r7, #7
 130 0096 1278     		ldrb	r2, [r2]
 131 0098 1A70     		strb	r2, [r3]
 132              	.L3:
  94:.\Generated_Source\PSoC4/UART_1_INT.c ****         while((readData & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 133              		.loc 1 94 0 discriminator 1
 134 009a FB1D     		add	r3, r7, #7
 135 009c 1A78     		ldrb	r2, [r3]
 136 009e 2023     		mov	r3, #32
 137 00a0 1340     		and	r3, r2
 138 00a2 C5D1     		bne	.L7
 160:.\Generated_Source\PSoC4/UART_1_INT.c ****         }
 161:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 162:.\Generated_Source\PSoC4/UART_1_INT.c ****         /* User code required at end of ISR (Optional) */
 163:.\Generated_Source\PSoC4/UART_1_INT.c ****         /* `#START UART_1_RXISR_END` */
 164:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 165:.\Generated_Source\PSoC4/UART_1_INT.c ****         /* `#END` */
 166:.\Generated_Source\PSoC4/UART_1_INT.c **** 
 167:.\Generated_Source\PSoC4/UART_1_INT.c ****     #if(CY_PSOC3)
 168:.\Generated_Source\PSoC4/UART_1_INT.c ****         EA = int_en;
 169:.\Generated_Source\PSoC4/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 170:.\Generated_Source\PSoC4/UART_1_INT.c ****     }
 139              		.loc 1 170 0
 140 00a4 BD46     		mov	sp, r7
 141 00a6 02B0     		add	sp, sp, #8
 142              		@ sp needed
 143 00a8 80BD     		pop	{r7, pc}
 144              	.L9:
 145 00aa C046     		.align	2
 146              	.L8:
 147 00ac 60000F40 		.word	1074724960
 148 00b0 00000000 		.word	UART_1_errorStatus
 149 00b4 00000000 		.word	UART_1_rxBufferWrite
 150 00b8 42000F40 		.word	1074724930
 151 00bc 00000000 		.word	UART_1_rxBuffer
 152 00c0 00000000 		.word	UART_1_rxBufferLoopDetect
 153 00c4 00000000 		.word	UART_1_rxBufferOverflow
 154 00c8 00000000 		.word	UART_1_rxBufferRead
 155              		.cfi_endproc
 156              	.LFE0:
 157              		.size	UART_1_RXISR, .-UART_1_RXISR
 158              		.text
 159              	.Letext0:
 160              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 161              		.file 3 ".\\Generated_Source\\PSoC4\\UART_1.h"
 162              		.section	.debug_info,"",%progbits
 163              	.Ldebug_info0:
 164 0000 2F010000 		.4byte	0x12f
 165 0004 0400     		.2byte	0x4
 166 0006 00000000 		.4byte	.Ldebug_abbrev0
 167 000a 04       		.byte	0x4
 168 000b 01       		.uleb128 0x1
 169 000c 08010000 		.4byte	.LASF23
 170 0010 01       		.byte	0x1
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 7


 171 0011 81000000 		.4byte	.LASF24
 172 0015 0E000000 		.4byte	.LASF25
 173 0019 00000000 		.4byte	.Ldebug_ranges0+0
 174 001d 00000000 		.4byte	0
 175 0021 00000000 		.4byte	.Ldebug_line0
 176 0025 02       		.uleb128 0x2
 177 0026 01       		.byte	0x1
 178 0027 06       		.byte	0x6
 179 0028 D2010000 		.4byte	.LASF0
 180 002c 02       		.uleb128 0x2
 181 002d 01       		.byte	0x1
 182 002e 08       		.byte	0x8
 183 002f 84010000 		.4byte	.LASF1
 184 0033 02       		.uleb128 0x2
 185 0034 02       		.byte	0x2
 186 0035 05       		.byte	0x5
 187 0036 11020000 		.4byte	.LASF2
 188 003a 02       		.uleb128 0x2
 189 003b 02       		.byte	0x2
 190 003c 07       		.byte	0x7
 191 003d BF010000 		.4byte	.LASF3
 192 0041 02       		.uleb128 0x2
 193 0042 04       		.byte	0x4
 194 0043 05       		.byte	0x5
 195 0044 97010000 		.4byte	.LASF4
 196 0048 02       		.uleb128 0x2
 197 0049 04       		.byte	0x4
 198 004a 07       		.byte	0x7
 199 004b DF000000 		.4byte	.LASF5
 200 004f 02       		.uleb128 0x2
 201 0050 08       		.byte	0x8
 202 0051 05       		.byte	0x5
 203 0052 00000000 		.4byte	.LASF6
 204 0056 02       		.uleb128 0x2
 205 0057 08       		.byte	0x8
 206 0058 07       		.byte	0x7
 207 0059 F1000000 		.4byte	.LASF7
 208 005d 03       		.uleb128 0x3
 209 005e 04       		.byte	0x4
 210 005f 05       		.byte	0x5
 211 0060 696E7400 		.ascii	"int\000"
 212 0064 02       		.uleb128 0x2
 213 0065 04       		.byte	0x4
 214 0066 07       		.byte	0x7
 215 0067 4E000000 		.4byte	.LASF8
 216 006b 04       		.uleb128 0x4
 217 006c D9000000 		.4byte	.LASF12
 218 0070 02       		.byte	0x2
 219 0071 A1       		.byte	0xa1
 220 0072 2C000000 		.4byte	0x2c
 221 0076 02       		.uleb128 0x2
 222 0077 04       		.byte	0x4
 223 0078 04       		.byte	0x4
 224 0079 F8010000 		.4byte	.LASF9
 225 007d 02       		.uleb128 0x2
 226 007e 08       		.byte	0x8
 227 007f 04       		.byte	0x4
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 8


 228 0080 B8010000 		.4byte	.LASF10
 229 0084 02       		.uleb128 0x2
 230 0085 01       		.byte	0x1
 231 0086 08       		.byte	0x8
 232 0087 92010000 		.4byte	.LASF11
 233 008b 05       		.uleb128 0x5
 234 008c 1B020000 		.4byte	.LASF13
 235 0090 02       		.byte	0x2
 236 0091 4B01     		.2byte	0x14b
 237 0093 97000000 		.4byte	0x97
 238 0097 06       		.uleb128 0x6
 239 0098 6B000000 		.4byte	0x6b
 240 009c 02       		.uleb128 0x2
 241 009d 04       		.byte	0x4
 242 009e 07       		.byte	0x7
 243 009f 29020000 		.4byte	.LASF14
 244 00a3 07       		.uleb128 0x7
 245 00a4 BC000000 		.4byte	.LASF26
 246 00a8 01       		.byte	0x1
 247 00a9 3C       		.byte	0x3c
 248 00aa 00000000 		.4byte	.LFB0
 249 00ae CC000000 		.4byte	.LFE0-.LFB0
 250 00b2 01       		.uleb128 0x1
 251 00b3 9C       		.byte	0x9c
 252 00b4 D5000000 		.4byte	0xd5
 253 00b8 08       		.uleb128 0x8
 254 00b9 20020000 		.4byte	.LASF15
 255 00bd 01       		.byte	0x1
 256 00be 3E       		.byte	0x3e
 257 00bf 6B000000 		.4byte	0x6b
 258 00c3 02       		.uleb128 0x2
 259 00c4 91       		.byte	0x91
 260 00c5 77       		.sleb128 -9
 261 00c6 08       		.uleb128 0x8
 262 00c7 6F000000 		.4byte	.LASF16
 263 00cb 01       		.byte	0x1
 264 00cc 3F       		.byte	0x3f
 265 00cd 6B000000 		.4byte	0x6b
 266 00d1 02       		.uleb128 0x2
 267 00d2 91       		.byte	0x91
 268 00d3 76       		.sleb128 -10
 269 00d4 00       		.byte	0
 270 00d5 09       		.uleb128 0x9
 271 00d6 FE010000 		.4byte	.LASF17
 272 00da 03       		.byte	0x3
 273 00db 3D01     		.2byte	0x13d
 274 00dd 6B000000 		.4byte	0x6b
 275 00e1 0A       		.uleb128 0xa
 276 00e2 6B000000 		.4byte	0x6b
 277 00e6 F1000000 		.4byte	0xf1
 278 00ea 0B       		.uleb128 0xb
 279 00eb 9C000000 		.4byte	0x9c
 280 00ef 0C       		.byte	0xc
 281 00f0 00       		.byte	0
 282 00f1 09       		.uleb128 0x9
 283 00f2 C9000000 		.4byte	.LASF18
 284 00f6 03       		.byte	0x3
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 9


 285 00f7 3E01     		.2byte	0x13e
 286 00f9 FD000000 		.4byte	0xfd
 287 00fd 06       		.uleb128 0x6
 288 00fe E1000000 		.4byte	0xe1
 289 0102 09       		.uleb128 0x9
 290 0103 5B000000 		.4byte	.LASF19
 291 0107 03       		.byte	0x3
 292 0108 3F01     		.2byte	0x13f
 293 010a 97000000 		.4byte	0x97
 294 010e 09       		.uleb128 0x9
 295 010f A7000000 		.4byte	.LASF20
 296 0113 03       		.byte	0x3
 297 0114 4001     		.2byte	0x140
 298 0116 97000000 		.4byte	0x97
 299 011a 09       		.uleb128 0x9
 300 011b DE010000 		.4byte	.LASF21
 301 011f 03       		.byte	0x3
 302 0120 4101     		.2byte	0x141
 303 0122 97000000 		.4byte	0x97
 304 0126 09       		.uleb128 0x9
 305 0127 A0010000 		.4byte	.LASF22
 306 012b 03       		.byte	0x3
 307 012c 4201     		.2byte	0x142
 308 012e 97000000 		.4byte	0x97
 309 0132 00       		.byte	0
 310              		.section	.debug_abbrev,"",%progbits
 311              	.Ldebug_abbrev0:
 312 0000 01       		.uleb128 0x1
 313 0001 11       		.uleb128 0x11
 314 0002 01       		.byte	0x1
 315 0003 25       		.uleb128 0x25
 316 0004 0E       		.uleb128 0xe
 317 0005 13       		.uleb128 0x13
 318 0006 0B       		.uleb128 0xb
 319 0007 03       		.uleb128 0x3
 320 0008 0E       		.uleb128 0xe
 321 0009 1B       		.uleb128 0x1b
 322 000a 0E       		.uleb128 0xe
 323 000b 55       		.uleb128 0x55
 324 000c 17       		.uleb128 0x17
 325 000d 11       		.uleb128 0x11
 326 000e 01       		.uleb128 0x1
 327 000f 10       		.uleb128 0x10
 328 0010 17       		.uleb128 0x17
 329 0011 00       		.byte	0
 330 0012 00       		.byte	0
 331 0013 02       		.uleb128 0x2
 332 0014 24       		.uleb128 0x24
 333 0015 00       		.byte	0
 334 0016 0B       		.uleb128 0xb
 335 0017 0B       		.uleb128 0xb
 336 0018 3E       		.uleb128 0x3e
 337 0019 0B       		.uleb128 0xb
 338 001a 03       		.uleb128 0x3
 339 001b 0E       		.uleb128 0xe
 340 001c 00       		.byte	0
 341 001d 00       		.byte	0
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 10


 342 001e 03       		.uleb128 0x3
 343 001f 24       		.uleb128 0x24
 344 0020 00       		.byte	0
 345 0021 0B       		.uleb128 0xb
 346 0022 0B       		.uleb128 0xb
 347 0023 3E       		.uleb128 0x3e
 348 0024 0B       		.uleb128 0xb
 349 0025 03       		.uleb128 0x3
 350 0026 08       		.uleb128 0x8
 351 0027 00       		.byte	0
 352 0028 00       		.byte	0
 353 0029 04       		.uleb128 0x4
 354 002a 16       		.uleb128 0x16
 355 002b 00       		.byte	0
 356 002c 03       		.uleb128 0x3
 357 002d 0E       		.uleb128 0xe
 358 002e 3A       		.uleb128 0x3a
 359 002f 0B       		.uleb128 0xb
 360 0030 3B       		.uleb128 0x3b
 361 0031 0B       		.uleb128 0xb
 362 0032 49       		.uleb128 0x49
 363 0033 13       		.uleb128 0x13
 364 0034 00       		.byte	0
 365 0035 00       		.byte	0
 366 0036 05       		.uleb128 0x5
 367 0037 16       		.uleb128 0x16
 368 0038 00       		.byte	0
 369 0039 03       		.uleb128 0x3
 370 003a 0E       		.uleb128 0xe
 371 003b 3A       		.uleb128 0x3a
 372 003c 0B       		.uleb128 0xb
 373 003d 3B       		.uleb128 0x3b
 374 003e 05       		.uleb128 0x5
 375 003f 49       		.uleb128 0x49
 376 0040 13       		.uleb128 0x13
 377 0041 00       		.byte	0
 378 0042 00       		.byte	0
 379 0043 06       		.uleb128 0x6
 380 0044 35       		.uleb128 0x35
 381 0045 00       		.byte	0
 382 0046 49       		.uleb128 0x49
 383 0047 13       		.uleb128 0x13
 384 0048 00       		.byte	0
 385 0049 00       		.byte	0
 386 004a 07       		.uleb128 0x7
 387 004b 2E       		.uleb128 0x2e
 388 004c 01       		.byte	0x1
 389 004d 3F       		.uleb128 0x3f
 390 004e 19       		.uleb128 0x19
 391 004f 03       		.uleb128 0x3
 392 0050 0E       		.uleb128 0xe
 393 0051 3A       		.uleb128 0x3a
 394 0052 0B       		.uleb128 0xb
 395 0053 3B       		.uleb128 0x3b
 396 0054 0B       		.uleb128 0xb
 397 0055 27       		.uleb128 0x27
 398 0056 19       		.uleb128 0x19
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 11


 399 0057 11       		.uleb128 0x11
 400 0058 01       		.uleb128 0x1
 401 0059 12       		.uleb128 0x12
 402 005a 06       		.uleb128 0x6
 403 005b 40       		.uleb128 0x40
 404 005c 18       		.uleb128 0x18
 405 005d 9742     		.uleb128 0x2117
 406 005f 19       		.uleb128 0x19
 407 0060 01       		.uleb128 0x1
 408 0061 13       		.uleb128 0x13
 409 0062 00       		.byte	0
 410 0063 00       		.byte	0
 411 0064 08       		.uleb128 0x8
 412 0065 34       		.uleb128 0x34
 413 0066 00       		.byte	0
 414 0067 03       		.uleb128 0x3
 415 0068 0E       		.uleb128 0xe
 416 0069 3A       		.uleb128 0x3a
 417 006a 0B       		.uleb128 0xb
 418 006b 3B       		.uleb128 0x3b
 419 006c 0B       		.uleb128 0xb
 420 006d 49       		.uleb128 0x49
 421 006e 13       		.uleb128 0x13
 422 006f 02       		.uleb128 0x2
 423 0070 18       		.uleb128 0x18
 424 0071 00       		.byte	0
 425 0072 00       		.byte	0
 426 0073 09       		.uleb128 0x9
 427 0074 34       		.uleb128 0x34
 428 0075 00       		.byte	0
 429 0076 03       		.uleb128 0x3
 430 0077 0E       		.uleb128 0xe
 431 0078 3A       		.uleb128 0x3a
 432 0079 0B       		.uleb128 0xb
 433 007a 3B       		.uleb128 0x3b
 434 007b 05       		.uleb128 0x5
 435 007c 49       		.uleb128 0x49
 436 007d 13       		.uleb128 0x13
 437 007e 3F       		.uleb128 0x3f
 438 007f 19       		.uleb128 0x19
 439 0080 3C       		.uleb128 0x3c
 440 0081 19       		.uleb128 0x19
 441 0082 00       		.byte	0
 442 0083 00       		.byte	0
 443 0084 0A       		.uleb128 0xa
 444 0085 01       		.uleb128 0x1
 445 0086 01       		.byte	0x1
 446 0087 49       		.uleb128 0x49
 447 0088 13       		.uleb128 0x13
 448 0089 01       		.uleb128 0x1
 449 008a 13       		.uleb128 0x13
 450 008b 00       		.byte	0
 451 008c 00       		.byte	0
 452 008d 0B       		.uleb128 0xb
 453 008e 21       		.uleb128 0x21
 454 008f 00       		.byte	0
 455 0090 49       		.uleb128 0x49
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 12


 456 0091 13       		.uleb128 0x13
 457 0092 2F       		.uleb128 0x2f
 458 0093 0B       		.uleb128 0xb
 459 0094 00       		.byte	0
 460 0095 00       		.byte	0
 461 0096 00       		.byte	0
 462              		.section	.debug_aranges,"",%progbits
 463 0000 1C000000 		.4byte	0x1c
 464 0004 0200     		.2byte	0x2
 465 0006 00000000 		.4byte	.Ldebug_info0
 466 000a 04       		.byte	0x4
 467 000b 00       		.byte	0
 468 000c 0000     		.2byte	0
 469 000e 0000     		.2byte	0
 470 0010 00000000 		.4byte	.LFB0
 471 0014 CC000000 		.4byte	.LFE0-.LFB0
 472 0018 00000000 		.4byte	0
 473 001c 00000000 		.4byte	0
 474              		.section	.debug_ranges,"",%progbits
 475              	.Ldebug_ranges0:
 476 0000 00000000 		.4byte	.LFB0
 477 0004 CC000000 		.4byte	.LFE0
 478 0008 00000000 		.4byte	0
 479 000c 00000000 		.4byte	0
 480              		.section	.debug_line,"",%progbits
 481              	.Ldebug_line0:
 482 0000 8F000000 		.section	.debug_str,"MS",%progbits,1
 482      02005500 
 482      00000201 
 482      FB0E0D00 
 482      01010101 
 483              	.LASF6:
 484 0000 6C6F6E67 		.ascii	"long long int\000"
 484      206C6F6E 
 484      6720696E 
 484      7400
 485              	.LASF25:
 486 000e 433A5C55 		.ascii	"C:\\Users\\Eric\\Documents\\GitHub\\Shifting\\Shift"
 486      73657273 
 486      5C457269 
 486      635C446F 
 486      63756D65 
 487 003b 696E675C 		.ascii	"ing\\Shifting.cydsn\000"
 487      53686966 
 487      74696E67 
 487      2E637964 
 487      736E00
 488              	.LASF8:
 489 004e 756E7369 		.ascii	"unsigned int\000"
 489      676E6564 
 489      20696E74 
 489      00
 490              	.LASF19:
 491 005b 55415254 		.ascii	"UART_1_rxBufferRead\000"
 491      5F315F72 
 491      78427566 
 491      66657252 
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 13


 491      65616400 
 492              	.LASF16:
 493 006f 696E6372 		.ascii	"increment_pointer\000"
 493      656D656E 
 493      745F706F 
 493      696E7465 
 493      7200
 494              	.LASF24:
 495 0081 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1_INT.c\000"
 495      6E657261 
 495      7465645F 
 495      536F7572 
 495      63655C50 
 496              	.LASF20:
 497 00a7 55415254 		.ascii	"UART_1_rxBufferWrite\000"
 497      5F315F72 
 497      78427566 
 497      66657257 
 497      72697465 
 498              	.LASF26:
 499 00bc 55415254 		.ascii	"UART_1_RXISR\000"
 499      5F315F52 
 499      58495352 
 499      00
 500              	.LASF18:
 501 00c9 55415254 		.ascii	"UART_1_rxBuffer\000"
 501      5F315F72 
 501      78427566 
 501      66657200 
 502              	.LASF12:
 503 00d9 75696E74 		.ascii	"uint8\000"
 503      3800
 504              	.LASF5:
 505 00df 6C6F6E67 		.ascii	"long unsigned int\000"
 505      20756E73 
 505      69676E65 
 505      6420696E 
 505      7400
 506              	.LASF7:
 507 00f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 507      206C6F6E 
 507      6720756E 
 507      7369676E 
 507      65642069 
 508              	.LASF23:
 509 0108 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 509      4320342E 
 509      382E3420 
 509      32303134 
 509      30353236 
 510 013b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 510      20726576 
 510      6973696F 
 510      6E203231 
 510      31333538 
 511 016e 30202D66 		.ascii	"0 -ffunction-sections\000"
 511      66756E63 
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 14


 511      74696F6E 
 511      2D736563 
 511      74696F6E 
 512              	.LASF1:
 513 0184 756E7369 		.ascii	"unsigned char\000"
 513      676E6564 
 513      20636861 
 513      7200
 514              	.LASF11:
 515 0192 63686172 		.ascii	"char\000"
 515      00
 516              	.LASF4:
 517 0197 6C6F6E67 		.ascii	"long int\000"
 517      20696E74 
 517      00
 518              	.LASF22:
 519 01a0 55415254 		.ascii	"UART_1_rxBufferOverflow\000"
 519      5F315F72 
 519      78427566 
 519      6665724F 
 519      76657266 
 520              	.LASF10:
 521 01b8 646F7562 		.ascii	"double\000"
 521      6C6500
 522              	.LASF3:
 523 01bf 73686F72 		.ascii	"short unsigned int\000"
 523      7420756E 
 523      7369676E 
 523      65642069 
 523      6E7400
 524              	.LASF0:
 525 01d2 7369676E 		.ascii	"signed char\000"
 525      65642063 
 525      68617200 
 526              	.LASF21:
 527 01de 55415254 		.ascii	"UART_1_rxBufferLoopDetect\000"
 527      5F315F72 
 527      78427566 
 527      6665724C 
 527      6F6F7044 
 528              	.LASF9:
 529 01f8 666C6F61 		.ascii	"float\000"
 529      7400
 530              	.LASF17:
 531 01fe 55415254 		.ascii	"UART_1_errorStatus\000"
 531      5F315F65 
 531      72726F72 
 531      53746174 
 531      757300
 532              	.LASF2:
 533 0211 73686F72 		.ascii	"short int\000"
 533      7420696E 
 533      7400
 534              	.LASF13:
 535 021b 72656738 		.ascii	"reg8\000"
 535      00
 536              	.LASF15:
ARM GAS  C:\Users\Eric\AppData\Local\Temp\ccNunkMi.s 			page 15


 537 0220 72656164 		.ascii	"readData\000"
 537      44617461 
 537      00
 538              	.LASF14:
 539 0229 73697A65 		.ascii	"sizetype\000"
 539      74797065 
 539      00
 540              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
