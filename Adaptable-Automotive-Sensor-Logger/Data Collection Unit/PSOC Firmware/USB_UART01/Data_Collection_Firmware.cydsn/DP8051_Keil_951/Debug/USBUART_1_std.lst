C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_1_STD
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_1_std.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_1_std.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\USBUART_1_std.lst) CD D
                    -B NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\USBUART_1_std.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBUART_1_std.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  USB Standard request handler.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USBUART_1.h"
  18          #include "USBUART_1_cdc.h"
  19          #include "USBUART_1_pvt.h"
  20          #if defined(USBUART_1_ENABLE_MIDI_STREAMING)
                  #include "USBUART_1_midi.h"
              #endif /*  USBUART_1_ENABLE_MIDI_STREAMING*/
  23          
  24          
  25          /***************************************
  26          *   Static data allocation
  27          ***************************************/
  28          
  29          #if defined(USBUART_1_ENABLE_FWSN_STRING)
                  static volatile uint8 *USBUART_1_fwSerialNumberStringDescriptor;
                  static volatile uint8 USBUART_1_snStringConfirm = USBUART_1_FALSE;
              #endif  /* USBUART_1_ENABLE_FWSN_STRING */
  33          
  34          #if defined(USBUART_1_ENABLE_FWSN_STRING)
              
                  /*******************************************************************************
                  * Function Name: USBUART_1_SerialNumString
                  ********************************************************************************
                  *
                  * Summary:
                  *  Application firmware may supply the source of the USB device descriptors
                  *  serial number string during runtime.
                  *
                  * Parameters:
                  *  snString:  pointer to string.
                  *
                  * Return:
                  *  None.
                  *
                  * Reentrant:
                  *  No.
                  *
                  *******************************************************************************/
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 2   

                  void  USBUART_1_SerialNumString(uint8 snString[]) 
                  {
                      USBUART_1_snStringConfirm = USBUART_1_FALSE;
                      if(snString != NULL)
                      {
                          /* Check descriptor validation */
                          if( (snString[0u] > 1u ) && (snString[1u] == USBUART_1_DESCR_STRING) )
                          {
                              USBUART_1_fwSerialNumberStringDescriptor = snString;
                              USBUART_1_snStringConfirm = USBUART_1_TRUE;
                          }
                      }
                  }
              
              #endif  /* USBUART_1_ENABLE_FWSN_STRING */
  69          
  70          
  71          /*******************************************************************************
  72          * Function Name: USBUART_1_HandleStandardRqst
  73          ********************************************************************************
  74          *
  75          * Summary:
  76          *  This Routine dispatches standard requests
  77          *
  78          * Parameters:
  79          *  None.
  80          *
  81          * Return:
  82          *  TRUE if request handled.
  83          *
  84          * Reentrant:
  85          *  No.
  86          *
  87          *******************************************************************************/
  88          uint8 USBUART_1_HandleStandardRqst(void) 
  89          {
  90   1          uint8 requestHandled = USBUART_1_FALSE;
  91   1          uint8 interfaceNumber;
  92   1          uint8 configurationN;
  93   1          #if defined(USBUART_1_ENABLE_STRINGS)
  94   1              volatile uint8 *pStr = 0u;
  95   1              #if defined(USBUART_1_ENABLE_DESCRIPTOR_STRINGS)
  96   1                  uint8 nStr;
  97   1                  uint8 descrLength;
  98   1              #endif /* USBUART_1_ENABLE_DESCRIPTOR_STRINGS */
  99   1          #endif /* USBUART_1_ENABLE_STRINGS */
 100   1          static volatile uint8 USBUART_1_tBuffer[USBUART_1_STATUS_LENGTH_MAX];
 101   1          const T_USBUART_1_LUT CYCODE *pTmp;
 102   1          USBUART_1_currentTD.count = 0u;
 103   1      
 104   1          if ((CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_DIR_MASK) == USBUART_1_RQST_DIR_D2H)
 105   1          {
 106   2              /* Control Read */
 107   2              switch (CY_GET_REG8(USBUART_1_bRequest))
 108   2              {
 109   3                  case USBUART_1_GET_DESCRIPTOR:
 110   3                      if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_DEVICE)
 111   3                      {
 112   4                          pTmp = USBUART_1_GetDeviceTablePtr();
 113   4                          USBUART_1_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 114   4                          USBUART_1_currentTD.count = USBUART_1_DEVICE_DESCR_LENGTH;
 115   4                          requestHandled  = USBUART_1_InitControlRead();
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 3   

 116   4                      }
 117   3                      else if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_CONFIG)
 118   3                      {
 119   4                          pTmp = USBUART_1_GetConfigTablePtr(CY_GET_REG8(USBUART_1_wValueLo));
 120   4                          if( pTmp != NULL )  /* Verify that requested descriptor exists */
 121   4                          {
 122   5                              USBUART_1_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 123   5                              USBUART_1_currentTD.count = ((uint16)(USBUART_1_currentTD.pData)[ \
 124   5                                                USBUART_1_CONFIG_DESCR_TOTAL_LENGTH_HI] << 8u) | \
 125   5                                               (USBUART_1_currentTD.pData)[USBUART_1_CONFIG_DESCR_TOTAL_LENGTH_L
             -OW];
 126   5                              requestHandled  = USBUART_1_InitControlRead();
 127   5                          }
 128   4                      }
 129   3                      #if defined(USBUART_1_ENABLE_STRINGS)
 130   3                      else if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_STRING)
 131   3                      {
 132   4                          /* Descriptor Strings*/
 133   4                          #if defined(USBUART_1_ENABLE_DESCRIPTOR_STRINGS)
 134   4                              nStr = 0u;
 135   4                              pStr = (volatile uint8 *)&USBUART_1_STRING_DESCRIPTORS[0u];
 136   4                              while ( (CY_GET_REG8(USBUART_1_wValueLo) > nStr) && (*pStr != 0u) )
 137   4                              {
 138   5                                  /* Read descriptor length from 1st byte */
 139   5                                  descrLength = *pStr;
 140   5                                  /* Move to next string descriptor */
 141   5                                  pStr = &pStr[descrLength];
 142   5                                  nStr++;
 143   5                              }
 144   4                          #endif /*  USBUART_1_ENABLE_DESCRIPTOR_STRINGS */
 145   4                          /* Microsoft OS String*/
 146   4                          #if defined(USBUART_1_ENABLE_MSOS_STRING)
 147   4                              if( CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_STRING_MSOS )
 148   4                              {
 149   5                                  pStr = (volatile uint8 *)&USBUART_1_MSOS_DESCRIPTOR[0u];
 150   5                              }
 151   4                          #endif /*  USBUART_1_ENABLE_MSOS_STRING*/
 152   4                          /* SN string */
 153   4                          #if defined(USBUART_1_ENABLE_SN_STRING)
 154   4                              if( (CY_GET_REG8(USBUART_1_wValueLo) != 0u) &&
 155   4                                  (CY_GET_REG8(USBUART_1_wValueLo) ==
 156   4                                  USBUART_1_DEVICE0_DESCR[USBUART_1_DEVICE_DESCR_SN_SHIFT]) )
 157   4                              {
 158   5                                  
 159   5                                  #if defined(USBUART_1_ENABLE_IDSN_STRING)
 160   5                                      /* Read DIE ID and generate string descriptor in RAM */
 161   5                                      USBUART_1_ReadDieID(USBUART_1_idSerialNumberStringDescriptor);
 162   5                                      pStr = USBUART_1_idSerialNumberStringDescriptor;
 163   5                                  #elif defined(USBUART_1_ENABLE_FWSN_STRING)
                                              if(USBUART_1_snStringConfirm != USBUART_1_FALSE)
                                              {
                                                  pStr = USBUART_1_fwSerialNumberStringDescriptor;
                                              }
                                              else
                                              {
                                                  pStr = (volatile uint8 *)&USBUART_1_SN_STRING_DESCRIPTOR[0u];
                                              }
                                          #else
                                              pStr = (volatile uint8 *)&USBUART_1_SN_STRING_DESCRIPTOR[0u];
                                          #endif  /* defined(USBUART_1_ENABLE_IDSN_STRING) */
 175   5                              }
 176   4                          #endif    /*  USBUART_1_ENABLE_SN_STRING */
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 4   

 177   4                          if (*pStr != 0u)
 178   4                          {
 179   5                              USBUART_1_currentTD.count = *pStr;
 180   5                              USBUART_1_currentTD.pData = pStr;
 181   5                              requestHandled  = USBUART_1_InitControlRead();
 182   5                          }
 183   4                      }
 184   3                      #endif /*  USBUART_1_ENABLE_STRINGS */
 185   3                      else
 186   3                      {
 187   4                          requestHandled = USBUART_1_DispatchClassRqst();
 188   4                      }
 189   3                      break;
 190   3                  case USBUART_1_GET_STATUS:
 191   3                      switch ((CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_RCPT_MASK))
 192   3                      {
 193   4                          case USBUART_1_RQST_RCPT_EP:
 194   4                              USBUART_1_currentTD.count = USBUART_1_EP_STATUS_LENGTH;
 195   4                              USBUART_1_tBuffer[0u] = USBUART_1_EP[ \
 196   4                                              CY_GET_REG8(USBUART_1_wIndexLo) & USBUART_1_DIR_UNUSED].hwEpState;
 197   4                              USBUART_1_tBuffer[1u] = 0u;
 198   4                              USBUART_1_currentTD.pData = &USBUART_1_tBuffer[0u];
 199   4                              requestHandled  = USBUART_1_InitControlRead();
 200   4                              break;
 201   4                          case USBUART_1_RQST_RCPT_DEV:
 202   4                              USBUART_1_currentTD.count = USBUART_1_DEVICE_STATUS_LENGTH;
 203   4                              USBUART_1_tBuffer[0u] = USBUART_1_deviceStatus;
 204   4                              USBUART_1_tBuffer[1u] = 0u;
 205   4                              USBUART_1_currentTD.pData = &USBUART_1_tBuffer[0u];
 206   4                              requestHandled  = USBUART_1_InitControlRead();
 207   4                              break;
 208   4                          default:    /* requestHandled is initialized as FALSE by default */
 209   4                              break;
 210   4                      }
 211   3                      break;
 212   3                  case USBUART_1_GET_CONFIGURATION:
 213   3                      USBUART_1_currentTD.count = 1u;
 214   3                      USBUART_1_currentTD.pData = (volatile uint8 *)&USBUART_1_configuration;
 215   3                      requestHandled  = USBUART_1_InitControlRead();
 216   3                      break;
 217   3                  case USBUART_1_GET_INTERFACE:
 218   3                      USBUART_1_currentTD.count = 1u;
 219   3                      USBUART_1_currentTD.pData = (volatile uint8 *)&USBUART_1_interfaceSetting[ \
 220   3                                                                                  CY_GET_REG8(USBUART_1_wIndexLo
             -)];
 221   3                      requestHandled  = USBUART_1_InitControlRead();
 222   3                      break;
 223   3                  default: /* requestHandled is initialized as FALSE by default */
 224   3                      break;
 225   3              }
 226   2          }
 227   1          else {
 228   2              /* Control Write */
 229   2              switch (CY_GET_REG8(USBUART_1_bRequest))
 230   2              {
 231   3                  case USBUART_1_SET_ADDRESS:
 232   3                      USBUART_1_deviceAddress = CY_GET_REG8(USBUART_1_wValueLo);
 233   3                      requestHandled = USBUART_1_InitNoDataControlTransfer();
 234   3                      break;
 235   3                  case USBUART_1_SET_CONFIGURATION:
 236   3                      configurationN = CY_GET_REG8(USBUART_1_wValueLo);
 237   3                      if(configurationN > 0)
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 5   

 238   3                      {   /* Verify that configuration descriptor exists */
 239   4                          pTmp = USBUART_1_GetConfigTablePtr(configurationN - 1u);
 240   4                      }
 241   3                      /* Responds with a Request Error when configuration number is invalid */
 242   3                      if (((configurationN > 0) && (pTmp != NULL)) || (configurationN == 0u))
 243   3                      {
 244   4                          /* Set new configuration if it has been changed */
 245   4                          if(configurationN != USBUART_1_configuration)        
 246   4                          {
 247   5                              USBUART_1_configuration = configurationN;
 248   5                              USBUART_1_configurationChanged = USBUART_1_TRUE;
 249   5                              USBUART_1_Config(USBUART_1_TRUE);
 250   5                          }
 251   4                          requestHandled = USBUART_1_InitNoDataControlTransfer();
 252   4                      }
 253   3                      break;
 254   3                  case USBUART_1_SET_INTERFACE:
 255   3                      if (USBUART_1_ValidateAlternateSetting() != 0u)
 256   3                      {
 257   4                          interfaceNumber = CY_GET_REG8(USBUART_1_wIndexLo);
 258   4                          USBUART_1_interfaceNumber = interfaceNumber;
 259   4                          USBUART_1_configurationChanged = USBUART_1_TRUE;
 260   4                          #if ((USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) && \
 261   4                               (USBUART_1_EP_MM == USBUART_1__EP_MANUAL) )
                                      USBUART_1_Config(USBUART_1_FALSE);
                                  #else
 264   4                              USBUART_1_ConfigAltChanged();
 265   4                          #endif /*  (USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) */
 266   4                          /* Update handled Alt setting changes status */
 267   4                          USBUART_1_interfaceSetting_last[interfaceNumber] =
 268   4                               USBUART_1_interfaceSetting[interfaceNumber];
 269   4                          requestHandled = USBUART_1_InitNoDataControlTransfer();
 270   4                      }
 271   3                      break;
 272   3                  case USBUART_1_CLEAR_FEATURE:
 273   3                      switch (CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_RCPT_MASK)
 274   3                      {
 275   4                          case USBUART_1_RQST_RCPT_EP:
 276   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_ENDPOINT_HALT)
 277   4                              {
 278   5                                  requestHandled = USBUART_1_ClearEndpointHalt();
 279   5                              }
 280   4                              break;
 281   4                          case USBUART_1_RQST_RCPT_DEV:
 282   4                              /* Clear device REMOTE_WAKEUP */
 283   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_DEVICE_REMOTE_WAKEUP)
 284   4                              {
 285   5                                  USBUART_1_deviceStatus &= (uint8)~USBUART_1_DEVICE_STATUS_REMOTE_WAKEUP;
 286   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 287   5                              }
 288   4                              break;
 289   4                          case USBUART_1_RQST_RCPT_IFC:
 290   4                              /* Validate interfaceNumber */
 291   4                              if (CY_GET_REG8(USBUART_1_wIndexLo) < USBUART_1_MAX_INTERFACES_NUMBER)
 292   4                              {
 293   5                                  USBUART_1_interfaceStatus[CY_GET_REG8(USBUART_1_wIndexLo)] &=
 294   5                                                                      (uint8)~(CY_GET_REG8(USBUART_1_wValueLo));
 295   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 296   5                              }
 297   4                              break;
 298   4                          default:    /* requestHandled is initialized as FALSE by default */
 299   4                              break;
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 6   

 300   4                      }
 301   3                      break;
 302   3                  case USBUART_1_SET_FEATURE:
 303   3                      switch (CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_RCPT_MASK)
 304   3                      {
 305   4                          case USBUART_1_RQST_RCPT_EP:
 306   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_ENDPOINT_HALT)
 307   4                              {
 308   5                                  requestHandled = USBUART_1_SetEndpointHalt();
 309   5                              }
 310   4                              break;
 311   4                          case USBUART_1_RQST_RCPT_DEV:
 312   4                              /* Set device REMOTE_WAKEUP */
 313   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_DEVICE_REMOTE_WAKEUP)
 314   4                              {
 315   5                                  USBUART_1_deviceStatus |= USBUART_1_DEVICE_STATUS_REMOTE_WAKEUP;
 316   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 317   5                              }
 318   4                              break;
 319   4                          case USBUART_1_RQST_RCPT_IFC:
 320   4                              /* Validate interfaceNumber */
 321   4                              if (CY_GET_REG8(USBUART_1_wIndexLo) < USBUART_1_MAX_INTERFACES_NUMBER)
 322   4                              {
 323   5                                  USBUART_1_interfaceStatus[CY_GET_REG8(USBUART_1_wIndexLo)] &=
 324   5                                                                      (uint8)~(CY_GET_REG8(USBUART_1_wValueLo));
 325   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 326   5                              }
 327   4                              break;
 328   4                          default:    /* requestHandled is initialized as FALSE by default */
 329   4                              break;
 330   4                      }
 331   3                      break;
 332   3                  default:    /* requestHandled is initialized as FALSE by default */
 333   3                      break;
 334   3              }
 335   2          }
 336   1          return(requestHandled);
 337   1      }
 338          
 339          
 340          #if defined(USBUART_1_ENABLE_IDSN_STRING)
 341          
 342              /***************************************************************************
 343              * Function Name: USBUART_1_ReadDieID
 344              ****************************************************************************
 345              *
 346              * Summary:
 347              *  This routine read Die ID and generate Serial Number string descriptor.
 348              *
 349              * Parameters:
 350              *  descr:  pointer on string descriptor.
 351              *
 352              * Return:
 353              *  None.
 354              *
 355              * Reentrant:
 356              *  No.
 357              *
 358              ***************************************************************************/
 359              void USBUART_1_ReadDieID(uint8 descr[]) 
 360              {
 361   1              uint8 i;
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 7   

 362   1              uint8 j = 0u;
 363   1              uint8 value;
 364   1              const char8 CYCODE hex[16u] = "0123456789ABCDEF";
 365   1      
 366   1              /* Check descriptor validation */
 367   1              if( descr != NULL)
 368   1              {
 369   2                  descr[0u] = USBUART_1_IDSN_DESCR_LENGTH;
 370   2                  descr[1u] = USBUART_1_DESCR_STRING;
 371   2      
 372   2                  /* fill descriptor */
 373   2                  for(i = 2u; i < USBUART_1_IDSN_DESCR_LENGTH; i += 4u)
 374   2                  {
 375   3                      value = CY_GET_XTND_REG8((void CYFAR *)(USBUART_1_DIE_ID + j));
 376   3                      j++;
 377   3                      descr[i] = (uint8)hex[value >> 4u];
 378   3                      descr[i + 2u] = (uint8)hex[value & 0x0Fu];
 379   3                  }
 380   2              }
 381   1          }
 382          
 383          #endif /*  USBUART_1_ENABLE_IDSN_STRING */
 384          
 385          
 386          /*******************************************************************************
 387          * Function Name: USBUART_1_ConfigReg
 388          ********************************************************************************
 389          *
 390          * Summary:
 391          *  This routine configures hardware registers from the variables.
 392          *  It is called from USBUART_1_Config() function and from RestoreConfig
 393          *  after Wakeup.
 394          *
 395          * Parameters:
 396          *  None.
 397          *
 398          * Return:
 399          *  None.
 400          *
 401          *******************************************************************************/
 402          void USBUART_1_ConfigReg(void) 
 403          {
 404   1          uint8 ep;
 405   1          uint8 i;
 406   1          #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                      uint8 epType = 0u;
                  #endif /*  USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 409   1      
 410   1          /* Set the endpoint buffer addresses */
 411   1          ep = USBUART_1_EP1;
 412   1          for (i = 0u; i < 0x80u; i+= 0x10u)
 413   1          {
 414   2              CY_SET_REG8((reg8 *)(USBUART_1_ARB_EP1_CFG_IND + i), USBUART_1_ARB_EPX_CFG_DEFAULT);
 415   2              #if(USBUART_1_EP_MM != USBUART_1__EP_MANUAL)
                          /* Enable all Arbiter EP Interrupts : err, buf under, buf over, dma gnt(mode2 only), in buf fu
             -ll */
                          CY_SET_REG8((reg8 *)(USBUART_1_ARB_EP1_INT_EN_IND + i), USBUART_1_ARB_EPX_INT_MASK);
                      #endif   /*  USBUART_1_EP_MM != USBUART_1__EP_MANUAL */
 419   2      
 420   2              if(USBUART_1_EP[ep].epMode != USBUART_1_MODE_DISABLE)
 421   2              {
 422   3                  if((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u )
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 8   

 423   3                  {
 424   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + i), USBUART_1_MODE_NAK_IN);
 425   4                  }
 426   3                  else
 427   3                  {
 428   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + i), USBUART_1_MODE_NAK_OUT);
 429   4                      /* Prepare EP type mask for automatic memory allocation */
 430   4                      #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                                  epType |= (uint8)(0x01u << (ep - USBUART_1_EP1));
                              #endif /*  USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 433   4                  }
 434   3              }
 435   2              else
 436   2              {
 437   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + i), USBUART_1_MODE_STALL_DATA_EP);
 438   3              }
 439   2      
 440   2              #if(USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO)
 441   2                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + i),   USBUART_1_EP[ep].bufferSize >> 8u);
 442   2                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT1_IND + i),   USBUART_1_EP[ep].bufferSize & 0xFFu);
 443   2      
 444   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_IND + i),     USBUART_1_EP[ep].buffOffset & 0xFFu);
 445   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_MSB_IND + i), USBUART_1_EP[ep].buffOffset >> 8u);
 446   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_IND + i),     USBUART_1_EP[ep].buffOffset & 0xFFu);
 447   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_MSB_IND + i), USBUART_1_EP[ep].buffOffset >> 8u);
 448   2              #endif /*  USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO */
 449   2      
 450   2              ep++;
 451   2          }
 452   1      
 453   1          #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                       /* BUF_SIZE depend on DMA_THRESS value: 55-32 bytes  44-16 bytes 33-8 bytes 22-4 bytes 11-2 bytes
             - */
                      USBUART_1_BUF_SIZE_REG = USBUART_1_DMA_BUF_SIZE;
                      USBUART_1_DMA_THRES_REG = USBUART_1_DMA_BYTES_PER_BURST;   /* DMA burst threshold */
                      USBUART_1_DMA_THRES_MSB_REG = 0u;
                      USBUART_1_EP_ACTIVE_REG = USBUART_1_ARB_INT_MASK;
                      USBUART_1_EP_TYPE_REG = epType;
                      /* Cfg_cmp bit set to 1 once configuration is complete. */
                      USBUART_1_ARB_CFG_REG = USBUART_1_ARB_CFG_AUTO_DMA | USBUART_1_ARB_CFG_AUTO_MEM |
                                                     USBUART_1_ARB_CFG_CFG_CPM;
                      /* Cfg_cmp bit set to 0 during configuration of PFSUSB Registers. */
                      USBUART_1_ARB_CFG_REG = USBUART_1_ARB_CFG_AUTO_DMA | USBUART_1_ARB_CFG_AUTO_MEM;
                  #endif /*  USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 466   1      
 467   1          CY_SET_REG8(USBUART_1_SIE_EP_INT_EN_PTR, 0xFFu);
 468   1      }
 469          
 470          
 471          /*******************************************************************************
 472          * Function Name: USBUART_1_Config
 473          ********************************************************************************
 474          *
 475          * Summary:
 476          *  This routine configures endpoints for the entire configuration by scanning
 477          *  the configuration descriptor.
 478          *
 479          * Parameters:
 480          *  clearAltSetting: It configures the bAlternateSetting 0 for each interface.
 481          *
 482          * Return:
 483          *  None.
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 9   

 484          *
 485          * USBUART_1_interfaceClass - Initialized class array for each interface.
 486          *   It is used for handling Class specific requests depend on interface class.
 487          *   Different classes in multiple Alternate settings does not supported.
 488          *
 489          * Reentrant:
 490          *  No.
 491          *
 492          *******************************************************************************/
 493          void USBUART_1_Config(uint8 clearAltSetting) 
 494          {
 495   1          uint8 ep;
 496   1          uint8 cur_ep;
 497   1          uint8 i;
 498   1          uint8 epType;
 499   1          const uint8 *pDescr;
 500   1          #if(USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO)
 501   1              uint16 buffCount = 0u;
 502   1          #endif /*  USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO */
 503   1      
 504   1          const T_USBUART_1_LUT CYCODE *pTmp;
 505   1          const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *pEP;
 506   1      
 507   1          /* Clear all of the endpoints */
 508   1          for (ep = 0u; ep < USBUART_1_MAX_EP; ep++)
 509   1          {
 510   2              USBUART_1_EP[ep].attrib = 0u;
 511   2              USBUART_1_EP[ep].hwEpState = 0u;
 512   2              USBUART_1_EP[ep].apiEpState = USBUART_1_NO_EVENT_PENDING;
 513   2              USBUART_1_EP[ep].epToggle = 0u;
 514   2              USBUART_1_EP[ep].epMode = USBUART_1_MODE_DISABLE;
 515   2              USBUART_1_EP[ep].bufferSize = 0u;
 516   2              USBUART_1_EP[ep].interface = 0u;
 517   2      
 518   2          }
 519   1      
 520   1          /* Clear Alternate settings for all interfaces */
 521   1          if(clearAltSetting != 0u)
 522   1          {
 523   2              for (i = 0u; i < USBUART_1_MAX_INTERFACES_NUMBER; i++)
 524   2              {
 525   3                  USBUART_1_interfaceSetting[i] = 0x00u;
 526   3                  USBUART_1_interfaceSetting_last[i] = 0x00u;
 527   3              }
 528   2          }
 529   1      
 530   1          /* Init Endpoints and Device Status if configured */
 531   1          if(USBUART_1_configuration > 0u)
 532   1          {
 533   2              pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 534   2              /* Set Power status for current configuration */
 535   2              pDescr = (const uint8 *)pTmp->p_list;
 536   2              if((pDescr[USBUART_1_CONFIG_DESCR_ATTRIB] & USBUART_1_CONFIG_DESCR_ATTRIB_SELF_POWERED) != 0u)
 537   2              {
 538   3                  USBUART_1_deviceStatus |=  USBUART_1_DEVICE_STATUS_SELF_POWERED;
 539   3              }
 540   2              else
 541   2              {
 542   3                  USBUART_1_deviceStatus &=  (uint8)~USBUART_1_DEVICE_STATUS_SELF_POWERED;
 543   3              }
 544   2              /* Move to next element */
 545   2              pTmp = &pTmp[1u];
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 10  

 546   2              ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 547   2      
 548   2              #if ((USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) && \
 549   2                   (USBUART_1_EP_MM == USBUART_1__EP_MANUAL) )
                          /* Configure for dynamic EP memory allocation */
                          /* p_list points the endpoint setting table. */
                          pEP = (T_USBUART_1_EP_SETTINGS_BLOCK *) pTmp->p_list;
                          for (i = 0u; i < ep; i++)
                          {
                              /* Compare current Alternate setting with EP Alt */
                              if(USBUART_1_interfaceSetting[pEP->interface] == pEP->altSetting)
                              {
                                  cur_ep = pEP->addr & USBUART_1_DIR_UNUSED;
                                  epType = pEP->attributes & USBUART_1_EP_TYPE_MASK;
                                  if (pEP->addr & USBUART_1_DIR_IN)
                                  {
                                      /* IN Endpoint */
                                      USBUART_1_EP[cur_ep].apiEpState = USBUART_1_EVENT_PENDING;
                                      USBUART_1_EP[cur_ep].epMode = (epType == USBUART_1_EP_TYPE_ISOC) ?
                                                                      USBUART_1_MODE_ISO_IN : USBUART_1_MODE_ACK_IN;
                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
                                              (epType != USBUART_1_EP_TYPE_INT))
                                          {
                                              USBUART_1_cdc_data_in_ep = cur_ep;
                                          }
                                      #endif  /*  USBUART_1_ENABLE_CDC_CLASS*/
                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
                                                           (USBUART_1_MIDI_IN_BUFF_SIZE > 0) )
                                          if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                             (epType == USBUART_1_EP_TYPE_BULK))
                                          {
                                              USBUART_1_midi_in_ep = cur_ep;
                                          }
                                      #endif  /*  USBUART_1_ENABLE_MIDI_STREAMING*/
                                  }
                                  else
                                  {
                                      /* OUT Endpoint */
                                      USBUART_1_EP[cur_ep].apiEpState = USBUART_1_NO_EVENT_PENDING;
                                      USBUART_1_EP[cur_ep].epMode = (epType == USBUART_1_EP_TYPE_ISOC) ?
                                                                  USBUART_1_MODE_ISO_OUT : USBUART_1_MODE_ACK_OUT;
                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
                                              (epType != USBUART_1_EP_TYPE_INT))
                                          {
                                              USBUART_1_cdc_data_out_ep = cur_ep;
                                          }
                                      #endif  /*  USBUART_1_ENABLE_CDC_CLASS*/
                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
                                                   (USBUART_1_MIDI_OUT_BUFF_SIZE > 0) )
                                          if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                             (epType == USBUART_1_EP_TYPE_BULK))
                                          {
                                              USBUART_1_midi_out_ep = cur_ep;
                                          }
                                      #endif  /*  USBUART_1_ENABLE_MIDI_STREAMING*/
                                  }
                                  USBUART_1_EP[cur_ep].bufferSize = pEP->bufferSize;
                                  USBUART_1_EP[cur_ep].addr = pEP->addr;
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 11  

                                  USBUART_1_EP[cur_ep].attrib = pEP->attributes;
                              }
                              pEP = &pEP[1u];
                          }
                      #else /* Configure for static EP memory allocation  */
 613   2                  for (i = USBUART_1_EP1; i < USBUART_1_MAX_EP; i++)
 614   2                  {
 615   3                      /* p_list points the endpoint setting table. */
 616   3                      pEP = (const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 617   3                      /* Find max length for each EP and select it (length could be different in different Alt s
             -ettings) */
 618   3                      /* but other settings should be correct with regards to Interface alt Setting */
 619   3                      for (cur_ep = 0u; cur_ep < ep; cur_ep++)
 620   3                      {
 621   4                          /* EP count is equal to EP # in table and we found larger EP length than have before*/
 622   4                          if(i == (pEP->addr & USBUART_1_DIR_UNUSED))
 623   4                          {
 624   5                              if(USBUART_1_EP[i].bufferSize < pEP->bufferSize)
 625   5                              {
 626   6                                  USBUART_1_EP[i].bufferSize = pEP->bufferSize;
 627   6                              }
 628   5                              /* Compare current Alternate setting with EP Alt*/
 629   5                              if(USBUART_1_interfaceSetting[pEP->interface] == pEP->altSetting)
 630   5                              {
 631   6                                  epType = pEP->attributes & USBUART_1_EP_TYPE_MASK;
 632   6                                  if ((pEP->addr & USBUART_1_DIR_IN) != 0u)
 633   6                                  {
 634   7                                      /* IN Endpoint */
 635   7                                      USBUART_1_EP[i].apiEpState = USBUART_1_EVENT_PENDING;
 636   7                                      USBUART_1_EP[i].epMode = (epType == USBUART_1_EP_TYPE_ISOC) ?
 637   7                                                              USBUART_1_MODE_ISO_IN : USBUART_1_MODE_ACK_IN;
 638   7                                      /* Find and initialize CDC IN endpoint number */
 639   7                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
 640   7                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
 641   7                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
 642   7                                              (epType != USBUART_1_EP_TYPE_INT))
 643   7                                          {
 644   8                                              USBUART_1_cdc_data_in_ep = i;
 645   8                                          }
 646   7                                      #endif  /*  USBUART_1_ENABLE_CDC_CLASS*/
 647   7                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 648   7                                                   (USBUART_1_MIDI_IN_BUFF_SIZE > 0) )
                                                  if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                                     (epType == USBUART_1_EP_TYPE_BULK))
                                                  {
                                                      USBUART_1_midi_in_ep = i;
                                                  }
                                              #endif  /*  USBUART_1_ENABLE_MIDI_STREAMING*/
 655   7                                  }
 656   6                                  else
 657   6                                  {
 658   7                                      /* OUT Endpoint */
 659   7                                      USBUART_1_EP[i].apiEpState = USBUART_1_NO_EVENT_PENDING;
 660   7                                      USBUART_1_EP[i].epMode = (epType == USBUART_1_EP_TYPE_ISOC) ?
 661   7                                                          USBUART_1_MODE_ISO_OUT : USBUART_1_MODE_ACK_OUT;
 662   7                                      /* Find and initialize CDC IN endpoint number */
 663   7                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
 664   7                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
 665   7                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
 666   7                                              (epType != USBUART_1_EP_TYPE_INT))
 667   7                                          {
 668   8                                              USBUART_1_cdc_data_out_ep = i;
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 12  

 669   8                                          }
 670   7                                      #endif  /*  USBUART_1_ENABLE_CDC_CLASS*/
 671   7                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 672   7                                                   (USBUART_1_MIDI_OUT_BUFF_SIZE > 0) )
                                                  if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                                     (epType == USBUART_1_EP_TYPE_BULK))
                                                  {
                                                      USBUART_1_midi_out_ep = i;
                                                  }
                                              #endif  /*  USBUART_1_ENABLE_MIDI_STREAMING*/
 679   7                                  }
 680   6                                  USBUART_1_EP[i].addr = pEP->addr;
 681   6                                  USBUART_1_EP[i].attrib = pEP->attributes;
 682   6      
 683   6                                  #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                                              break;      /* use first EP setting in Auto memory managment */
                                          #endif /*  USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 686   6                              }
 687   5                          }
 688   4                          pEP = &pEP[1u];
 689   4                      }
 690   3                  }
 691   2              #endif /*  (USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) */
 692   2      
 693   2              /* Init class array for each interface and interface number for each EP.
 694   2              *  It is used for handling Class specific requests directed to either an
 695   2              *  interface or the endpoint.
 696   2              */
 697   2              /* p_list points the endpoint setting table. */
 698   2              pEP = (const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 699   2              for (i = 0u; i < ep; i++)
 700   2              {
 701   3                  /* Configure interface number for each EP*/
 702   3                  USBUART_1_EP[pEP->addr & USBUART_1_DIR_UNUSED].interface = pEP->interface;
 703   3                  pEP = &pEP[1u];
 704   3              }
 705   2              /* Init pointer on interface class table*/
 706   2              USBUART_1_interfaceClass = USBUART_1_GetInterfaceClassTablePtr();
 707   2              /* Set the endpoint buffer addresses */
 708   2      
 709   2              #if(USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO)
 710   2                  for (ep = USBUART_1_EP1; ep < USBUART_1_MAX_EP; ep++)
 711   2                  {
 712   3                      USBUART_1_EP[ep].buffOffset = buffCount;
 713   3                       buffCount += USBUART_1_EP[ep].bufferSize;
 714   3                  }
 715   2              #endif /*  USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO */
 716   2      
 717   2              /* Configure hardware registers */
 718   2              USBUART_1_ConfigReg();
 719   2          } /* USBUART_1_configuration > 0 */
 720   1      }
 721          
 722          
 723          /*******************************************************************************
 724          * Function Name: USBUART_1_ConfigAltChanged
 725          ********************************************************************************
 726          *
 727          * Summary:
 728          *  This routine update configuration for the required endpoints only.
 729          *  It is called after SET_INTERFACE request when Static memory allocation used.
 730          *
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 13  

 731          * Parameters:
 732          *  None.
 733          *
 734          * Return:
 735          *  None.
 736          *
 737          * Reentrant:
 738          *  No.
 739          *
 740          *******************************************************************************/
 741          void USBUART_1_ConfigAltChanged(void) 
 742          {
 743   1          uint8 ep;
 744   1          uint8 cur_ep;
 745   1          uint8 i;
 746   1          uint8 epType;
 747   1          uint8 ri;
 748   1      
 749   1          const T_USBUART_1_LUT CYCODE *pTmp;
 750   1          const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *pEP;
 751   1      
 752   1      
 753   1          /* Init Endpoints and Device Status if configured */
 754   1          if(USBUART_1_configuration > 0u)
 755   1          {
 756   2              pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 757   2              pTmp = &pTmp[1u];
 758   2              ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 759   2      
 760   2              /* Do not touch EP which doesn't need reconfiguration */
 761   2              /* When Alt setting changed, the only required endpoints need to be reconfigured */
 762   2              /* p_list points the endpoint setting table. */
 763   2              pEP = (const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 764   2              for (i = 0u; i < ep; i++)
 765   2              {
 766   3                  /*If Alt setting changed and new is same with EP Alt */
 767   3                  if((USBUART_1_interfaceSetting[pEP->interface] !=
 768   3                      USBUART_1_interfaceSetting_last[pEP->interface] ) &&
 769   3                     (USBUART_1_interfaceSetting[pEP->interface] == pEP->altSetting) &&
 770   3                     (pEP->interface == CY_GET_REG8(USBUART_1_wIndexLo)))
 771   3                  {
 772   4                      cur_ep = pEP->addr & USBUART_1_DIR_UNUSED;
 773   4                      ri = ((cur_ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
 774   4                      epType = pEP->attributes & USBUART_1_EP_TYPE_MASK;
 775   4                      if ((pEP->addr & USBUART_1_DIR_IN) != 0u)
 776   4                      {
 777   5                          /* IN Endpoint */
 778   5                          USBUART_1_EP[cur_ep].apiEpState = USBUART_1_EVENT_PENDING;
 779   5                          USBUART_1_EP[cur_ep].epMode = (epType == USBUART_1_EP_TYPE_ISOC) ?
 780   5                                                      USBUART_1_MODE_ISO_IN : USBUART_1_MODE_ACK_IN;
 781   5                      }
 782   4                      else
 783   4                      {
 784   5                          /* OUT Endpoint */
 785   5                          USBUART_1_EP[cur_ep].apiEpState = USBUART_1_NO_EVENT_PENDING;
 786   5                          USBUART_1_EP[cur_ep].epMode = (epType == USBUART_1_EP_TYPE_ISOC) ?
 787   5                                                      USBUART_1_MODE_ISO_OUT : USBUART_1_MODE_ACK_OUT;
 788   5                      }
 789   4                       /* Change the SIE mode for the selected EP to NAK ALL */
 790   4                       CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_IN_OUT);
 791   4                      USBUART_1_EP[cur_ep].bufferSize = pEP->bufferSize;
 792   4                      USBUART_1_EP[cur_ep].addr = pEP->addr;
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 14  

 793   4                      USBUART_1_EP[cur_ep].attrib = pEP->attributes;
 794   4      
 795   4                      /* Clear the data toggle */
 796   4                      USBUART_1_EP[cur_ep].epToggle = 0u;
 797   4      
 798   4                      /* Dynamic reconfiguration for mode 3 transfer */
 799   4                  #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                              /* In_data_rdy for selected EP should be set to 0 */
                              * (reg8 *)(USBUART_1_ARB_EP1_CFG_IND + ri) &= (uint8)~USBUART_1_ARB_EPX_CFG_IN_DATA_RDY;
              
                              /* write the EP number for which reconfiguration is required */
                              USBUART_1_DYN_RECONFIG_REG = (cur_ep - USBUART_1_EP1) <<
                                                                  USBUART_1_DYN_RECONFIG_EP_SHIFT;
                              /* Set the dyn_config_en bit in dynamic reconfiguration register */
                              USBUART_1_DYN_RECONFIG_REG |= USBUART_1_DYN_RECONFIG_ENABLE;
                              /* wait for the dyn_config_rdy bit to set by the block,
                              *  this bit will be set to 1 when block is ready for reconfiguration.
                              */
                              while((USBUART_1_DYN_RECONFIG_REG & USBUART_1_DYN_RECONFIG_RDY_STS) == 0u)
                              {
                                  ;
                              }
                              /* Once dyn_config_rdy bit is set, FW can change the EP configuration. */
                              /* Change EP Type with new direction */
                              if((pEP->addr & USBUART_1_DIR_IN) == 0u)
                              {
                                  USBUART_1_EP_TYPE_REG |= (uint8)(0x01u << (cur_ep - USBUART_1_EP1));
                              }
                              else
                              {
                                  USBUART_1_EP_TYPE_REG &= (uint8)~(uint8)(0x01u << (cur_ep - USBUART_1_EP1));
                              }
                              /* dynamic reconfiguration enable bit cleared, pointers and control/status
                              *  signals for the selected EP is cleared/re-initialized on negative edge
                              *  of dynamic reconfiguration enable bit).
                              */
                              USBUART_1_DYN_RECONFIG_REG &= (uint8)~USBUART_1_DYN_RECONFIG_ENABLE;
                              /* The main loop has to re-enable DMA and OUT endpoint*/
                          #else
 832   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + ri),
 833   4                                                                      USBUART_1_EP[cur_ep].bufferSize >> 8u);
 834   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT1_IND + ri),
 835   4                                                                      USBUART_1_EP[cur_ep].bufferSize & 0xFFu);
 836   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_IND + ri),
 837   4                                                                      USBUART_1_EP[cur_ep].buffOffset & 0xFFu);
 838   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_MSB_IND + ri),
 839   4                                                                      USBUART_1_EP[cur_ep].buffOffset >> 8u);
 840   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_IND + ri),
 841   4                                                                      USBUART_1_EP[cur_ep].buffOffset & 0xFFu);
 842   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_MSB_IND + ri),
 843   4                                                                      USBUART_1_EP[cur_ep].buffOffset >> 8u);
 844   4                  #endif /*  USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 845   4                  }
 846   3                  /* Get next EP element */
 847   3                  pEP = &pEP[1u];
 848   3              }
 849   2          }   /* USBUART_1_configuration > 0 */
 850   1      }
 851          
 852          
 853          /*******************************************************************************
 854          * Function Name: USBUART_1_GetConfigTablePtr
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 15  

 855          ********************************************************************************
 856          *
 857          * Summary:
 858          *  This routine returns a pointer a configuration table entry
 859          *
 860          * Parameters:
 861          *  confIndex:  Configuration Index
 862          *
 863          * Return:
 864          *  Device Descriptor pointer or NULL when descriptor isn't exists.
 865          *
 866          *******************************************************************************/
 867          const T_USBUART_1_LUT CYCODE *USBUART_1_GetConfigTablePtr(uint8 confIndex)
 868                                                                  
 869          {
 870   1          /* Device Table */
 871   1          const T_USBUART_1_LUT CYCODE *pTmp;
 872   1      
 873   1          pTmp = (const T_USBUART_1_LUT CYCODE *) USBUART_1_TABLE[USBUART_1_device].p_list;
 874   1      
 875   1          /* The first entry points to the Device Descriptor,
 876   1          *  the rest configuration entries.
 877   1          *  Set pointer to the first Configuration Descriptor
 878   1          */
 879   1          pTmp = &pTmp[1u];
 880   1          /* For this table, c is the number of configuration descriptors  */
 881   1          if(confIndex >= pTmp->c)   /* Verify that required configuration descriptor exists */
 882   1          {
 883   2              pTmp = (const T_USBUART_1_LUT CYCODE *) NULL;
 884   2          }
 885   1          else
 886   1          {
 887   2              pTmp = (const T_USBUART_1_LUT CYCODE *) pTmp[confIndex].p_list;
 888   2          }
 889   1          
 890   1          return( pTmp );
 891   1      }
 892          
 893          
 894          /*******************************************************************************
 895          * Function Name: USBUART_1_GetDeviceTablePtr
 896          ********************************************************************************
 897          *
 898          * Summary:
 899          *  This routine returns a pointer to the Device table
 900          *
 901          * Parameters:
 902          *  None.
 903          *
 904          * Return:
 905          *  Device Table pointer
 906          *
 907          *******************************************************************************/
 908          const T_USBUART_1_LUT CYCODE *USBUART_1_GetDeviceTablePtr(void)
 909                                                                      
 910          {
 911   1          /* Device Table */
 912   1          return( (const T_USBUART_1_LUT CYCODE *) USBUART_1_TABLE[USBUART_1_device].p_list );
 913   1      }
 914          
 915          
 916          /*******************************************************************************
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 16  

 917          * Function Name: USB_GetInterfaceClassTablePtr
 918          ********************************************************************************
 919          *
 920          * Summary:
 921          *  This routine returns Interface Class table pointer, which contains
 922          *  the relation between interface number and interface class.
 923          *
 924          * Parameters:
 925          *  None.
 926          *
 927          * Return:
 928          *  Interface Class table pointer.
 929          *
 930          *******************************************************************************/
 931          const uint8 CYCODE *USBUART_1_GetInterfaceClassTablePtr(void)
 932                                                                  
 933          {
 934   1          const T_USBUART_1_LUT CYCODE *pTmp;
 935   1          const uint8 CYCODE *pInterfaceClass;
 936   1          uint8 currentInterfacesNum;
 937   1      
 938   1          pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 939   1          if( pTmp != NULL )
 940   1          {
 941   2              currentInterfacesNum  = ((const uint8 *) pTmp->p_list)[USBUART_1_CONFIG_DESCR_NUM_INTERFACES];
 942   2              /* Third entry in the LUT starts the Interface Table pointers */
 943   2              /* The INTERFACE_CLASS table is located after all interfaces */
 944   2              pTmp = &pTmp[currentInterfacesNum + 2u];
 945   2              pInterfaceClass = (const uint8 CYCODE *) pTmp->p_list;
 946   2          }
 947   1          else
 948   1          {
 949   2              pInterfaceClass = (const uint8 CYCODE *) NULL;
 950   2          }
 951   1          
 952   1          return( pInterfaceClass );
 953   1      }
 954          
 955          
 956          /*******************************************************************************
 957          * Function Name: USBUART_1_TerminateEP
 958          ********************************************************************************
 959          *
 960          * Summary:
 961          *  This function terminates the specified USBFS endpoint.
 962          *  This function should be used before endpoint reconfiguration.
 963          *
 964          * Parameters:
 965          *  Endpoint number.
 966          *
 967          * Return:
 968          *  None.
 969          *
 970          * Reentrant:
 971          *  No.
 972          *
 973          *******************************************************************************/
 974          void USBUART_1_TerminateEP(uint8 ep) 
 975          {
 976   1          uint8 ri;
 977   1      
 978   1          ep &= USBUART_1_DIR_UNUSED;
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 17  

 979   1          ri = ((ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
 980   1      
 981   1          if ((ep > USBUART_1_EP0) && (ep < USBUART_1_MAX_EP))
 982   1          {
 983   2              /* Set the endpoint Halt */
 984   2              USBUART_1_EP[ep].hwEpState |= (USBUART_1_ENDPOINT_STATUS_HALT);
 985   2      
 986   2              /* Clear the data toggle */
 987   2              USBUART_1_EP[ep].epToggle = 0u;
 988   2              USBUART_1_EP[ep].apiEpState = USBUART_1_NO_EVENT_ALLOWED;
 989   2      
 990   2              if ((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u)
 991   2              {
 992   3                  /* IN Endpoint */
 993   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_IN);
 994   3              }
 995   2              else
 996   2              {
 997   3                  /* OUT Endpoint */
 998   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_OUT);
 999   3              }
1000   2          }
1001   1      }
1002          
1003          
1004          /*******************************************************************************
1005          * Function Name: USBUART_1_SetEndpointHalt
1006          ********************************************************************************
1007          *
1008          * Summary:
1009          *  This routine handles set endpoint halt.
1010          *
1011          * Parameters:
1012          *  None.
1013          *
1014          * Return:
1015          *  requestHandled.
1016          *
1017          * Reentrant:
1018          *  No.
1019          *
1020          *******************************************************************************/
1021          uint8 USBUART_1_SetEndpointHalt(void) 
1022          {
1023   1          uint8 ep;
1024   1          uint8 ri;
1025   1          uint8 requestHandled = USBUART_1_FALSE;
1026   1      
1027   1          /* Set endpoint halt */
1028   1          ep = CY_GET_REG8(USBUART_1_wIndexLo) & USBUART_1_DIR_UNUSED;
1029   1          ri = ((ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
1030   1      
1031   1          if ((ep > USBUART_1_EP0) && (ep < USBUART_1_MAX_EP))
1032   1          {
1033   2              /* Set the endpoint Halt */
1034   2              USBUART_1_EP[ep].hwEpState |= (USBUART_1_ENDPOINT_STATUS_HALT);
1035   2      
1036   2              /* Clear the data toggle */
1037   2              USBUART_1_EP[ep].epToggle = 0u;
1038   2              USBUART_1_EP[ep].apiEpState |= USBUART_1_NO_EVENT_ALLOWED;
1039   2      
1040   2              if ((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u)
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 18  

1041   2              {
1042   3                  /* IN Endpoint */
1043   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_STALL_DATA_EP |
1044   3                                                                     USBUART_1_MODE_ACK_IN);
1045   3              }
1046   2              else
1047   2              {
1048   3                  /* OUT Endpoint */
1049   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_STALL_DATA_EP |
1050   3                                                                     USBUART_1_MODE_ACK_OUT);
1051   3              }
1052   2              requestHandled = USBUART_1_InitNoDataControlTransfer();
1053   2          }
1054   1      
1055   1          return(requestHandled);
1056   1      }
1057          
1058          
1059          /*******************************************************************************
1060          * Function Name: USBUART_1_ClearEndpointHalt
1061          ********************************************************************************
1062          *
1063          * Summary:
1064          *  This routine handles clear endpoint halt.
1065          *
1066          * Parameters:
1067          *  None.
1068          *
1069          * Return:
1070          *  requestHandled.
1071          *
1072          * Reentrant:
1073          *  No.
1074          *
1075          *******************************************************************************/
1076          uint8 USBUART_1_ClearEndpointHalt(void) 
1077          {
1078   1          uint8 ep;
1079   1          uint8 ri;
1080   1          uint8 requestHandled = USBUART_1_FALSE;
1081   1      
1082   1          /* Clear endpoint halt */
1083   1          ep = CY_GET_REG8(USBUART_1_wIndexLo) & USBUART_1_DIR_UNUSED;
1084   1          ri = ((ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
1085   1      
1086   1          if ((ep > USBUART_1_EP0) && (ep < USBUART_1_MAX_EP))
1087   1          {
1088   2              /* Clear the endpoint Halt */
1089   2              USBUART_1_EP[ep].hwEpState &= (uint8)~(USBUART_1_ENDPOINT_STATUS_HALT);
1090   2      
1091   2              /* Clear the data toggle */
1092   2              USBUART_1_EP[ep].epToggle = 0u;
1093   2              /* Clear toggle bit for already armed packet */
1094   2              CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + ri), CY_GET_REG8(
1095   2                          (reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + ri)) & (uint8)~USBUART_1_EPX_CNT_DATA_TOGGLE);
1096   2              /* Return API State as it was defined before */
1097   2              USBUART_1_EP[ep].apiEpState &= (uint8)~USBUART_1_NO_EVENT_ALLOWED;
1098   2      
1099   2              if ((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u)
1100   2              {
1101   3                  /* IN Endpoint */
1102   3                  if(USBUART_1_EP[ep].apiEpState == USBUART_1_IN_BUFFER_EMPTY)
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 19  

1103   3                  {       /* Wait for next packet from application */
1104   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_IN);
1105   4                  }
1106   3                  else    /* Continue armed transfer */
1107   3                  {
1108   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_ACK_IN);
1109   4                  }
1110   3              }
1111   2              else
1112   2              {
1113   3                  /* OUT Endpoint */
1114   3                  if(USBUART_1_EP[ep].apiEpState == USBUART_1_OUT_BUFFER_FULL)
1115   3                  {       /* Allow application to read full buffer */
1116   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_OUT);
1117   4                  }
1118   3                  else    /* Mark endpoint as empty, so it will be reloaded */
1119   3                  {
1120   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_ACK_OUT);
1121   4                  }
1122   3              }
1123   2              requestHandled = USBUART_1_InitNoDataControlTransfer();
1124   2          }
1125   1      
1126   1          return(requestHandled);
1127   1      }
1128          
1129          
1130          /*******************************************************************************
1131          * Function Name: USBUART_1_ValidateAlternateSetting
1132          ********************************************************************************
1133          *
1134          * Summary:
1135          *  Validates (and records) a SET INTERFACE request.
1136          *
1137          * Parameters:
1138          *  None.
1139          *
1140          * Return:
1141          *  requestHandled.
1142          *
1143          * Reentrant:
1144          *  No.
1145          *
1146          *******************************************************************************/
1147          uint8 USBUART_1_ValidateAlternateSetting(void) 
1148          {
1149   1          uint8 requestHandled = USBUART_1_TRUE;
1150   1          uint8 interfaceNum;
1151   1          const T_USBUART_1_LUT CYCODE *pTmp;
1152   1          uint8 currentInterfacesNum;
1153   1      
1154   1          interfaceNum = CY_GET_REG8(USBUART_1_wIndexLo);
1155   1          /* Validate interface setting, stall if invalid. */
1156   1          pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
1157   1          currentInterfacesNum  = ((const uint8 *) pTmp->p_list)[USBUART_1_CONFIG_DESCR_NUM_INTERFACES];
1158   1      
1159   1          if((interfaceNum >= currentInterfacesNum) || (interfaceNum >= USBUART_1_MAX_INTERFACES_NUMBER))
1160   1          {   /* Wrong interface number */
1161   2              requestHandled = USBUART_1_FALSE;
1162   2          }
1163   1          else
1164   1          {
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 20  

1165   2              /* Save current Alt setting to find out the difference in Config() function */
1166   2              USBUART_1_interfaceSetting_last[interfaceNum] = USBUART_1_interfaceSetting[interfaceNum];
1167   2              USBUART_1_interfaceSetting[interfaceNum] = CY_GET_REG8(USBUART_1_wValueLo);
1168   2          }
1169   1      
1170   1          return (requestHandled);
1171   1      }
1172          
1173          
1174          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 21  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USBUART_1_HandleStandardRqst (BEGIN)
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 94
0005 7B00              MOV     R3,#00H
0007 7A00              MOV     R2,#00H
0009 7900              MOV     R1,#00H
000B 900000      R     MOV     DPTR,#pStr
000E 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 102
0011 900000      E     MOV     DPTR,#USBUART_1_currentTD
0014 E4                CLR     A
0015 F0                MOVX    @DPTR,A
0016 A3                INC     DPTR
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 104
0019 906000            MOV     DPTR,#06000H
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 5480              ANL     A,#080H
0021 FF                MOV     R7,A
0022 7E00              MOV     R6,#00H
0024 EF                MOV     A,R7
0025 6480              XRL     A,#080H
0027 4E                ORL     A,R6
0028 6003              JZ      $ + 5H
002A 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 107
002D 906001            MOV     DPTR,#06001H
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 EF                MOV     A,R7
0033 120000      E     LCALL   ?C?CCASE
0036 0000        R     DW      ?C0016
0038 00                DB      00H
0039 0000        R     DW      ?C0003
003B 06                DB      06H
003C 0000        R     DW      ?C0021
003E 08                DB      08H
003F 0000        R     DW      ?C0022
0041 0A                DB      0AH
0042 0000              DW      00H
0044 0000        R     DW      ?C0024
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0046         ?C0003:
                                           ; SOURCE LINE # 110
0046 906003            MOV     DPTR,#06003H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C B40135            CJNE    A,#01H,?C0004
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 22  

                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
004F 120000      R     LCALL   USBUART_1_GetDeviceTablePtr
0052 900000      R     MOV     DPTR,#pTmp
0055 EE                MOV     A,R6
0056 F0                MOVX    @DPTR,A
0057 A3                INC     DPTR
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
005A 900000      R     MOV     DPTR,#pTmp
005D E0                MOVX    A,@DPTR
005E FE                MOV     R6,A
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 8F82              MOV     DPL,R7
0064 8E83              MOV     DPH,R6
0066 A3                INC     DPTR
0067 120000      E     LCALL   ?C?PLDCODE
006A 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
006D 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 114
0070 900000      E     MOV     DPTR,#USBUART_1_currentTD
0073 E4                CLR     A
0074 F0                MOVX    @DPTR,A
0075 A3                INC     DPTR
0076 7412              MOV     A,#012H
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
0079 120000      E     LCALL   USBUART_1_InitControlRead
007C 900000      R     MOV     DPTR,#requestHandled
007F EF                MOV     A,R7
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
0081 020000      R     LJMP    ?C0024
0084         ?C0004:
                                           ; SOURCE LINE # 117
0084 906003            MOV     DPTR,#06003H
0087 E0                MOVX    A,@DPTR
0088 FF                MOV     R7,A
0089 EF                MOV     A,R7
008A 6402              XRL     A,#02H
008C 707A              JNZ     ?C0006
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
008E 906002            MOV     DPTR,#06002H
0091 E0                MOVX    A,@DPTR
0092 FF                MOV     R7,A
0093 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
0096 900000      R     MOV     DPTR,#pTmp
0099 EE                MOV     A,R6
009A F0                MOVX    @DPTR,A
009B A3                INC     DPTR
009C EF                MOV     A,R7
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
009E 900000      R     MOV     DPTR,#pTmp
00A1 E0                MOVX    A,@DPTR
00A2 FE                MOV     R6,A
00A3 A3                INC     DPTR
00A4 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 23  

00A5 FF                MOV     R7,A
00A6 EF                MOV     A,R7
00A7 4E                ORL     A,R6
00A8 7003              JNZ     $ + 5H
00AA 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
00AD 900000      R     MOV     DPTR,#pTmp
00B0 E0                MOVX    A,@DPTR
00B1 FE                MOV     R6,A
00B2 A3                INC     DPTR
00B3 E0                MOVX    A,@DPTR
00B4 FF                MOV     R7,A
00B5 8F82              MOV     DPL,R7
00B7 8E83              MOV     DPH,R6
00B9 A3                INC     DPTR
00BA 120000      E     LCALL   ?C?PLDCODE
00BD 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
00C0 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 123
00C3 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
00C6 120000      E     LCALL   ?C?PLDXDATA
00C9 E9                MOV     A,R1
00CA 2403              ADD     A,#03H
00CC F9                MOV     R1,A
00CD EA                MOV     A,R2
00CE 3400              ADDC    A,#00H
00D0 FA                MOV     R2,A
00D1 120000      E     LCALL   ?C?CLDPTR
00D4 FF                MOV     R7,A
00D5 7E00              MOV     R6,#00H
00D7 EF                MOV     A,R7
00D8 7F00              MOV     R7,#00H
00DA FE                MOV     R6,A
00DB 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
00DE 120000      E     LCALL   ?C?PLDXDATA
00E1 E9                MOV     A,R1
00E2 2402              ADD     A,#02H
00E4 F9                MOV     R1,A
00E5 EA                MOV     A,R2
00E6 3400              ADDC    A,#00H
00E8 FA                MOV     R2,A
00E9 120000      E     LCALL   ?C?CLDPTR
00EC FD                MOV     R5,A
00ED 7C00              MOV     R4,#00H
00EF EE                MOV     A,R6
00F0 4C                ORL     A,R4
00F1 FE                MOV     R6,A
00F2 EF                MOV     A,R7
00F3 4D                ORL     A,R5
00F4 FF                MOV     R7,A
00F5 900000      E     MOV     DPTR,#USBUART_1_currentTD
00F8 EE                MOV     A,R6
00F9 F0                MOVX    @DPTR,A
00FA A3                INC     DPTR
00FB EF                MOV     A,R7
00FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 126
00FD 120000      E     LCALL   USBUART_1_InitControlRead
0100 900000      R     MOV     DPTR,#requestHandled
0103 EF                MOV     A,R7
0104 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 24  

                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0105 020000      R     LJMP    ?C0024
0108         ?C0006:
                                           ; SOURCE LINE # 130
0108 906003            MOV     DPTR,#06003H
010B E0                MOVX    A,@DPTR
010C FF                MOV     R7,A
010D EF                MOV     A,R7
010E 6403              XRL     A,#03H
0110 6003              JZ      $ + 5H
0112 020000      R     LJMP    ?C0009
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 134
0115 900000      R     MOV     DPTR,#nStr
0118 E4                CLR     A
0119 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
011A 7BFF              MOV     R3,#0FFH
011C 7A00        E     MOV     R2,#HIGH USBUART_1_STRING_DESCRIPTORS
011E 7900        E     MOV     R1,#LOW USBUART_1_STRING_DESCRIPTORS
0120 900000      R     MOV     DPTR,#pStr
0123 120000      E     LCALL   ?C?PSTXDATA
0126         ?C0010:
                                           ; SOURCE LINE # 136
0126 900000      R     MOV     DPTR,#nStr
0129 E0                MOVX    A,@DPTR
012A FF                MOV     R7,A
012B 906002            MOV     DPTR,#06002H
012E E0                MOVX    A,@DPTR
012F FE                MOV     R6,A
0130 EE                MOV     A,R6
0131 D3                SETB    C
0132 9F                SUBB    A,R7
0133 403D              JC      ?C0011
0135 900000      R     MOV     DPTR,#pStr
0138 120000      E     LCALL   ?C?PLDXDATA
013B 120000      E     LCALL   ?C?CLDPTR
013E FF                MOV     R7,A
013F EF                MOV     A,R7
0140 6030              JZ      ?C0011
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 139
0142 900000      R     MOV     DPTR,#pStr
0145 120000      E     LCALL   ?C?PLDXDATA
0148 120000      E     LCALL   ?C?CLDPTR
014B FF                MOV     R7,A
014C 900000      R     MOV     DPTR,#descrLength
014F EF                MOV     A,R7
0150 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0151 900000      R     MOV     DPTR,#pStr
0154 120000      E     LCALL   ?C?PLDXDATA
0157 900000      R     MOV     DPTR,#descrLength
015A E0                MOVX    A,@DPTR
015B FF                MOV     R7,A
015C 7E00              MOV     R6,#00H
015E E9                MOV     A,R1
015F 2F                ADD     A,R7
0160 F9                MOV     R1,A
0161 EA                MOV     A,R2
0162 3E                ADDC    A,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 25  

0163 FA                MOV     R2,A
0164 900000      R     MOV     DPTR,#pStr
0167 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 142
016A 900000      R     MOV     DPTR,#nStr
016D E0                MOVX    A,@DPTR
016E 04                INC     A
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
0170 80B4              SJMP    ?C0010
0172         ?C0011:
                                           ; SOURCE LINE # 147
0172 906002            MOV     DPTR,#06002H
0175 E0                MOVX    A,@DPTR
0176 FF                MOV     R7,A
0177 EF                MOV     A,R7
0178 B4EE0C            CJNE    A,#0EEH,?C0012
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
017B 7BFF              MOV     R3,#0FFH
017D 7A00        E     MOV     R2,#HIGH USBUART_1_MSOS_DESCRIPTOR
017F 7900        E     MOV     R1,#LOW USBUART_1_MSOS_DESCRIPTOR
0181 900000      R     MOV     DPTR,#pStr
0184 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 150
0187         ?C0012:
                                           ; SOURCE LINE # 155
0187 906002            MOV     DPTR,#06002H
018A E0                MOVX    A,@DPTR
018B FF                MOV     R7,A
018C EF                MOV     A,R7
018D 6024              JZ      ?C0013
018F 900000      E     MOV     DPTR,#USBUART_1_DEVICE0_DESCR+010H
0192 E4                CLR     A
0193 93                MOVC    A,@A+DPTR
0194 FF                MOV     R7,A
0195 906002            MOV     DPTR,#06002H
0198 E0                MOVX    A,@DPTR
0199 FE                MOV     R6,A
019A EE                MOV     A,R6
019B B50715            CJNE    A,AR7,?C0013
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 161
019E 7B01              MOV     R3,#01H
01A0 7A00        E     MOV     R2,#HIGH USBUART_1_idSerialNumberStringDescriptor
01A2 7900        E     MOV     R1,#LOW USBUART_1_idSerialNumberStringDescriptor
01A4 120000      R     LCALL   _USBUART_1_ReadDieID
                                           ; SOURCE LINE # 162
01A7 7B01              MOV     R3,#01H
01A9 7A00        E     MOV     R2,#HIGH USBUART_1_idSerialNumberStringDescriptor
01AB 7900        E     MOV     R1,#LOW USBUART_1_idSerialNumberStringDescriptor
01AD 900000      R     MOV     DPTR,#pStr
01B0 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 175
01B3         ?C0013:
                                           ; SOURCE LINE # 177
01B3 900000      R     MOV     DPTR,#pStr
01B6 120000      E     LCALL   ?C?PLDXDATA
01B9 120000      E     LCALL   ?C?CLDPTR
01BC FF                MOV     R7,A
01BD EF                MOV     A,R7
01BE 7003              JNZ     $ + 5H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 26  

01C0 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
01C3 900000      R     MOV     DPTR,#pStr
01C6 120000      E     LCALL   ?C?PLDXDATA
01C9 120000      E     LCALL   ?C?CLDPTR
01CC FF                MOV     R7,A
01CD 7E00              MOV     R6,#00H
01CF 900000      E     MOV     DPTR,#USBUART_1_currentTD
01D2 EE                MOV     A,R6
01D3 F0                MOVX    @DPTR,A
01D4 A3                INC     DPTR
01D5 EF                MOV     A,R7
01D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
01D7 900000      R     MOV     DPTR,#pStr
01DA 120000      E     LCALL   ?C?PLDXDATA
01DD 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
01E0 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 181
01E3 120000      E     LCALL   USBUART_1_InitControlRead
01E6 900000      R     MOV     DPTR,#requestHandled
01E9 EF                MOV     A,R7
01EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
01EB 020000      R     LJMP    ?C0024
01EE         ?C0009:
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 187
01EE 120000      E     LCALL   USBUART_1_DispatchClassRqst
01F1 900000      R     MOV     DPTR,#requestHandled
01F4 EF                MOV     A,R7
01F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
01F6 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 190
01F9         ?C0016:
                                           ; SOURCE LINE # 191
01F9 906000            MOV     DPTR,#06000H
01FC E0                MOVX    A,@DPTR
01FD FF                MOV     R7,A
01FE EF                MOV     A,R7
01FF 5403              ANL     A,#03H
0201 FF                MOV     R7,A
0202 EF                MOV     A,R7
0203 120000      E     LCALL   ?C?CCASE
0206 0000        R     DW      ?C0019
0208 00                DB      00H
0209 0000        R     DW      ?C0018
020B 02                DB      02H
020C 0000              DW      00H
020E 0000        R     DW      ?C0024
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
0210         ?C0018:
                                           ; SOURCE LINE # 194
0210 900000      E     MOV     DPTR,#USBUART_1_currentTD
0213 E4                CLR     A
0214 F0                MOVX    @DPTR,A
0215 A3                INC     DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 27  

0216 7402              MOV     A,#02H
0218 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
0219 906004            MOV     DPTR,#06004H
021C E0                MOVX    A,@DPTR
021D FF                MOV     R7,A
021E EF                MOV     A,R7
021F 547F              ANL     A,#07FH
0221 FF                MOV     R7,A
0222 EF                MOV     A,R7
0223 75F00B            MOV     B,#0BH
0226 A4                MUL     AB
0227 2400        E     ADD     A,#LOW USBUART_1_EP+02H
0229 F582              MOV     DPL,A
022B E4                CLR     A
022C 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
022E F583              MOV     DPH,A
0230 E0                MOVX    A,@DPTR
0231 FF                MOV     R7,A
0232 900000      R     MOV     DPTR,#USBUART_1_tBuffer
0235 EF                MOV     A,R7
0236 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
0237 900000      R     MOV     DPTR,#USBUART_1_tBuffer+01H
023A E4                CLR     A
023B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
023C 7B01              MOV     R3,#01H
023E 7A00        R     MOV     R2,#HIGH USBUART_1_tBuffer
0240 7900        R     MOV     R1,#LOW USBUART_1_tBuffer
0242 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0245 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 199
0248 120000      E     LCALL   USBUART_1_InitControlRead
024B 900000      R     MOV     DPTR,#requestHandled
024E EF                MOV     A,R7
024F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
0250 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 201
0253         ?C0019:
                                           ; SOURCE LINE # 202
0253 900000      E     MOV     DPTR,#USBUART_1_currentTD
0256 E4                CLR     A
0257 F0                MOVX    @DPTR,A
0258 A3                INC     DPTR
0259 7402              MOV     A,#02H
025B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
025C 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
025F E0                MOVX    A,@DPTR
0260 FF                MOV     R7,A
0261 900000      R     MOV     DPTR,#USBUART_1_tBuffer
0264 EF                MOV     A,R7
0265 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
0266 900000      R     MOV     DPTR,#USBUART_1_tBuffer+01H
0269 E4                CLR     A
026A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
026B 7B01              MOV     R3,#01H
026D 7A00        R     MOV     R2,#HIGH USBUART_1_tBuffer
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 28  

026F 7900        R     MOV     R1,#LOW USBUART_1_tBuffer
0271 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0274 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 206
0277 120000      E     LCALL   USBUART_1_InitControlRead
027A 900000      R     MOV     DPTR,#requestHandled
027D EF                MOV     A,R7
027E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
027F 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
0282 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 212
0285         ?C0021:
                                           ; SOURCE LINE # 213
0285 900000      E     MOV     DPTR,#USBUART_1_currentTD
0288 E4                CLR     A
0289 F0                MOVX    @DPTR,A
028A A3                INC     DPTR
028B 7401              MOV     A,#01H
028D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
028E 7B01              MOV     R3,#01H
0290 7A00        E     MOV     R2,#HIGH USBUART_1_configuration
0292 7900        E     MOV     R1,#LOW USBUART_1_configuration
0294 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0297 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 215
029A 120000      E     LCALL   USBUART_1_InitControlRead
029D 900000      R     MOV     DPTR,#requestHandled
02A0 EF                MOV     A,R7
02A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
02A2 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 217
02A5         ?C0022:
                                           ; SOURCE LINE # 218
02A5 900000      E     MOV     DPTR,#USBUART_1_currentTD
02A8 E4                CLR     A
02A9 F0                MOVX    @DPTR,A
02AA A3                INC     DPTR
02AB 7401              MOV     A,#01H
02AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
02AE 906004            MOV     DPTR,#06004H
02B1 E0                MOVX    A,@DPTR
02B2 FF                MOV     R7,A
02B3 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
02B5 2F                ADD     A,R7
02B6 F9                MOV     R1,A
02B7 E4                CLR     A
02B8 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
02BA FA                MOV     R2,A
02BB 7B01              MOV     R3,#01H
02BD 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
02C0 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 221
02C3 120000      E     LCALL   USBUART_1_InitControlRead
02C6 900000      R     MOV     DPTR,#requestHandled
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 29  

02C9 EF                MOV     A,R7
02CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
02CB 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
02CE 020000      R     LJMP    ?C0024
02D1         ?C0001:
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 229
02D1 906001            MOV     DPTR,#06001H
02D4 E0                MOVX    A,@DPTR
02D5 FF                MOV     R7,A
02D6 EF                MOV     A,R7
02D7 120000      E     LCALL   ?C?CCASE
02DA 0000        R     DW      ?C0035
02DC 01                DB      01H
02DD 0000        R     DW      ?C0044
02DF 03                DB      03H
02E0 0000        R     DW      ?C0026
02E2 05                DB      05H
02E3 0000        R     DW      ?C0027
02E5 09                DB      09H
02E6 0000        R     DW      ?C0033
02E8 0B                DB      0BH
02E9 0000              DW      00H
02EB 0000        R     DW      ?C0024
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
02ED         ?C0026:
                                           ; SOURCE LINE # 232
02ED 906002            MOV     DPTR,#06002H
02F0 E0                MOVX    A,@DPTR
02F1 FF                MOV     R7,A
02F2 900000      E     MOV     DPTR,#USBUART_1_deviceAddress
02F5 EF                MOV     A,R7
02F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
02F7 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
02FA 900000      R     MOV     DPTR,#requestHandled
02FD EF                MOV     A,R7
02FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
02FF 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 235
0302         ?C0027:
                                           ; SOURCE LINE # 236
0302 906002            MOV     DPTR,#06002H
0305 E0                MOVX    A,@DPTR
0306 FF                MOV     R7,A
0307 900000      R     MOV     DPTR,#configurationN
030A EF                MOV     A,R7
030B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
030C 900000      R     MOV     DPTR,#configurationN
030F E0                MOVX    A,@DPTR
0310 FF                MOV     R7,A
0311 EF                MOV     A,R7
0312 D3                SETB    C
0313 9400              SUBB    A,#00H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 30  

0315 4013              JC      ?C0028
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0317 900000      R     MOV     DPTR,#configurationN
031A E0                MOVX    A,@DPTR
031B FF                MOV     R7,A
031C EF                MOV     A,R7
031D 14                DEC     A
031E FF                MOV     R7,A
031F 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
0322 900000      R     MOV     DPTR,#pTmp
0325 EE                MOV     A,R6
0326 F0                MOVX    @DPTR,A
0327 A3                INC     DPTR
0328 EF                MOV     A,R7
0329 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
032A         ?C0028:
                                           ; SOURCE LINE # 242
032A 900000      R     MOV     DPTR,#configurationN
032D E0                MOVX    A,@DPTR
032E FF                MOV     R7,A
032F EF                MOV     A,R7
0330 D3                SETB    C
0331 9400              SUBB    A,#00H
0333 400C              JC      ?C0031
0335 900000      R     MOV     DPTR,#pTmp
0338 E0                MOVX    A,@DPTR
0339 FE                MOV     R6,A
033A A3                INC     DPTR
033B E0                MOVX    A,@DPTR
033C FF                MOV     R7,A
033D EF                MOV     A,R7
033E 4E                ORL     A,R6
033F 700B              JNZ     ?C0030
0341         ?C0031:
0341 900000      R     MOV     DPTR,#configurationN
0344 E0                MOVX    A,@DPTR
0345 FF                MOV     R7,A
0346 EF                MOV     A,R7
0347 6003              JZ      $ + 5H
0349 020000      R     LJMP    ?C0024
034C         ?C0030:
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 245
034C 900000      E     MOV     DPTR,#USBUART_1_configuration
034F E0                MOVX    A,@DPTR
0350 FF                MOV     R7,A
0351 900000      R     MOV     DPTR,#configurationN
0354 E0                MOVX    A,@DPTR
0355 FE                MOV     R6,A
0356 EE                MOV     A,R6
0357 6F                XRL     A,R7
0358 6015              JZ      ?C0032
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
035A 900000      R     MOV     DPTR,#configurationN
035D E0                MOVX    A,@DPTR
035E FF                MOV     R7,A
035F 900000      E     MOV     DPTR,#USBUART_1_configuration
0362 EF                MOV     A,R7
0363 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 31  

                                           ; SOURCE LINE # 248
0364 900000      E     MOV     DPTR,#USBUART_1_configurationChanged
0367 7401              MOV     A,#01H
0369 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 249
036A 7F01              MOV     R7,#01H
036C 120000      R     LCALL   _USBUART_1_Config
                                           ; SOURCE LINE # 250
036F         ?C0032:
                                           ; SOURCE LINE # 251
036F 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
0372 900000      R     MOV     DPTR,#requestHandled
0375 EF                MOV     A,R7
0376 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
0377 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 254
037A         ?C0033:
                                           ; SOURCE LINE # 255
037A 120000      R     LCALL   USBUART_1_ValidateAlternateSetting
037D EF                MOV     A,R7
037E 7003              JNZ     $ + 5H
0380 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
0383 906004            MOV     DPTR,#06004H
0386 E0                MOVX    A,@DPTR
0387 FF                MOV     R7,A
0388 900000      R     MOV     DPTR,#interfaceNumber
038B EF                MOV     A,R7
038C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 258
038D 900000      R     MOV     DPTR,#interfaceNumber
0390 E0                MOVX    A,@DPTR
0391 FF                MOV     R7,A
0392 900000      E     MOV     DPTR,#USBUART_1_interfaceNumber
0395 EF                MOV     A,R7
0396 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 259
0397 900000      E     MOV     DPTR,#USBUART_1_configurationChanged
039A 7401              MOV     A,#01H
039C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 264
039D 120000      R     LCALL   USBUART_1_ConfigAltChanged
                                           ; SOURCE LINE # 267
03A0 900000      R     MOV     DPTR,#interfaceNumber
03A3 E0                MOVX    A,@DPTR
03A4 FF                MOV     R7,A
03A5 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
03A7 2F                ADD     A,R7
03A8 F582              MOV     DPL,A
03AA E4                CLR     A
03AB 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
03AD F583              MOV     DPH,A
03AF E0                MOVX    A,@DPTR
03B0 FF                MOV     R7,A
03B1 900000      R     MOV     DPTR,#interfaceNumber
03B4 E0                MOVX    A,@DPTR
03B5 FE                MOV     R6,A
03B6 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
03B8 2E                ADD     A,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 32  

03B9 F582              MOV     DPL,A
03BB E4                CLR     A
03BC 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
03BE F583              MOV     DPH,A
03C0 EF                MOV     A,R7
03C1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
03C2 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
03C5 900000      R     MOV     DPTR,#requestHandled
03C8 EF                MOV     A,R7
03C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 271
03CA 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 272
03CD         ?C0035:
                                           ; SOURCE LINE # 273
03CD 906000            MOV     DPTR,#06000H
03D0 E0                MOVX    A,@DPTR
03D1 FF                MOV     R7,A
03D2 EF                MOV     A,R7
03D3 5403              ANL     A,#03H
03D5 FF                MOV     R7,A
03D6 EF                MOV     A,R7
03D7 120000      E     LCALL   ?C?CCASE
03DA 0000        R     DW      ?C0039
03DC 00                DB      00H
03DD 0000        R     DW      ?C0041
03DF 01                DB      01H
03E0 0000        R     DW      ?C0037
03E2 02                DB      02H
03E3 0000              DW      00H
03E5 0000        R     DW      ?C0024
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 275
03E7         ?C0037:
                                           ; SOURCE LINE # 276
03E7 906002            MOV     DPTR,#06002H
03EA E0                MOVX    A,@DPTR
03EB FF                MOV     R7,A
03EC EF                MOV     A,R7
03ED 6003              JZ      $ + 5H
03EF 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
03F2 120000      R     LCALL   USBUART_1_ClearEndpointHalt
03F5 900000      R     MOV     DPTR,#requestHandled
03F8 EF                MOV     A,R7
03F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
03FA 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 281
03FD         ?C0039:
                                           ; SOURCE LINE # 283
03FD 906002            MOV     DPTR,#06002H
0400 E0                MOVX    A,@DPTR
0401 FF                MOV     R7,A
0402 EF                MOV     A,R7
0403 6401              XRL     A,#01H
0405 6003              JZ      $ + 5H
0407 020000      R     LJMP    ?C0024
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 33  

                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 285
040A 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
040D E0                MOVX    A,@DPTR
040E FF                MOV     R7,A
040F EF                MOV     A,R7
0410 54FD              ANL     A,#0FDH
0412 FF                MOV     R7,A
0413 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0416 EF                MOV     A,R7
0417 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 286
0418 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
041B 900000      R     MOV     DPTR,#requestHandled
041E EF                MOV     A,R7
041F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
0420 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 289
0423         ?C0041:
                                           ; SOURCE LINE # 291
0423 906004            MOV     DPTR,#06004H
0426 E0                MOVX    A,@DPTR
0427 FF                MOV     R7,A
0428 EF                MOV     A,R7
0429 C3                CLR     C
042A 9402              SUBB    A,#02H
042C 4003              JC      $ + 5H
042E 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 294
0431 906004            MOV     DPTR,#06004H
0434 E0                MOVX    A,@DPTR
0435 FF                MOV     R7,A
0436 7400        E     MOV     A,#LOW USBUART_1_interfaceStatus
0438 2F                ADD     A,R7
0439 F582              MOV     DPL,A
043B E4                CLR     A
043C 3400        E     ADDC    A,#HIGH USBUART_1_interfaceStatus
043E F583              MOV     DPH,A
0440 C083              PUSH    DPH
0442 C082              PUSH    DPL
0444 E0                MOVX    A,@DPTR
0445 FF                MOV     R7,A
0446 906002            MOV     DPTR,#06002H
0449 E0                MOVX    A,@DPTR
044A FE                MOV     R6,A
044B EE                MOV     A,R6
044C F4                CPL     A
044D FE                MOV     R6,A
044E EF                MOV     A,R7
044F 5E                ANL     A,R6
0450 FF                MOV     R7,A
0451 D082              POP     DPL
0453 D083              POP     DPH
0455 EF                MOV     A,R7
0456 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
0457 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
045A 900000      R     MOV     DPTR,#requestHandled
045D EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 34  

045E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
045F 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
0462 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 302
0465         ?C0044:
                                           ; SOURCE LINE # 303
0465 906000            MOV     DPTR,#06000H
0468 E0                MOVX    A,@DPTR
0469 FF                MOV     R7,A
046A EF                MOV     A,R7
046B 5403              ANL     A,#03H
046D FF                MOV     R7,A
046E EF                MOV     A,R7
046F 120000      E     LCALL   ?C?CCASE
0472 0000        R     DW      ?C0048
0474 00                DB      00H
0475 0000        R     DW      ?C0050
0477 01                DB      01H
0478 0000        R     DW      ?C0046
047A 02                DB      02H
047B 0000              DW      00H
047D 0000        R     DW      ?C0024
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
047F         ?C0046:
                                           ; SOURCE LINE # 306
047F 906002            MOV     DPTR,#06002H
0482 E0                MOVX    A,@DPTR
0483 FF                MOV     R7,A
0484 EF                MOV     A,R7
0485 7065              JNZ     ?C0024
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 308
0487 120000      R     LCALL   USBUART_1_SetEndpointHalt
048A 900000      R     MOV     DPTR,#requestHandled
048D EF                MOV     A,R7
048E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
048F 805B              SJMP    ?C0024
                                           ; SOURCE LINE # 311
0491         ?C0048:
                                           ; SOURCE LINE # 313
0491 906002            MOV     DPTR,#06002H
0494 E0                MOVX    A,@DPTR
0495 FF                MOV     R7,A
0496 EF                MOV     A,R7
0497 6401              XRL     A,#01H
0499 7051              JNZ     ?C0024
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
049B 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
049E E0                MOVX    A,@DPTR
049F FF                MOV     R7,A
04A0 EF                MOV     A,R7
04A1 4402              ORL     A,#02H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 35  

04A3 FF                MOV     R7,A
04A4 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
04A7 EF                MOV     A,R7
04A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
04A9 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
04AC 900000      R     MOV     DPTR,#requestHandled
04AF EF                MOV     A,R7
04B0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
04B1 8039              SJMP    ?C0024
                                           ; SOURCE LINE # 319
04B3         ?C0050:
                                           ; SOURCE LINE # 321
04B3 906004            MOV     DPTR,#06004H
04B6 E0                MOVX    A,@DPTR
04B7 FF                MOV     R7,A
04B8 EF                MOV     A,R7
04B9 C3                CLR     C
04BA 9402              SUBB    A,#02H
04BC 502E              JNC     ?C0024
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 324
04BE 906004            MOV     DPTR,#06004H
04C1 E0                MOVX    A,@DPTR
04C2 FF                MOV     R7,A
04C3 7400        E     MOV     A,#LOW USBUART_1_interfaceStatus
04C5 2F                ADD     A,R7
04C6 F582              MOV     DPL,A
04C8 E4                CLR     A
04C9 3400        E     ADDC    A,#HIGH USBUART_1_interfaceStatus
04CB F583              MOV     DPH,A
04CD C083              PUSH    DPH
04CF C082              PUSH    DPL
04D1 E0                MOVX    A,@DPTR
04D2 FF                MOV     R7,A
04D3 906002            MOV     DPTR,#06002H
04D6 E0                MOVX    A,@DPTR
04D7 FE                MOV     R6,A
04D8 EE                MOV     A,R6
04D9 F4                CPL     A
04DA FE                MOV     R6,A
04DB EF                MOV     A,R7
04DC 5E                ANL     A,R6
04DD FF                MOV     R7,A
04DE D082              POP     DPL
04E0 D083              POP     DPH
04E2 EF                MOV     A,R7
04E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 325
04E4 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
04E7 900000      R     MOV     DPTR,#requestHandled
04EA EF                MOV     A,R7
04EB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 332
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 36  

                                           ; SOURCE LINE # 333
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 335
04EC         ?C0024:
                                           ; SOURCE LINE # 336
04EC 900000      R     MOV     DPTR,#requestHandled
04EF E0                MOVX    A,@DPTR
04F0 FF                MOV     R7,A
                                           ; SOURCE LINE # 337
04F1         ?C0054:
04F1 22                RET     
             ; FUNCTION USBUART_1_HandleStandardRqst (END)

             ; FUNCTION _USBUART_1_ReadDieID (BEGIN)
                                           ; SOURCE LINE # 359
0000 900000      R     MOV     DPTR,#descr
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 360
                                           ; SOURCE LINE # 362
0006 900000      R     MOV     DPTR,#j
0009 E4                CLR     A
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 367
000B 7B00              MOV     R3,#00H
000D 7A00              MOV     R2,#00H
000F 7900              MOV     R1,#00H
0011 C003              PUSH    AR3
0013 C002              PUSH    AR2
0015 C001              PUSH    AR1
0017 900000      R     MOV     DPTR,#descr
001A 120000      E     LCALL   ?C?PLDXDATA
001D D082              POP     DPL
001F D083              POP     DPH
0021 D0E0              POP     ACC
0023 6B                XRL     A,R3
0024 7008              JNZ     ?C0143
0026 E9                MOV     A,R1
0027 6582              XRL     A,DPL
0029 7003              JNZ     ?C0143
002B EA                MOV     A,R2
002C 6583              XRL     A,DPH
002E         ?C0143:
002E 7003              JNZ     $ + 5H
0030 020000      R     LJMP    ?C0059
                                           ; SOURCE LINE # 368
                                           ; SOURCE LINE # 369
0033 900000      R     MOV     DPTR,#descr
0036 120000      E     LCALL   ?C?PLDXDATA
0039 7422              MOV     A,#022H
003B 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 370
003E 900000      R     MOV     DPTR,#descr
0041 120000      E     LCALL   ?C?PLDXDATA
0044 E9                MOV     A,R1
0045 2401              ADD     A,#01H
0047 F9                MOV     R1,A
0048 EA                MOV     A,R2
0049 3400              ADDC    A,#00H
004B FA                MOV     R2,A
004C 7403              MOV     A,#03H
004E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 373
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 37  

0051 900000      R     MOV     DPTR,#i
0054 7402              MOV     A,#02H
0056 F0                MOVX    @DPTR,A
0057         ?C0056:
0057 900000      R     MOV     DPTR,#i
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D C3                CLR     C
005E 9422              SUBB    A,#022H
0060 4003              JC      $ + 5H
0062 020000      R     LJMP    ?C0059
                                           ; SOURCE LINE # 374
                                           ; SOURCE LINE # 375
0065 900000      R     MOV     DPTR,#j
0068 E0                MOVX    A,@DPTR
0069 FF                MOV     R7,A
006A E4                CLR     A
006B FC                MOV     R4,A
006C FD                MOV     R5,A
006D FE                MOV     R6,A
006E EF                MOV     A,R7
006F 2400              ADD     A,#00H
0071 FF                MOV     R7,A
0072 EE                MOV     A,R6
0073 3401              ADDC    A,#01H
0075 FE                MOV     R6,A
0076 ED                MOV     A,R5
0077 340C              ADDC    A,#0CH
0079 FD                MOV     R5,A
007A EC                MOV     A,R4
007B 3400              ADDC    A,#00H
007D FC                MOV     R4,A
007E A907              MOV     R1,AR7
0080 AA06              MOV     R2,AR6
0082 AB05              MOV     R3,AR5
0084 120000      E     LCALL   _cyread8
0087 900000      R     MOV     DPTR,#value
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 376
008C 900000      R     MOV     DPTR,#j
008F E0                MOVX    A,@DPTR
0090 04                INC     A
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 377
0092 900000      R     MOV     DPTR,#value
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 C4                SWAP    A
0099 540F              ANL     A,#0FH
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 900000      R     MOV     DPTR,#hex
00A0 93                MOVC    A,@A+DPTR
00A1 FF                MOV     R7,A
00A2 900000      R     MOV     DPTR,#descr
00A5 120000      E     LCALL   ?C?PLDXDATA
00A8 900000      R     MOV     DPTR,#i
00AB E0                MOVX    A,@DPTR
00AC FE                MOV     R6,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 38  

00AD E9                MOV     A,R1
00AE 2E                ADD     A,R6
00AF F9                MOV     R1,A
00B0 E4                CLR     A
00B1 3A                ADDC    A,R2
00B2 FA                MOV     R2,A
00B3 EF                MOV     A,R7
00B4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 378
00B7 900000      R     MOV     DPTR,#value
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 540F              ANL     A,#0FH
00BF FF                MOV     R7,A
00C0 EF                MOV     A,R7
00C1 900000      R     MOV     DPTR,#hex
00C4 93                MOVC    A,@A+DPTR
00C5 FF                MOV     R7,A
00C6 900000      R     MOV     DPTR,#i
00C9 E0                MOVX    A,@DPTR
00CA FE                MOV     R6,A
00CB EE                MOV     A,R6
00CC FD                MOV     R5,A
00CD 7C00              MOV     R4,#00H
00CF ED                MOV     A,R5
00D0 2402              ADD     A,#02H
00D2 FD                MOV     R5,A
00D3 EC                MOV     A,R4
00D4 3400              ADDC    A,#00H
00D6 FC                MOV     R4,A
00D7 900000      R     MOV     DPTR,#descr
00DA 120000      E     LCALL   ?C?PLDXDATA
00DD E9                MOV     A,R1
00DE 2D                ADD     A,R5
00DF F9                MOV     R1,A
00E0 EA                MOV     A,R2
00E1 3C                ADDC    A,R4
00E2 FA                MOV     R2,A
00E3 EF                MOV     A,R7
00E4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 379
00E7 900000      R     MOV     DPTR,#i
00EA E0                MOVX    A,@DPTR
00EB 2404              ADD     A,#04H
00ED F0                MOVX    @DPTR,A
00EE 020000      R     LJMP    ?C0056
                                           ; SOURCE LINE # 380
                                           ; SOURCE LINE # 381
00F1         ?C0059:
00F1 22                RET     
             ; FUNCTION _USBUART_1_ReadDieID (END)

             ; FUNCTION USBUART_1_ConfigReg (BEGIN)
                                           ; SOURCE LINE # 402
                                           ; SOURCE LINE # 403
                                           ; SOURCE LINE # 411
0000 900000      R     MOV     DPTR,#ep
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 412
0006 900000      R     MOV     DPTR,#i
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 39  

0009 E4                CLR     A
000A F0                MOVX    @DPTR,A
000B         ?C0060:
000B 900000      R     MOV     DPTR,#i
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 C3                CLR     C
0012 9480              SUBB    A,#080H
0014 4003              JC      $ + 5H
0016 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 413
                                           ; SOURCE LINE # 414
0019 900000      R     MOV     DPTR,#i
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E 7E00              MOV     R6,#00H
0020 EF                MOV     A,R7
0021 2480              ADD     A,#080H
0023 FF                MOV     R7,A
0024 EE                MOV     A,R6
0025 3460              ADDC    A,#060H
0027 FE                MOV     R6,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C 740C              MOV     A,#0CH
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 420
002F 900000      R     MOV     DPTR,#ep
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 75F00B            MOV     B,#0BH
0038 A4                MUL     AB
0039 2400        E     ADD     A,#LOW USBUART_1_EP+05H
003B F582              MOV     DPL,A
003D E4                CLR     A
003E 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
0040 F583              MOV     DPH,A
0042 E0                MOVX    A,@DPTR
0043 FF                MOV     R7,A
0044 EF                MOV     A,R7
0045 604F              JZ      ?C0063
                                           ; SOURCE LINE # 421
                                           ; SOURCE LINE # 422
0047 900000      R     MOV     DPTR,#ep
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C EF                MOV     A,R7
004D 75F00B            MOV     B,#0BH
0050 A4                MUL     AB
0051 2400        E     ADD     A,#LOW USBUART_1_EP+04H
0053 F582              MOV     DPL,A
0055 E4                CLR     A
0056 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
0058 F583              MOV     DPH,A
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D 5480              ANL     A,#080H
005F FF                MOV     R7,A
0060 7E00              MOV     R6,#00H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 40  

0062 EF                MOV     A,R7
0063 4E                ORL     A,R6
0064 6018              JZ      ?C0064
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
0066 900000      R     MOV     DPTR,#i
0069 E0                MOVX    A,@DPTR
006A FF                MOV     R7,A
006B 7E00              MOV     R6,#00H
006D EF                MOV     A,R7
006E 240E              ADD     A,#0EH
0070 FF                MOV     R7,A
0071 EE                MOV     A,R6
0072 3460              ADDC    A,#060H
0074 FE                MOV     R6,A
0075 8F82              MOV     DPL,R7
0077 8E83              MOV     DPH,R6
0079 740C              MOV     A,#0CH
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
007C 802E              SJMP    ?C0066
007E         ?C0064:
                                           ; SOURCE LINE # 427
                                           ; SOURCE LINE # 428
007E 900000      R     MOV     DPTR,#i
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 7E00              MOV     R6,#00H
0085 EF                MOV     A,R7
0086 240E              ADD     A,#0EH
0088 FF                MOV     R7,A
0089 EE                MOV     A,R6
008A 3460              ADDC    A,#060H
008C FE                MOV     R6,A
008D 8F82              MOV     DPL,R7
008F 8E83              MOV     DPH,R6
0091 7408              MOV     A,#08H
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 433
                                           ; SOURCE LINE # 434
0094 8016              SJMP    ?C0066
0096         ?C0063:
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
0096 900000      R     MOV     DPTR,#i
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 7E00              MOV     R6,#00H
009D EF                MOV     A,R7
009E 240E              ADD     A,#0EH
00A0 FF                MOV     R7,A
00A1 EE                MOV     A,R6
00A2 3460              ADDC    A,#060H
00A4 FE                MOV     R6,A
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7480              MOV     A,#080H
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 438
00AC         ?C0066:
                                           ; SOURCE LINE # 441
00AC 900000      R     MOV     DPTR,#ep
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 41  

00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 75F00B            MOV     B,#0BH
00B5 A4                MUL     AB
00B6 2400        E     ADD     A,#LOW USBUART_1_EP+08H
00B8 F582              MOV     DPL,A
00BA E4                CLR     A
00BB 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
00BD F583              MOV     DPH,A
00BF E0                MOVX    A,@DPTR
00C0 FE                MOV     R6,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 FF                MOV     R7,A
00C4 EE                MOV     A,R6
00C5 FF                MOV     R7,A
00C6 7E00              MOV     R6,#00H
00C8 900000      R     MOV     DPTR,#i
00CB E0                MOVX    A,@DPTR
00CC FE                MOV     R6,A
00CD EE                MOV     A,R6
00CE FD                MOV     R5,A
00CF 7C00              MOV     R4,#00H
00D1 ED                MOV     A,R5
00D2 240C              ADD     A,#0CH
00D4 FD                MOV     R5,A
00D5 EC                MOV     A,R4
00D6 3460              ADDC    A,#060H
00D8 FC                MOV     R4,A
00D9 8D82              MOV     DPL,R5
00DB 8C83              MOV     DPH,R4
00DD EF                MOV     A,R7
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 442
00DF 900000      R     MOV     DPTR,#ep
00E2 E0                MOVX    A,@DPTR
00E3 FF                MOV     R7,A
00E4 EF                MOV     A,R7
00E5 75F00B            MOV     B,#0BH
00E8 A4                MUL     AB
00E9 2400        E     ADD     A,#LOW USBUART_1_EP+08H
00EB F582              MOV     DPL,A
00ED E4                CLR     A
00EE 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
00F0 F583              MOV     DPH,A
00F2 E0                MOVX    A,@DPTR
00F3 FE                MOV     R6,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 EF                MOV     A,R7
00F8 54FF              ANL     A,#0FFH
00FA FF                MOV     R7,A
00FB 900000      R     MOV     DPTR,#i
00FE E0                MOVX    A,@DPTR
00FF FE                MOV     R6,A
0100 EE                MOV     A,R6
0101 FD                MOV     R5,A
0102 7C00              MOV     R4,#00H
0104 ED                MOV     A,R5
0105 240D              ADD     A,#0DH
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 42  

0107 FD                MOV     R5,A
0108 EC                MOV     A,R4
0109 3460              ADDC    A,#060H
010B FC                MOV     R4,A
010C 8D82              MOV     DPL,R5
010E 8C83              MOV     DPH,R4
0110 EF                MOV     A,R7
0111 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 444
0112 900000      R     MOV     DPTR,#ep
0115 E0                MOVX    A,@DPTR
0116 FF                MOV     R7,A
0117 EF                MOV     A,R7
0118 75F00B            MOV     B,#0BH
011B A4                MUL     AB
011C 2400        E     ADD     A,#LOW USBUART_1_EP+06H
011E F582              MOV     DPL,A
0120 E4                CLR     A
0121 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0123 F583              MOV     DPH,A
0125 E0                MOVX    A,@DPTR
0126 FE                MOV     R6,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A EF                MOV     A,R7
012B 54FF              ANL     A,#0FFH
012D FF                MOV     R7,A
012E 900000      R     MOV     DPTR,#i
0131 E0                MOVX    A,@DPTR
0132 FE                MOV     R6,A
0133 EE                MOV     A,R6
0134 FD                MOV     R5,A
0135 7C00              MOV     R4,#00H
0137 ED                MOV     A,R5
0138 2486              ADD     A,#086H
013A FD                MOV     R5,A
013B EC                MOV     A,R4
013C 3460              ADDC    A,#060H
013E FC                MOV     R4,A
013F 8D82              MOV     DPL,R5
0141 8C83              MOV     DPH,R4
0143 EF                MOV     A,R7
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 445
0145 900000      R     MOV     DPTR,#ep
0148 E0                MOVX    A,@DPTR
0149 FF                MOV     R7,A
014A EF                MOV     A,R7
014B 75F00B            MOV     B,#0BH
014E A4                MUL     AB
014F 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0151 F582              MOV     DPL,A
0153 E4                CLR     A
0154 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0156 F583              MOV     DPH,A
0158 E0                MOVX    A,@DPTR
0159 FE                MOV     R6,A
015A A3                INC     DPTR
015B E0                MOVX    A,@DPTR
015C FF                MOV     R7,A
015D EE                MOV     A,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 43  

015E FF                MOV     R7,A
015F 7E00              MOV     R6,#00H
0161 900000      R     MOV     DPTR,#i
0164 E0                MOVX    A,@DPTR
0165 FE                MOV     R6,A
0166 EE                MOV     A,R6
0167 FD                MOV     R5,A
0168 7C00              MOV     R4,#00H
016A ED                MOV     A,R5
016B 2487              ADD     A,#087H
016D FD                MOV     R5,A
016E EC                MOV     A,R4
016F 3460              ADDC    A,#060H
0171 FC                MOV     R4,A
0172 8D82              MOV     DPL,R5
0174 8C83              MOV     DPH,R4
0176 EF                MOV     A,R7
0177 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 446
0178 900000      R     MOV     DPTR,#ep
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 75F00B            MOV     B,#0BH
0181 A4                MUL     AB
0182 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0184 F582              MOV     DPL,A
0186 E4                CLR     A
0187 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0189 F583              MOV     DPH,A
018B E0                MOVX    A,@DPTR
018C FE                MOV     R6,A
018D A3                INC     DPTR
018E E0                MOVX    A,@DPTR
018F FF                MOV     R7,A
0190 EF                MOV     A,R7
0191 54FF              ANL     A,#0FFH
0193 FF                MOV     R7,A
0194 900000      R     MOV     DPTR,#i
0197 E0                MOVX    A,@DPTR
0198 FE                MOV     R6,A
0199 EE                MOV     A,R6
019A FD                MOV     R5,A
019B 7C00              MOV     R4,#00H
019D ED                MOV     A,R5
019E 2484              ADD     A,#084H
01A0 FD                MOV     R5,A
01A1 EC                MOV     A,R4
01A2 3460              ADDC    A,#060H
01A4 FC                MOV     R4,A
01A5 8D82              MOV     DPL,R5
01A7 8C83              MOV     DPH,R4
01A9 EF                MOV     A,R7
01AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 447
01AB 900000      R     MOV     DPTR,#ep
01AE E0                MOVX    A,@DPTR
01AF FF                MOV     R7,A
01B0 EF                MOV     A,R7
01B1 75F00B            MOV     B,#0BH
01B4 A4                MUL     AB
01B5 2400        E     ADD     A,#LOW USBUART_1_EP+06H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 44  

01B7 F582              MOV     DPL,A
01B9 E4                CLR     A
01BA 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
01BC F583              MOV     DPH,A
01BE E0                MOVX    A,@DPTR
01BF FE                MOV     R6,A
01C0 A3                INC     DPTR
01C1 E0                MOVX    A,@DPTR
01C2 FF                MOV     R7,A
01C3 EE                MOV     A,R6
01C4 FF                MOV     R7,A
01C5 7E00              MOV     R6,#00H
01C7 900000      R     MOV     DPTR,#i
01CA E0                MOVX    A,@DPTR
01CB FE                MOV     R6,A
01CC EE                MOV     A,R6
01CD FD                MOV     R5,A
01CE 7C00              MOV     R4,#00H
01D0 ED                MOV     A,R5
01D1 2485              ADD     A,#085H
01D3 FD                MOV     R5,A
01D4 EC                MOV     A,R4
01D5 3460              ADDC    A,#060H
01D7 FC                MOV     R4,A
01D8 8D82              MOV     DPL,R5
01DA 8C83              MOV     DPH,R4
01DC EF                MOV     A,R7
01DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 450
01DE 900000      R     MOV     DPTR,#ep
01E1 E0                MOVX    A,@DPTR
01E2 04                INC     A
01E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 451
01E4 900000      R     MOV     DPTR,#i
01E7 E0                MOVX    A,@DPTR
01E8 2410              ADD     A,#010H
01EA F0                MOVX    @DPTR,A
01EB 020000      R     LJMP    ?C0060
01EE         ?C0061:
                                           ; SOURCE LINE # 467
01EE 90600A            MOV     DPTR,#0600AH
01F1 74FF              MOV     A,#0FFH
01F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 468
01F4 22                RET     
             ; FUNCTION USBUART_1_ConfigReg (END)

             ; FUNCTION _USBUART_1_Config (BEGIN)
                                           ; SOURCE LINE # 493
0000 900000      R     MOV     DPTR,#clearAltSetting
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
                                           ; SOURCE LINE # 501
0005 900000      R     MOV     DPTR,#buffCount
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B E4                CLR     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 508
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 45  

000D 900000      R     MOV     DPTR,#ep
0010 E4                CLR     A
0011 F0                MOVX    @DPTR,A
0012         ?C0068:
0012 900000      R     MOV     DPTR,#ep
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 C3                CLR     C
0019 9409              SUBB    A,#09H
001B 4003              JC      $ + 5H
001D 020000      R     LJMP    ?C0069
                                           ; SOURCE LINE # 509
                                           ; SOURCE LINE # 510
0020 900000      R     MOV     DPTR,#ep
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 EF                MOV     A,R7
0026 75F00B            MOV     B,#0BH
0029 A4                MUL     AB
002A 2400        E     ADD     A,#LOW USBUART_1_EP
002C F582              MOV     DPL,A
002E E4                CLR     A
002F 3400        E     ADDC    A,#HIGH USBUART_1_EP
0031 F583              MOV     DPH,A
0033 E4                CLR     A
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 511
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B 75F00B            MOV     B,#0BH
003E A4                MUL     AB
003F 2400        E     ADD     A,#LOW USBUART_1_EP+02H
0041 F582              MOV     DPL,A
0043 E4                CLR     A
0044 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0046 F583              MOV     DPH,A
0048 E4                CLR     A
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 512
004A 900000      R     MOV     DPTR,#ep
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F EF                MOV     A,R7
0050 75F00B            MOV     B,#0BH
0053 A4                MUL     AB
0054 2400        E     ADD     A,#LOW USBUART_1_EP+01H
0056 F582              MOV     DPL,A
0058 E4                CLR     A
0059 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
005B F583              MOV     DPH,A
005D E4                CLR     A
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 513
005F 900000      R     MOV     DPTR,#ep
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 EF                MOV     A,R7
0065 75F00B            MOV     B,#0BH
0068 A4                MUL     AB
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 46  

0069 2400        E     ADD     A,#LOW USBUART_1_EP+03H
006B F582              MOV     DPL,A
006D E4                CLR     A
006E 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
0070 F583              MOV     DPH,A
0072 E4                CLR     A
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 514
0074 900000      R     MOV     DPTR,#ep
0077 E0                MOVX    A,@DPTR
0078 FF                MOV     R7,A
0079 EF                MOV     A,R7
007A 75F00B            MOV     B,#0BH
007D A4                MUL     AB
007E 2400        E     ADD     A,#LOW USBUART_1_EP+05H
0080 F582              MOV     DPL,A
0082 E4                CLR     A
0083 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
0085 F583              MOV     DPH,A
0087 E4                CLR     A
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 515
0089 900000      R     MOV     DPTR,#ep
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E EF                MOV     A,R7
008F 75F00B            MOV     B,#0BH
0092 A4                MUL     AB
0093 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0095 F582              MOV     DPL,A
0097 E4                CLR     A
0098 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
009A F583              MOV     DPH,A
009C E4                CLR     A
009D F0                MOVX    @DPTR,A
009E A3                INC     DPTR
009F E4                CLR     A
00A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 516
00A1 900000      R     MOV     DPTR,#ep
00A4 E0                MOVX    A,@DPTR
00A5 FF                MOV     R7,A
00A6 EF                MOV     A,R7
00A7 75F00B            MOV     B,#0BH
00AA A4                MUL     AB
00AB 2400        E     ADD     A,#LOW USBUART_1_EP+0AH
00AD F582              MOV     DPL,A
00AF E4                CLR     A
00B0 3400        E     ADDC    A,#HIGH USBUART_1_EP+0AH
00B2 F583              MOV     DPH,A
00B4 E4                CLR     A
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 518
00B6 900000      R     MOV     DPTR,#ep
00B9 E0                MOVX    A,@DPTR
00BA 04                INC     A
00BB F0                MOVX    @DPTR,A
00BC 020000      R     LJMP    ?C0068
00BF         ?C0069:
                                           ; SOURCE LINE # 521
00BF 900000      R     MOV     DPTR,#clearAltSetting
00C2 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 47  

00C3 FF                MOV     R7,A
00C4 EF                MOV     A,R7
00C5 603A              JZ      ?C0071
                                           ; SOURCE LINE # 522
                                           ; SOURCE LINE # 523
00C7 900000      R     MOV     DPTR,#i
00CA E4                CLR     A
00CB F0                MOVX    @DPTR,A
00CC         ?C0072:
00CC 900000      R     MOV     DPTR,#i
00CF E0                MOVX    A,@DPTR
00D0 FF                MOV     R7,A
00D1 EF                MOV     A,R7
00D2 C3                CLR     C
00D3 9402              SUBB    A,#02H
00D5 502A              JNC     ?C0071
                                           ; SOURCE LINE # 524
                                           ; SOURCE LINE # 525
00D7 900000      R     MOV     DPTR,#i
00DA E0                MOVX    A,@DPTR
00DB FF                MOV     R7,A
00DC 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
00DE 2F                ADD     A,R7
00DF F582              MOV     DPL,A
00E1 E4                CLR     A
00E2 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
00E4 F583              MOV     DPH,A
00E6 E4                CLR     A
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 526
00E8 900000      R     MOV     DPTR,#i
00EB E0                MOVX    A,@DPTR
00EC FF                MOV     R7,A
00ED 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
00EF 2F                ADD     A,R7
00F0 F582              MOV     DPL,A
00F2 E4                CLR     A
00F3 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
00F5 F583              MOV     DPH,A
00F7 E4                CLR     A
00F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 527
00F9 900000      R     MOV     DPTR,#i
00FC E0                MOVX    A,@DPTR
00FD 04                INC     A
00FE F0                MOVX    @DPTR,A
00FF 80CB              SJMP    ?C0072
                                           ; SOURCE LINE # 528
0101         ?C0071:
                                           ; SOURCE LINE # 531
0101 900000      E     MOV     DPTR,#USBUART_1_configuration
0104 E0                MOVX    A,@DPTR
0105 FF                MOV     R7,A
0106 EF                MOV     A,R7
0107 D3                SETB    C
0108 9400              SUBB    A,#00H
010A 5003              JNC     $ + 5H
010C 020000      R     LJMP    ?C0103
                                           ; SOURCE LINE # 532
                                           ; SOURCE LINE # 533
010F 900000      E     MOV     DPTR,#USBUART_1_configuration
0112 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 48  

0113 FF                MOV     R7,A
0114 EF                MOV     A,R7
0115 14                DEC     A
0116 FF                MOV     R7,A
0117 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
011A 900000      R     MOV     DPTR,#pTmp
011D EE                MOV     A,R6
011E F0                MOVX    @DPTR,A
011F A3                INC     DPTR
0120 EF                MOV     A,R7
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 535
0122 900000      R     MOV     DPTR,#pTmp
0125 E0                MOVX    A,@DPTR
0126 FE                MOV     R6,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A 8F82              MOV     DPL,R7
012C 8E83              MOV     DPH,R6
012E A3                INC     DPTR
012F 120000      E     LCALL   ?C?PLDCODE
0132 900000      R     MOV     DPTR,#pDescr
0135 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 536
0138 900000      R     MOV     DPTR,#pDescr
013B 120000      E     LCALL   ?C?PLDXDATA
013E E9                MOV     A,R1
013F 2407              ADD     A,#07H
0141 F9                MOV     R1,A
0142 EA                MOV     A,R2
0143 3400              ADDC    A,#00H
0145 FA                MOV     R2,A
0146 120000      E     LCALL   ?C?CLDPTR
0149 FF                MOV     R7,A
014A EF                MOV     A,R7
014B 5440              ANL     A,#040H
014D FF                MOV     R7,A
014E 7E00              MOV     R6,#00H
0150 EF                MOV     A,R7
0151 4E                ORL     A,R6
0152 6010              JZ      ?C0076
                                           ; SOURCE LINE # 537
                                           ; SOURCE LINE # 538
0154 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 4401              ORL     A,#01H
015C FF                MOV     R7,A
015D 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0160 EF                MOV     A,R7
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 539
0162 800E              SJMP    ?C0077
0164         ?C0076:
                                           ; SOURCE LINE # 541
                                           ; SOURCE LINE # 542
0164 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0167 E0                MOVX    A,@DPTR
0168 FF                MOV     R7,A
0169 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 49  

016A 54FE              ANL     A,#0FEH
016C FF                MOV     R7,A
016D 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0170 EF                MOV     A,R7
0171 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 543
0172         ?C0077:
                                           ; SOURCE LINE # 545
0172 900000      R     MOV     DPTR,#pTmp
0175 E0                MOVX    A,@DPTR
0176 FE                MOV     R6,A
0177 A3                INC     DPTR
0178 E0                MOVX    A,@DPTR
0179 FF                MOV     R7,A
017A EF                MOV     A,R7
017B 2404              ADD     A,#04H
017D FF                MOV     R7,A
017E EE                MOV     A,R6
017F 3400              ADDC    A,#00H
0181 FE                MOV     R6,A
0182 900000      R     MOV     DPTR,#pTmp
0185 EE                MOV     A,R6
0186 F0                MOVX    @DPTR,A
0187 A3                INC     DPTR
0188 EF                MOV     A,R7
0189 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 546
018A 900000      R     MOV     DPTR,#pTmp
018D E0                MOVX    A,@DPTR
018E FE                MOV     R6,A
018F A3                INC     DPTR
0190 E0                MOVX    A,@DPTR
0191 FF                MOV     R7,A
0192 8F82              MOV     DPL,R7
0194 8E83              MOV     DPH,R6
0196 E4                CLR     A
0197 93                MOVC    A,@A+DPTR
0198 FF                MOV     R7,A
0199 900000      R     MOV     DPTR,#ep
019C EF                MOV     A,R7
019D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 613
019E 900000      R     MOV     DPTR,#i
01A1 7401              MOV     A,#01H
01A3 F0                MOVX    @DPTR,A
01A4         ?C0078:
01A4 900000      R     MOV     DPTR,#i
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 EF                MOV     A,R7
01AA C3                CLR     C
01AB 9409              SUBB    A,#09H
01AD 4003              JC      $ + 5H
01AF 020000      R     LJMP    ?C0079
                                           ; SOURCE LINE # 614
                                           ; SOURCE LINE # 616
01B2 900000      R     MOV     DPTR,#pTmp
01B5 E0                MOVX    A,@DPTR
01B6 FE                MOV     R6,A
01B7 A3                INC     DPTR
01B8 E0                MOVX    A,@DPTR
01B9 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 50  

01BA 8F82              MOV     DPL,R7
01BC 8E83              MOV     DPH,R6
01BE A3                INC     DPTR
01BF 120000      E     LCALL   ?C?PLDCODE
01C2 AE02              MOV     R6,AR2
01C4 AF01              MOV     R7,AR1
01C6 900000      R     MOV     DPTR,#pEP
01C9 EE                MOV     A,R6
01CA F0                MOVX    @DPTR,A
01CB A3                INC     DPTR
01CC EF                MOV     A,R7
01CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 619
01CE 900000      R     MOV     DPTR,#cur_ep
01D1 E4                CLR     A
01D2 F0                MOVX    @DPTR,A
01D3         ?C0081:
01D3 900000      R     MOV     DPTR,#ep
01D6 E0                MOVX    A,@DPTR
01D7 FF                MOV     R7,A
01D8 900000      R     MOV     DPTR,#cur_ep
01DB E0                MOVX    A,@DPTR
01DC FE                MOV     R6,A
01DD EE                MOV     A,R6
01DE C3                CLR     C
01DF 9F                SUBB    A,R7
01E0 4003              JC      $ + 5H
01E2 020000      R     LJMP    ?C0080
                                           ; SOURCE LINE # 620
                                           ; SOURCE LINE # 622
01E5 900000      R     MOV     DPTR,#pEP
01E8 E0                MOVX    A,@DPTR
01E9 FE                MOV     R6,A
01EA A3                INC     DPTR
01EB E0                MOVX    A,@DPTR
01EC FF                MOV     R7,A
01ED 8F82              MOV     DPL,R7
01EF 8E83              MOV     DPH,R6
01F1 7402              MOV     A,#02H
01F3 93                MOVC    A,@A+DPTR
01F4 FF                MOV     R7,A
01F5 EF                MOV     A,R7
01F6 547F              ANL     A,#07FH
01F8 FF                MOV     R7,A
01F9 7E00              MOV     R6,#00H
01FB 900000      R     MOV     DPTR,#i
01FE E0                MOVX    A,@DPTR
01FF FD                MOV     R5,A
0200 7C00              MOV     R4,#00H
0202 ED                MOV     A,R5
0203 6F                XRL     A,R7
0204 7002              JNZ     ?C0144
0206 EC                MOV     A,R4
0207 6E                XRL     A,R6
0208         ?C0144:
0208 6003              JZ      $ + 5H
020A 020000      R     LJMP    ?C0084
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 624
020D 900000      R     MOV     DPTR,#pEP
0210 E0                MOVX    A,@DPTR
0211 FE                MOV     R6,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 51  

0212 A3                INC     DPTR
0213 E0                MOVX    A,@DPTR
0214 FF                MOV     R7,A
0215 8F82              MOV     DPL,R7
0217 8E83              MOV     DPH,R6
0219 7404              MOV     A,#04H
021B 93                MOVC    A,@A+DPTR
021C FE                MOV     R6,A
021D 7405              MOV     A,#05H
021F 93                MOVC    A,@A+DPTR
0220 FF                MOV     R7,A
0221 900000      R     MOV     DPTR,#i
0224 E0                MOVX    A,@DPTR
0225 FD                MOV     R5,A
0226 ED                MOV     A,R5
0227 75F00B            MOV     B,#0BH
022A A4                MUL     AB
022B 2400        E     ADD     A,#LOW USBUART_1_EP+08H
022D F582              MOV     DPL,A
022F E4                CLR     A
0230 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
0232 F583              MOV     DPH,A
0234 E0                MOVX    A,@DPTR
0235 FC                MOV     R4,A
0236 A3                INC     DPTR
0237 E0                MOVX    A,@DPTR
0238 FD                MOV     R5,A
0239 C3                CLR     C
023A ED                MOV     A,R5
023B 9F                SUBB    A,R7
023C EC                MOV     A,R4
023D 9E                SUBB    A,R6
023E 502C              JNC     ?C0085
                                           ; SOURCE LINE # 625
                                           ; SOURCE LINE # 626
0240 900000      R     MOV     DPTR,#pEP
0243 E0                MOVX    A,@DPTR
0244 FE                MOV     R6,A
0245 A3                INC     DPTR
0246 E0                MOVX    A,@DPTR
0247 FF                MOV     R7,A
0248 8F82              MOV     DPL,R7
024A 8E83              MOV     DPH,R6
024C 7404              MOV     A,#04H
024E 93                MOVC    A,@A+DPTR
024F FE                MOV     R6,A
0250 7405              MOV     A,#05H
0252 93                MOVC    A,@A+DPTR
0253 FF                MOV     R7,A
0254 900000      R     MOV     DPTR,#i
0257 E0                MOVX    A,@DPTR
0258 FD                MOV     R5,A
0259 ED                MOV     A,R5
025A 75F00B            MOV     B,#0BH
025D A4                MUL     AB
025E 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0260 F582              MOV     DPL,A
0262 E4                CLR     A
0263 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
0265 F583              MOV     DPH,A
0267 EE                MOV     A,R6
0268 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 52  

0269 A3                INC     DPTR
026A EF                MOV     A,R7
026B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 627
026C         ?C0085:
                                           ; SOURCE LINE # 629
026C 900000      R     MOV     DPTR,#pEP
026F E0                MOVX    A,@DPTR
0270 FE                MOV     R6,A
0271 A3                INC     DPTR
0272 E0                MOVX    A,@DPTR
0273 FF                MOV     R7,A
0274 8F82              MOV     DPL,R7
0276 8E83              MOV     DPH,R6
0278 E4                CLR     A
0279 93                MOVC    A,@A+DPTR
027A FF                MOV     R7,A
027B 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
027D 2F                ADD     A,R7
027E F582              MOV     DPL,A
0280 E4                CLR     A
0281 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0283 F583              MOV     DPH,A
0285 E0                MOVX    A,@DPTR
0286 FF                MOV     R7,A
0287 900000      R     MOV     DPTR,#pEP
028A E0                MOVX    A,@DPTR
028B FC                MOV     R4,A
028C A3                INC     DPTR
028D E0                MOVX    A,@DPTR
028E FD                MOV     R5,A
028F 8D82              MOV     DPL,R5
0291 8C83              MOV     DPH,R4
0293 7401              MOV     A,#01H
0295 93                MOVC    A,@A+DPTR
0296 FE                MOV     R6,A
0297 EF                MOV     A,R7
0298 6E                XRL     A,R6
0299 6003              JZ      $ + 5H
029B 020000      R     LJMP    ?C0084
                                           ; SOURCE LINE # 630
                                           ; SOURCE LINE # 631
029E 900000      R     MOV     DPTR,#pEP
02A1 E0                MOVX    A,@DPTR
02A2 FE                MOV     R6,A
02A3 A3                INC     DPTR
02A4 E0                MOVX    A,@DPTR
02A5 FF                MOV     R7,A
02A6 8F82              MOV     DPL,R7
02A8 8E83              MOV     DPH,R6
02AA 7403              MOV     A,#03H
02AC 93                MOVC    A,@A+DPTR
02AD FF                MOV     R7,A
02AE EF                MOV     A,R7
02AF 5403              ANL     A,#03H
02B1 FF                MOV     R7,A
02B2 900000      R     MOV     DPTR,#epType
02B5 EF                MOV     A,R7
02B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 632
02B7 900000      R     MOV     DPTR,#pEP
02BA E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 53  

02BB FE                MOV     R6,A
02BC A3                INC     DPTR
02BD E0                MOVX    A,@DPTR
02BE FF                MOV     R7,A
02BF 8F82              MOV     DPL,R7
02C1 8E83              MOV     DPH,R6
02C3 7402              MOV     A,#02H
02C5 93                MOVC    A,@A+DPTR
02C6 FF                MOV     R7,A
02C7 EF                MOV     A,R7
02C8 5480              ANL     A,#080H
02CA FF                MOV     R7,A
02CB 7E00              MOV     R6,#00H
02CD EF                MOV     A,R7
02CE 4E                ORL     A,R6
02CF 7003              JNZ     $ + 5H
02D1 020000      R     LJMP    ?C0087
                                           ; SOURCE LINE # 633
                                           ; SOURCE LINE # 635
02D4 900000      R     MOV     DPTR,#i
02D7 E0                MOVX    A,@DPTR
02D8 FF                MOV     R7,A
02D9 EF                MOV     A,R7
02DA 75F00B            MOV     B,#0BH
02DD A4                MUL     AB
02DE 2400        E     ADD     A,#LOW USBUART_1_EP+01H
02E0 F582              MOV     DPL,A
02E2 E4                CLR     A
02E3 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
02E5 F583              MOV     DPH,A
02E7 7401              MOV     A,#01H
02E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 636
02EA 900000      R     MOV     DPTR,#epType
02ED E0                MOVX    A,@DPTR
02EE FF                MOV     R7,A
02EF EF                MOV     A,R7
02F0 B40104            CJNE    A,#01H,?C0088
02F3 7F07              MOV     R7,#07H
02F5 8002              SJMP    ?C0089
02F7         ?C0088:
02F7 7F0D              MOV     R7,#0DH
02F9         ?C0089:
02F9 900000      R     MOV     DPTR,#i
02FC E0                MOVX    A,@DPTR
02FD FE                MOV     R6,A
02FE EE                MOV     A,R6
02FF 75F00B            MOV     B,#0BH
0302 A4                MUL     AB
0303 2400        E     ADD     A,#LOW USBUART_1_EP+05H
0305 F582              MOV     DPL,A
0307 E4                CLR     A
0308 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
030A F583              MOV     DPH,A
030C EF                MOV     A,R7
030D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 640
030E 900000      R     MOV     DPTR,#pEP
0311 E0                MOVX    A,@DPTR
0312 FE                MOV     R6,A
0313 A3                INC     DPTR
0314 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 54  

0315 FF                MOV     R7,A
0316 8F82              MOV     DPL,R7
0318 8E83              MOV     DPH,R6
031A 7406              MOV     A,#06H
031C 93                MOVC    A,@A+DPTR
031D FF                MOV     R7,A
031E EF                MOV     A,R7
031F 640A              XRL     A,#0AH
0321 6018              JZ      ?C0091
0323 900000      R     MOV     DPTR,#pEP
0326 E0                MOVX    A,@DPTR
0327 FE                MOV     R6,A
0328 A3                INC     DPTR
0329 E0                MOVX    A,@DPTR
032A FF                MOV     R7,A
032B 8F82              MOV     DPL,R7
032D 8E83              MOV     DPH,R6
032F 7406              MOV     A,#06H
0331 93                MOVC    A,@A+DPTR
0332 FF                MOV     R7,A
0333 EF                MOV     A,R7
0334 6402              XRL     A,#02H
0336 6003              JZ      $ + 5H
0338 020000      R     LJMP    ?C0092
033B         ?C0091:
033B 900000      R     MOV     DPTR,#epType
033E E0                MOVX    A,@DPTR
033F FF                MOV     R7,A
0340 EF                MOV     A,R7
0341 6403              XRL     A,#03H
0343 7003              JNZ     $ + 5H
0345 020000      R     LJMP    ?C0092
                                           ; SOURCE LINE # 643
                                           ; SOURCE LINE # 644
0348 900000      R     MOV     DPTR,#i
034B E0                MOVX    A,@DPTR
034C FF                MOV     R7,A
034D 900000      E     MOV     DPTR,#USBUART_1_cdc_data_in_ep
0350 EF                MOV     A,R7
0351 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
                                           ; SOURCE LINE # 655
0352 8076              SJMP    ?C0092
0354         ?C0087:
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 659
0354 900000      R     MOV     DPTR,#i
0357 E0                MOVX    A,@DPTR
0358 FF                MOV     R7,A
0359 EF                MOV     A,R7
035A 75F00B            MOV     B,#0BH
035D A4                MUL     AB
035E 2400        E     ADD     A,#LOW USBUART_1_EP+01H
0360 F582              MOV     DPL,A
0362 E4                CLR     A
0363 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0365 F583              MOV     DPH,A
0367 E4                CLR     A
0368 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 660
0369 900000      R     MOV     DPTR,#epType
036C E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 55  

036D FF                MOV     R7,A
036E EF                MOV     A,R7
036F B40104            CJNE    A,#01H,?C0093
0372 7F05              MOV     R7,#05H
0374 8002              SJMP    ?C0094
0376         ?C0093:
0376 7F09              MOV     R7,#09H
0378         ?C0094:
0378 900000      R     MOV     DPTR,#i
037B E0                MOVX    A,@DPTR
037C FE                MOV     R6,A
037D EE                MOV     A,R6
037E 75F00B            MOV     B,#0BH
0381 A4                MUL     AB
0382 2400        E     ADD     A,#LOW USBUART_1_EP+05H
0384 F582              MOV     DPL,A
0386 E4                CLR     A
0387 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
0389 F583              MOV     DPH,A
038B EF                MOV     A,R7
038C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 664
038D 900000      R     MOV     DPTR,#pEP
0390 E0                MOVX    A,@DPTR
0391 FE                MOV     R6,A
0392 A3                INC     DPTR
0393 E0                MOVX    A,@DPTR
0394 FF                MOV     R7,A
0395 8F82              MOV     DPL,R7
0397 8E83              MOV     DPH,R6
0399 7406              MOV     A,#06H
039B 93                MOVC    A,@A+DPTR
039C FF                MOV     R7,A
039D EF                MOV     A,R7
039E 640A              XRL     A,#0AH
03A0 6014              JZ      ?C0096
03A2 900000      R     MOV     DPTR,#pEP
03A5 E0                MOVX    A,@DPTR
03A6 FE                MOV     R6,A
03A7 A3                INC     DPTR
03A8 E0                MOVX    A,@DPTR
03A9 FF                MOV     R7,A
03AA 8F82              MOV     DPL,R7
03AC 8E83              MOV     DPH,R6
03AE 7406              MOV     A,#06H
03B0 93                MOVC    A,@A+DPTR
03B1 FF                MOV     R7,A
03B2 EF                MOV     A,R7
03B3 B40214            CJNE    A,#02H,?C0092
03B6         ?C0096:
03B6 900000      R     MOV     DPTR,#epType
03B9 E0                MOVX    A,@DPTR
03BA FF                MOV     R7,A
03BB EF                MOV     A,R7
03BC 6403              XRL     A,#03H
03BE 600A              JZ      ?C0092
                                           ; SOURCE LINE # 667
                                           ; SOURCE LINE # 668
03C0 900000      R     MOV     DPTR,#i
03C3 E0                MOVX    A,@DPTR
03C4 FF                MOV     R7,A
03C5 900000      E     MOV     DPTR,#USBUART_1_cdc_data_out_ep
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 56  

03C8 EF                MOV     A,R7
03C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 669
                                           ; SOURCE LINE # 679
03CA         ?C0092:
                                           ; SOURCE LINE # 680
03CA 900000      R     MOV     DPTR,#pEP
03CD E0                MOVX    A,@DPTR
03CE FE                MOV     R6,A
03CF A3                INC     DPTR
03D0 E0                MOVX    A,@DPTR
03D1 FF                MOV     R7,A
03D2 8F82              MOV     DPL,R7
03D4 8E83              MOV     DPH,R6
03D6 7402              MOV     A,#02H
03D8 93                MOVC    A,@A+DPTR
03D9 FF                MOV     R7,A
03DA 900000      R     MOV     DPTR,#i
03DD E0                MOVX    A,@DPTR
03DE FE                MOV     R6,A
03DF EE                MOV     A,R6
03E0 75F00B            MOV     B,#0BH
03E3 A4                MUL     AB
03E4 2400        E     ADD     A,#LOW USBUART_1_EP+04H
03E6 F582              MOV     DPL,A
03E8 E4                CLR     A
03E9 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
03EB F583              MOV     DPH,A
03ED EF                MOV     A,R7
03EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 681
03EF 900000      R     MOV     DPTR,#pEP
03F2 E0                MOVX    A,@DPTR
03F3 FE                MOV     R6,A
03F4 A3                INC     DPTR
03F5 E0                MOVX    A,@DPTR
03F6 FF                MOV     R7,A
03F7 8F82              MOV     DPL,R7
03F9 8E83              MOV     DPH,R6
03FB 7403              MOV     A,#03H
03FD 93                MOVC    A,@A+DPTR
03FE FF                MOV     R7,A
03FF 900000      R     MOV     DPTR,#i
0402 E0                MOVX    A,@DPTR
0403 FE                MOV     R6,A
0404 EE                MOV     A,R6
0405 75F00B            MOV     B,#0BH
0408 A4                MUL     AB
0409 2400        E     ADD     A,#LOW USBUART_1_EP
040B F582              MOV     DPL,A
040D E4                CLR     A
040E 3400        E     ADDC    A,#HIGH USBUART_1_EP
0410 F583              MOV     DPH,A
0412 EF                MOV     A,R7
0413 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 686
                                           ; SOURCE LINE # 687
0414         ?C0084:
                                           ; SOURCE LINE # 688
0414 900000      R     MOV     DPTR,#pEP
0417 E0                MOVX    A,@DPTR
0418 FE                MOV     R6,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 57  

0419 A3                INC     DPTR
041A E0                MOVX    A,@DPTR
041B FF                MOV     R7,A
041C EF                MOV     A,R7
041D 2407              ADD     A,#07H
041F FF                MOV     R7,A
0420 EE                MOV     A,R6
0421 3400              ADDC    A,#00H
0423 FE                MOV     R6,A
0424 900000      R     MOV     DPTR,#pEP
0427 EE                MOV     A,R6
0428 F0                MOVX    @DPTR,A
0429 A3                INC     DPTR
042A EF                MOV     A,R7
042B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 689
042C 900000      R     MOV     DPTR,#cur_ep
042F E0                MOVX    A,@DPTR
0430 04                INC     A
0431 F0                MOVX    @DPTR,A
0432 020000      R     LJMP    ?C0081
                                           ; SOURCE LINE # 690
0435         ?C0080:
0435 900000      R     MOV     DPTR,#i
0438 E0                MOVX    A,@DPTR
0439 04                INC     A
043A F0                MOVX    @DPTR,A
043B 020000      R     LJMP    ?C0078
043E         ?C0079:
                                           ; SOURCE LINE # 698
043E 900000      R     MOV     DPTR,#pTmp
0441 E0                MOVX    A,@DPTR
0442 FE                MOV     R6,A
0443 A3                INC     DPTR
0444 E0                MOVX    A,@DPTR
0445 FF                MOV     R7,A
0446 8F82              MOV     DPL,R7
0448 8E83              MOV     DPH,R6
044A A3                INC     DPTR
044B 120000      E     LCALL   ?C?PLDCODE
044E AE02              MOV     R6,AR2
0450 AF01              MOV     R7,AR1
0452 900000      R     MOV     DPTR,#pEP
0455 EE                MOV     A,R6
0456 F0                MOVX    @DPTR,A
0457 A3                INC     DPTR
0458 EF                MOV     A,R7
0459 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
045A 900000      R     MOV     DPTR,#i
045D E4                CLR     A
045E F0                MOVX    @DPTR,A
045F         ?C0097:
045F 900000      R     MOV     DPTR,#ep
0462 E0                MOVX    A,@DPTR
0463 FF                MOV     R7,A
0464 900000      R     MOV     DPTR,#i
0467 E0                MOVX    A,@DPTR
0468 FE                MOV     R6,A
0469 EE                MOV     A,R6
046A C3                CLR     C
046B 9F                SUBB    A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 58  

046C 5053              JNC     ?C0098
                                           ; SOURCE LINE # 700
                                           ; SOURCE LINE # 702
046E 900000      R     MOV     DPTR,#pEP
0471 E0                MOVX    A,@DPTR
0472 FE                MOV     R6,A
0473 A3                INC     DPTR
0474 E0                MOVX    A,@DPTR
0475 FF                MOV     R7,A
0476 8F82              MOV     DPL,R7
0478 8E83              MOV     DPH,R6
047A E4                CLR     A
047B 93                MOVC    A,@A+DPTR
047C FF                MOV     R7,A
047D 900000      R     MOV     DPTR,#pEP
0480 E0                MOVX    A,@DPTR
0481 FC                MOV     R4,A
0482 A3                INC     DPTR
0483 E0                MOVX    A,@DPTR
0484 FD                MOV     R5,A
0485 8D82              MOV     DPL,R5
0487 8C83              MOV     DPH,R4
0489 7402              MOV     A,#02H
048B 93                MOVC    A,@A+DPTR
048C FE                MOV     R6,A
048D EE                MOV     A,R6
048E 547F              ANL     A,#07FH
0490 FE                MOV     R6,A
0491 EE                MOV     A,R6
0492 75F00B            MOV     B,#0BH
0495 A4                MUL     AB
0496 2400        E     ADD     A,#LOW USBUART_1_EP+0AH
0498 F582              MOV     DPL,A
049A E4                CLR     A
049B 3400        E     ADDC    A,#HIGH USBUART_1_EP+0AH
049D F583              MOV     DPH,A
049F EF                MOV     A,R7
04A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 703
04A1 900000      R     MOV     DPTR,#pEP
04A4 E0                MOVX    A,@DPTR
04A5 FE                MOV     R6,A
04A6 A3                INC     DPTR
04A7 E0                MOVX    A,@DPTR
04A8 FF                MOV     R7,A
04A9 EF                MOV     A,R7
04AA 2407              ADD     A,#07H
04AC FF                MOV     R7,A
04AD EE                MOV     A,R6
04AE 3400              ADDC    A,#00H
04B0 FE                MOV     R6,A
04B1 900000      R     MOV     DPTR,#pEP
04B4 EE                MOV     A,R6
04B5 F0                MOVX    @DPTR,A
04B6 A3                INC     DPTR
04B7 EF                MOV     A,R7
04B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 704
04B9 900000      R     MOV     DPTR,#i
04BC E0                MOVX    A,@DPTR
04BD 04                INC     A
04BE F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 59  

04BF 809E              SJMP    ?C0097
04C1         ?C0098:
                                           ; SOURCE LINE # 706
04C1 120000      R     LCALL   USBUART_1_GetInterfaceClassTablePtr
04C4 900000      E     MOV     DPTR,#USBUART_1_interfaceClass
04C7 EE                MOV     A,R6
04C8 F0                MOVX    @DPTR,A
04C9 A3                INC     DPTR
04CA EF                MOV     A,R7
04CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 710
04CC 900000      R     MOV     DPTR,#ep
04CF 7401              MOV     A,#01H
04D1 F0                MOVX    @DPTR,A
04D2         ?C0100:
04D2 900000      R     MOV     DPTR,#ep
04D5 E0                MOVX    A,@DPTR
04D6 FF                MOV     R7,A
04D7 EF                MOV     A,R7
04D8 C3                CLR     C
04D9 9409              SUBB    A,#09H
04DB 5049              JNC     ?C0101
                                           ; SOURCE LINE # 711
                                           ; SOURCE LINE # 712
04DD 900000      R     MOV     DPTR,#buffCount
04E0 E0                MOVX    A,@DPTR
04E1 FE                MOV     R6,A
04E2 A3                INC     DPTR
04E3 E0                MOVX    A,@DPTR
04E4 FF                MOV     R7,A
04E5 900000      R     MOV     DPTR,#ep
04E8 E0                MOVX    A,@DPTR
04E9 FD                MOV     R5,A
04EA ED                MOV     A,R5
04EB 75F00B            MOV     B,#0BH
04EE A4                MUL     AB
04EF 2400        E     ADD     A,#LOW USBUART_1_EP+06H
04F1 F582              MOV     DPL,A
04F3 E4                CLR     A
04F4 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
04F6 F583              MOV     DPH,A
04F8 EE                MOV     A,R6
04F9 F0                MOVX    @DPTR,A
04FA A3                INC     DPTR
04FB EF                MOV     A,R7
04FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 713
04FD 900000      R     MOV     DPTR,#ep
0500 E0                MOVX    A,@DPTR
0501 FF                MOV     R7,A
0502 EF                MOV     A,R7
0503 75F00B            MOV     B,#0BH
0506 A4                MUL     AB
0507 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0509 F582              MOV     DPL,A
050B E4                CLR     A
050C 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
050E F583              MOV     DPH,A
0510 E0                MOVX    A,@DPTR
0511 FE                MOV     R6,A
0512 A3                INC     DPTR
0513 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 60  

0514 FF                MOV     R7,A
0515 900000      R     MOV     DPTR,#buffCount
0518 EE                MOV     A,R6
0519 8FF0              MOV     B,R7
051B 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 714
051E 900000      R     MOV     DPTR,#ep
0521 E0                MOVX    A,@DPTR
0522 04                INC     A
0523 F0                MOVX    @DPTR,A
0524 80AC              SJMP    ?C0100
0526         ?C0101:
                                           ; SOURCE LINE # 718
0526 120000      R     LCALL   USBUART_1_ConfigReg
                                           ; SOURCE LINE # 719
                                           ; SOURCE LINE # 720
0529         ?C0103:
0529 22                RET     
             ; FUNCTION _USBUART_1_Config (END)

             ; FUNCTION USBUART_1_ConfigAltChanged (BEGIN)
                                           ; SOURCE LINE # 741
                                           ; SOURCE LINE # 742
                                           ; SOURCE LINE # 754
0000 900000      E     MOV     DPTR,#USBUART_1_configuration
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 D3                SETB    C
0007 9400              SUBB    A,#00H
0009 5003              JNC     $ + 5H
000B 020000      R     LJMP    ?C0115
                                           ; SOURCE LINE # 755
                                           ; SOURCE LINE # 756
000E 900000      E     MOV     DPTR,#USBUART_1_configuration
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 14                DEC     A
0015 FF                MOV     R7,A
0016 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
0019 900000      R     MOV     DPTR,#pTmp
001C EE                MOV     A,R6
001D F0                MOVX    @DPTR,A
001E A3                INC     DPTR
001F EF                MOV     A,R7
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 757
0021 900000      R     MOV     DPTR,#pTmp
0024 E0                MOVX    A,@DPTR
0025 FE                MOV     R6,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 2404              ADD     A,#04H
002C FF                MOV     R7,A
002D EE                MOV     A,R6
002E 3400              ADDC    A,#00H
0030 FE                MOV     R6,A
0031 900000      R     MOV     DPTR,#pTmp
0034 EE                MOV     A,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 61  

0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 758
0039 900000      R     MOV     DPTR,#pTmp
003C E0                MOVX    A,@DPTR
003D FE                MOV     R6,A
003E A3                INC     DPTR
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 8F82              MOV     DPL,R7
0043 8E83              MOV     DPH,R6
0045 E4                CLR     A
0046 93                MOVC    A,@A+DPTR
0047 FF                MOV     R7,A
0048 900000      R     MOV     DPTR,#ep
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 763
004D 900000      R     MOV     DPTR,#pTmp
0050 E0                MOVX    A,@DPTR
0051 FE                MOV     R6,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 8F82              MOV     DPL,R7
0057 8E83              MOV     DPH,R6
0059 A3                INC     DPTR
005A 120000      E     LCALL   ?C?PLDCODE
005D AE02              MOV     R6,AR2
005F AF01              MOV     R7,AR1
0061 900000      R     MOV     DPTR,#pEP
0064 EE                MOV     A,R6
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 764
0069 900000      R     MOV     DPTR,#i
006C E4                CLR     A
006D F0                MOVX    @DPTR,A
006E         ?C0105:
006E 900000      R     MOV     DPTR,#ep
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 900000      R     MOV     DPTR,#i
0076 E0                MOVX    A,@DPTR
0077 FE                MOV     R6,A
0078 EE                MOV     A,R6
0079 C3                CLR     C
007A 9F                SUBB    A,R7
007B 4003              JC      $ + 5H
007D 020000      R     LJMP    ?C0115
                                           ; SOURCE LINE # 765
                                           ; SOURCE LINE # 770
0080 900000      R     MOV     DPTR,#pEP
0083 E0                MOVX    A,@DPTR
0084 FE                MOV     R6,A
0085 A3                INC     DPTR
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 62  

0088 8F82              MOV     DPL,R7
008A 8E83              MOV     DPH,R6
008C E4                CLR     A
008D 93                MOVC    A,@A+DPTR
008E FF                MOV     R7,A
008F 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
0091 2F                ADD     A,R7
0092 F582              MOV     DPL,A
0094 E4                CLR     A
0095 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
0097 F583              MOV     DPH,A
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 900000      R     MOV     DPTR,#pEP
009E E0                MOVX    A,@DPTR
009F FC                MOV     R4,A
00A0 A3                INC     DPTR
00A1 E0                MOVX    A,@DPTR
00A2 FD                MOV     R5,A
00A3 8D82              MOV     DPL,R5
00A5 8C83              MOV     DPH,R4
00A7 E4                CLR     A
00A8 93                MOVC    A,@A+DPTR
00A9 FE                MOV     R6,A
00AA 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
00AC 2E                ADD     A,R6
00AD F582              MOV     DPL,A
00AF E4                CLR     A
00B0 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
00B2 F583              MOV     DPH,A
00B4 E0                MOVX    A,@DPTR
00B5 FE                MOV     R6,A
00B6 EE                MOV     A,R6
00B7 6F                XRL     A,R7
00B8 7003              JNZ     $ + 5H
00BA 020000      R     LJMP    ?C0108
00BD 900000      R     MOV     DPTR,#pEP
00C0 E0                MOVX    A,@DPTR
00C1 FE                MOV     R6,A
00C2 A3                INC     DPTR
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
00C5 8F82              MOV     DPL,R7
00C7 8E83              MOV     DPH,R6
00C9 E4                CLR     A
00CA 93                MOVC    A,@A+DPTR
00CB FF                MOV     R7,A
00CC 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
00CE 2F                ADD     A,R7
00CF F582              MOV     DPL,A
00D1 E4                CLR     A
00D2 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
00D4 F583              MOV     DPH,A
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 900000      R     MOV     DPTR,#pEP
00DB E0                MOVX    A,@DPTR
00DC FC                MOV     R4,A
00DD A3                INC     DPTR
00DE E0                MOVX    A,@DPTR
00DF FD                MOV     R5,A
00E0 8D82              MOV     DPL,R5
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 63  

00E2 8C83              MOV     DPH,R4
00E4 7401              MOV     A,#01H
00E6 93                MOVC    A,@A+DPTR
00E7 FE                MOV     R6,A
00E8 EF                MOV     A,R7
00E9 6E                XRL     A,R6
00EA 6003              JZ      $ + 5H
00EC 020000      R     LJMP    ?C0108
00EF 900000      R     MOV     DPTR,#pEP
00F2 E0                MOVX    A,@DPTR
00F3 FE                MOV     R6,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 8F82              MOV     DPL,R7
00F9 8E83              MOV     DPH,R6
00FB E4                CLR     A
00FC 93                MOVC    A,@A+DPTR
00FD FF                MOV     R7,A
00FE 906004            MOV     DPTR,#06004H
0101 E0                MOVX    A,@DPTR
0102 FE                MOV     R6,A
0103 EF                MOV     A,R7
0104 6E                XRL     A,R6
0105 6003              JZ      $ + 5H
0107 020000      R     LJMP    ?C0108
                                           ; SOURCE LINE # 771
                                           ; SOURCE LINE # 772
010A 900000      R     MOV     DPTR,#pEP
010D E0                MOVX    A,@DPTR
010E FE                MOV     R6,A
010F A3                INC     DPTR
0110 E0                MOVX    A,@DPTR
0111 FF                MOV     R7,A
0112 8F82              MOV     DPL,R7
0114 8E83              MOV     DPH,R6
0116 7402              MOV     A,#02H
0118 93                MOVC    A,@A+DPTR
0119 FF                MOV     R7,A
011A EF                MOV     A,R7
011B 547F              ANL     A,#07FH
011D FF                MOV     R7,A
011E 900000      R     MOV     DPTR,#cur_ep
0121 EF                MOV     A,R7
0122 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 773
0123 900000      R     MOV     DPTR,#cur_ep
0126 E0                MOVX    A,@DPTR
0127 FF                MOV     R7,A
0128 7E00              MOV     R6,#00H
012A EF                MOV     A,R7
012B 24FF              ADD     A,#0FFH
012D FF                MOV     R7,A
012E EE                MOV     A,R6
012F 34FF              ADDC    A,#0FFH
0131 FE                MOV     R6,A
0132 EF                MOV     A,R7
0133 C4                SWAP    A
0134 F8                MOV     R0,A
0135 540F              ANL     A,#0FH
0137 C8                XCH     A,R0
0138 68                XRL     A,R0
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 64  

0139 FF                MOV     R7,A
013A EE                MOV     A,R6
013B C4                SWAP    A
013C 54F0              ANL     A,#0F0H
013E 48                ORL     A,R0
013F FE                MOV     R6,A
0140 900000      R     MOV     DPTR,#ri
0143 EF                MOV     A,R7
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 774
0145 900000      R     MOV     DPTR,#pEP
0148 E0                MOVX    A,@DPTR
0149 FE                MOV     R6,A
014A A3                INC     DPTR
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D 8F82              MOV     DPL,R7
014F 8E83              MOV     DPH,R6
0151 7403              MOV     A,#03H
0153 93                MOVC    A,@A+DPTR
0154 FF                MOV     R7,A
0155 EF                MOV     A,R7
0156 5403              ANL     A,#03H
0158 FF                MOV     R7,A
0159 900000      R     MOV     DPTR,#epType
015C EF                MOV     A,R7
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 775
015E 900000      R     MOV     DPTR,#pEP
0161 E0                MOVX    A,@DPTR
0162 FE                MOV     R6,A
0163 A3                INC     DPTR
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
0166 8F82              MOV     DPL,R7
0168 8E83              MOV     DPH,R6
016A 7402              MOV     A,#02H
016C 93                MOVC    A,@A+DPTR
016D FF                MOV     R7,A
016E EF                MOV     A,R7
016F 5480              ANL     A,#080H
0171 FF                MOV     R7,A
0172 7E00              MOV     R6,#00H
0174 EF                MOV     A,R7
0175 4E                ORL     A,R6
0176 603C              JZ      ?C0109
                                           ; SOURCE LINE # 776
                                           ; SOURCE LINE # 778
0178 900000      R     MOV     DPTR,#cur_ep
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 75F00B            MOV     B,#0BH
0181 A4                MUL     AB
0182 2400        E     ADD     A,#LOW USBUART_1_EP+01H
0184 F582              MOV     DPL,A
0186 E4                CLR     A
0187 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0189 F583              MOV     DPH,A
018B 7401              MOV     A,#01H
018D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 779
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 65  

018E 900000      R     MOV     DPTR,#epType
0191 E0                MOVX    A,@DPTR
0192 FF                MOV     R7,A
0193 EF                MOV     A,R7
0194 B40104            CJNE    A,#01H,?C0110
0197 7F07              MOV     R7,#07H
0199 8002              SJMP    ?C0111
019B         ?C0110:
019B 7F0D              MOV     R7,#0DH
019D         ?C0111:
019D 900000      R     MOV     DPTR,#cur_ep
01A0 E0                MOVX    A,@DPTR
01A1 FE                MOV     R6,A
01A2 EE                MOV     A,R6
01A3 75F00B            MOV     B,#0BH
01A6 A4                MUL     AB
01A7 2400        E     ADD     A,#LOW USBUART_1_EP+05H
01A9 F582              MOV     DPL,A
01AB E4                CLR     A
01AC 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
01AE F583              MOV     DPH,A
01B0 EF                MOV     A,R7
01B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 781
01B2 8039              SJMP    ?C0112
01B4         ?C0109:
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 785
01B4 900000      R     MOV     DPTR,#cur_ep
01B7 E0                MOVX    A,@DPTR
01B8 FF                MOV     R7,A
01B9 EF                MOV     A,R7
01BA 75F00B            MOV     B,#0BH
01BD A4                MUL     AB
01BE 2400        E     ADD     A,#LOW USBUART_1_EP+01H
01C0 F582              MOV     DPL,A
01C2 E4                CLR     A
01C3 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
01C5 F583              MOV     DPH,A
01C7 E4                CLR     A
01C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 786
01C9 900000      R     MOV     DPTR,#epType
01CC E0                MOVX    A,@DPTR
01CD FF                MOV     R7,A
01CE EF                MOV     A,R7
01CF B40104            CJNE    A,#01H,?C0113
01D2 7F05              MOV     R7,#05H
01D4 8002              SJMP    ?C0114
01D6         ?C0113:
01D6 7F09              MOV     R7,#09H
01D8         ?C0114:
01D8 900000      R     MOV     DPTR,#cur_ep
01DB E0                MOVX    A,@DPTR
01DC FE                MOV     R6,A
01DD EE                MOV     A,R6
01DE 75F00B            MOV     B,#0BH
01E1 A4                MUL     AB
01E2 2400        E     ADD     A,#LOW USBUART_1_EP+05H
01E4 F582              MOV     DPL,A
01E6 E4                CLR     A
01E7 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 66  

01E9 F583              MOV     DPH,A
01EB EF                MOV     A,R7
01EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 788
01ED         ?C0112:
                                           ; SOURCE LINE # 790
01ED 900000      R     MOV     DPTR,#ri
01F0 E0                MOVX    A,@DPTR
01F1 FF                MOV     R7,A
01F2 7E00              MOV     R6,#00H
01F4 EF                MOV     A,R7
01F5 240E              ADD     A,#0EH
01F7 FF                MOV     R7,A
01F8 EE                MOV     A,R6
01F9 3460              ADDC    A,#060H
01FB FE                MOV     R6,A
01FC 8F82              MOV     DPL,R7
01FE 8E83              MOV     DPH,R6
0200 7401              MOV     A,#01H
0202 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 791
0203 900000      R     MOV     DPTR,#pEP
0206 E0                MOVX    A,@DPTR
0207 FE                MOV     R6,A
0208 A3                INC     DPTR
0209 E0                MOVX    A,@DPTR
020A FF                MOV     R7,A
020B 8F82              MOV     DPL,R7
020D 8E83              MOV     DPH,R6
020F 7404              MOV     A,#04H
0211 93                MOVC    A,@A+DPTR
0212 FE                MOV     R6,A
0213 7405              MOV     A,#05H
0215 93                MOVC    A,@A+DPTR
0216 FF                MOV     R7,A
0217 900000      R     MOV     DPTR,#cur_ep
021A E0                MOVX    A,@DPTR
021B FD                MOV     R5,A
021C ED                MOV     A,R5
021D 75F00B            MOV     B,#0BH
0220 A4                MUL     AB
0221 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0223 F582              MOV     DPL,A
0225 E4                CLR     A
0226 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
0228 F583              MOV     DPH,A
022A EE                MOV     A,R6
022B F0                MOVX    @DPTR,A
022C A3                INC     DPTR
022D EF                MOV     A,R7
022E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 792
022F 900000      R     MOV     DPTR,#pEP
0232 E0                MOVX    A,@DPTR
0233 FE                MOV     R6,A
0234 A3                INC     DPTR
0235 E0                MOVX    A,@DPTR
0236 FF                MOV     R7,A
0237 8F82              MOV     DPL,R7
0239 8E83              MOV     DPH,R6
023B 7402              MOV     A,#02H
023D 93                MOVC    A,@A+DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 67  

023E FF                MOV     R7,A
023F 900000      R     MOV     DPTR,#cur_ep
0242 E0                MOVX    A,@DPTR
0243 FE                MOV     R6,A
0244 EE                MOV     A,R6
0245 75F00B            MOV     B,#0BH
0248 A4                MUL     AB
0249 2400        E     ADD     A,#LOW USBUART_1_EP+04H
024B F582              MOV     DPL,A
024D E4                CLR     A
024E 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
0250 F583              MOV     DPH,A
0252 EF                MOV     A,R7
0253 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 793
0254 900000      R     MOV     DPTR,#pEP
0257 E0                MOVX    A,@DPTR
0258 FE                MOV     R6,A
0259 A3                INC     DPTR
025A E0                MOVX    A,@DPTR
025B FF                MOV     R7,A
025C 8F82              MOV     DPL,R7
025E 8E83              MOV     DPH,R6
0260 7403              MOV     A,#03H
0262 93                MOVC    A,@A+DPTR
0263 FF                MOV     R7,A
0264 900000      R     MOV     DPTR,#cur_ep
0267 E0                MOVX    A,@DPTR
0268 FE                MOV     R6,A
0269 EE                MOV     A,R6
026A 75F00B            MOV     B,#0BH
026D A4                MUL     AB
026E 2400        E     ADD     A,#LOW USBUART_1_EP
0270 F582              MOV     DPL,A
0272 E4                CLR     A
0273 3400        E     ADDC    A,#HIGH USBUART_1_EP
0275 F583              MOV     DPH,A
0277 EF                MOV     A,R7
0278 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 796
0279 900000      R     MOV     DPTR,#cur_ep
027C E0                MOVX    A,@DPTR
027D FF                MOV     R7,A
027E EF                MOV     A,R7
027F 75F00B            MOV     B,#0BH
0282 A4                MUL     AB
0283 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0285 F582              MOV     DPL,A
0287 E4                CLR     A
0288 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
028A F583              MOV     DPH,A
028C E4                CLR     A
028D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 833
028E 900000      R     MOV     DPTR,#cur_ep
0291 E0                MOVX    A,@DPTR
0292 FF                MOV     R7,A
0293 EF                MOV     A,R7
0294 75F00B            MOV     B,#0BH
0297 A4                MUL     AB
0298 2400        E     ADD     A,#LOW USBUART_1_EP+08H
029A F582              MOV     DPL,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 68  

029C E4                CLR     A
029D 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
029F F583              MOV     DPH,A
02A1 E0                MOVX    A,@DPTR
02A2 FE                MOV     R6,A
02A3 A3                INC     DPTR
02A4 E0                MOVX    A,@DPTR
02A5 FF                MOV     R7,A
02A6 EE                MOV     A,R6
02A7 FF                MOV     R7,A
02A8 7E00              MOV     R6,#00H
02AA 900000      R     MOV     DPTR,#ri
02AD E0                MOVX    A,@DPTR
02AE FE                MOV     R6,A
02AF EE                MOV     A,R6
02B0 FD                MOV     R5,A
02B1 7C00              MOV     R4,#00H
02B3 ED                MOV     A,R5
02B4 240C              ADD     A,#0CH
02B6 FD                MOV     R5,A
02B7 EC                MOV     A,R4
02B8 3460              ADDC    A,#060H
02BA FC                MOV     R4,A
02BB 8D82              MOV     DPL,R5
02BD 8C83              MOV     DPH,R4
02BF EF                MOV     A,R7
02C0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 835
02C1 900000      R     MOV     DPTR,#cur_ep
02C4 E0                MOVX    A,@DPTR
02C5 FF                MOV     R7,A
02C6 EF                MOV     A,R7
02C7 75F00B            MOV     B,#0BH
02CA A4                MUL     AB
02CB 2400        E     ADD     A,#LOW USBUART_1_EP+08H
02CD F582              MOV     DPL,A
02CF E4                CLR     A
02D0 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
02D2 F583              MOV     DPH,A
02D4 E0                MOVX    A,@DPTR
02D5 FE                MOV     R6,A
02D6 A3                INC     DPTR
02D7 E0                MOVX    A,@DPTR
02D8 FF                MOV     R7,A
02D9 EF                MOV     A,R7
02DA 54FF              ANL     A,#0FFH
02DC FF                MOV     R7,A
02DD 900000      R     MOV     DPTR,#ri
02E0 E0                MOVX    A,@DPTR
02E1 FE                MOV     R6,A
02E2 EE                MOV     A,R6
02E3 FD                MOV     R5,A
02E4 7C00              MOV     R4,#00H
02E6 ED                MOV     A,R5
02E7 240D              ADD     A,#0DH
02E9 FD                MOV     R5,A
02EA EC                MOV     A,R4
02EB 3460              ADDC    A,#060H
02ED FC                MOV     R4,A
02EE 8D82              MOV     DPL,R5
02F0 8C83              MOV     DPH,R4
02F2 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 69  

02F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 837
02F4 900000      R     MOV     DPTR,#cur_ep
02F7 E0                MOVX    A,@DPTR
02F8 FF                MOV     R7,A
02F9 EF                MOV     A,R7
02FA 75F00B            MOV     B,#0BH
02FD A4                MUL     AB
02FE 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0300 F582              MOV     DPL,A
0302 E4                CLR     A
0303 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0305 F583              MOV     DPH,A
0307 E0                MOVX    A,@DPTR
0308 FE                MOV     R6,A
0309 A3                INC     DPTR
030A E0                MOVX    A,@DPTR
030B FF                MOV     R7,A
030C EF                MOV     A,R7
030D 54FF              ANL     A,#0FFH
030F FF                MOV     R7,A
0310 900000      R     MOV     DPTR,#ri
0313 E0                MOVX    A,@DPTR
0314 FE                MOV     R6,A
0315 EE                MOV     A,R6
0316 FD                MOV     R5,A
0317 7C00              MOV     R4,#00H
0319 ED                MOV     A,R5
031A 2486              ADD     A,#086H
031C FD                MOV     R5,A
031D EC                MOV     A,R4
031E 3460              ADDC    A,#060H
0320 FC                MOV     R4,A
0321 8D82              MOV     DPL,R5
0323 8C83              MOV     DPH,R4
0325 EF                MOV     A,R7
0326 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 839
0327 900000      R     MOV     DPTR,#cur_ep
032A E0                MOVX    A,@DPTR
032B FF                MOV     R7,A
032C EF                MOV     A,R7
032D 75F00B            MOV     B,#0BH
0330 A4                MUL     AB
0331 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0333 F582              MOV     DPL,A
0335 E4                CLR     A
0336 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0338 F583              MOV     DPH,A
033A E0                MOVX    A,@DPTR
033B FE                MOV     R6,A
033C A3                INC     DPTR
033D E0                MOVX    A,@DPTR
033E FF                MOV     R7,A
033F EE                MOV     A,R6
0340 FF                MOV     R7,A
0341 7E00              MOV     R6,#00H
0343 900000      R     MOV     DPTR,#ri
0346 E0                MOVX    A,@DPTR
0347 FE                MOV     R6,A
0348 EE                MOV     A,R6
0349 FD                MOV     R5,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 70  

034A 7C00              MOV     R4,#00H
034C ED                MOV     A,R5
034D 2487              ADD     A,#087H
034F FD                MOV     R5,A
0350 EC                MOV     A,R4
0351 3460              ADDC    A,#060H
0353 FC                MOV     R4,A
0354 8D82              MOV     DPL,R5
0356 8C83              MOV     DPH,R4
0358 EF                MOV     A,R7
0359 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 841
035A 900000      R     MOV     DPTR,#cur_ep
035D E0                MOVX    A,@DPTR
035E FF                MOV     R7,A
035F EF                MOV     A,R7
0360 75F00B            MOV     B,#0BH
0363 A4                MUL     AB
0364 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0366 F582              MOV     DPL,A
0368 E4                CLR     A
0369 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
036B F583              MOV     DPH,A
036D E0                MOVX    A,@DPTR
036E FE                MOV     R6,A
036F A3                INC     DPTR
0370 E0                MOVX    A,@DPTR
0371 FF                MOV     R7,A
0372 EF                MOV     A,R7
0373 54FF              ANL     A,#0FFH
0375 FF                MOV     R7,A
0376 900000      R     MOV     DPTR,#ri
0379 E0                MOVX    A,@DPTR
037A FE                MOV     R6,A
037B EE                MOV     A,R6
037C FD                MOV     R5,A
037D 7C00              MOV     R4,#00H
037F ED                MOV     A,R5
0380 2484              ADD     A,#084H
0382 FD                MOV     R5,A
0383 EC                MOV     A,R4
0384 3460              ADDC    A,#060H
0386 FC                MOV     R4,A
0387 8D82              MOV     DPL,R5
0389 8C83              MOV     DPH,R4
038B EF                MOV     A,R7
038C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 843
038D 900000      R     MOV     DPTR,#cur_ep
0390 E0                MOVX    A,@DPTR
0391 FF                MOV     R7,A
0392 EF                MOV     A,R7
0393 75F00B            MOV     B,#0BH
0396 A4                MUL     AB
0397 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0399 F582              MOV     DPL,A
039B E4                CLR     A
039C 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
039E F583              MOV     DPH,A
03A0 E0                MOVX    A,@DPTR
03A1 FE                MOV     R6,A
03A2 A3                INC     DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 71  

03A3 E0                MOVX    A,@DPTR
03A4 FF                MOV     R7,A
03A5 EE                MOV     A,R6
03A6 FF                MOV     R7,A
03A7 7E00              MOV     R6,#00H
03A9 900000      R     MOV     DPTR,#ri
03AC E0                MOVX    A,@DPTR
03AD FE                MOV     R6,A
03AE EE                MOV     A,R6
03AF FD                MOV     R5,A
03B0 7C00              MOV     R4,#00H
03B2 ED                MOV     A,R5
03B3 2485              ADD     A,#085H
03B5 FD                MOV     R5,A
03B6 EC                MOV     A,R4
03B7 3460              ADDC    A,#060H
03B9 FC                MOV     R4,A
03BA 8D82              MOV     DPL,R5
03BC 8C83              MOV     DPH,R4
03BE EF                MOV     A,R7
03BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 845
03C0         ?C0108:
                                           ; SOURCE LINE # 847
03C0 900000      R     MOV     DPTR,#pEP
03C3 E0                MOVX    A,@DPTR
03C4 FE                MOV     R6,A
03C5 A3                INC     DPTR
03C6 E0                MOVX    A,@DPTR
03C7 FF                MOV     R7,A
03C8 EF                MOV     A,R7
03C9 2407              ADD     A,#07H
03CB FF                MOV     R7,A
03CC EE                MOV     A,R6
03CD 3400              ADDC    A,#00H
03CF FE                MOV     R6,A
03D0 900000      R     MOV     DPTR,#pEP
03D3 EE                MOV     A,R6
03D4 F0                MOVX    @DPTR,A
03D5 A3                INC     DPTR
03D6 EF                MOV     A,R7
03D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 848
03D8 900000      R     MOV     DPTR,#i
03DB E0                MOVX    A,@DPTR
03DC 04                INC     A
03DD F0                MOVX    @DPTR,A
03DE 020000      R     LJMP    ?C0105
                                           ; SOURCE LINE # 849
                                           ; SOURCE LINE # 850
03E1         ?C0115:
03E1 22                RET     
             ; FUNCTION USBUART_1_ConfigAltChanged (END)

             ; FUNCTION _USBUART_1_GetConfigTablePtr (BEGIN)
                                           ; SOURCE LINE # 867
0000 900000      R     MOV     DPTR,#confIndex
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
                                           ; SOURCE LINE # 873
0005 900000      E     MOV     DPTR,#USBUART_1_device
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 72  

0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 25E0              ADD     A,ACC
000D 25E0              ADD     A,ACC
000F 2400        E     ADD     A,#LOW USBUART_1_TABLE+01H
0011 F582              MOV     DPL,A
0013 E4                CLR     A
0014 3400        E     ADDC    A,#HIGH USBUART_1_TABLE+01H
0016 F583              MOV     DPH,A
0018 120000      E     LCALL   ?C?PLDCODE
001B AE02              MOV     R6,AR2
001D AF01              MOV     R7,AR1
001F 900000      R     MOV     DPTR,#pTmp
0022 EE                MOV     A,R6
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 879
0027 900000      R     MOV     DPTR,#pTmp
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E FF                MOV     R7,A
002F EF                MOV     A,R7
0030 2404              ADD     A,#04H
0032 FF                MOV     R7,A
0033 EE                MOV     A,R6
0034 3400              ADDC    A,#00H
0036 FE                MOV     R6,A
0037 900000      R     MOV     DPTR,#pTmp
003A EE                MOV     A,R6
003B F0                MOVX    @DPTR,A
003C A3                INC     DPTR
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 881
003F 900000      R     MOV     DPTR,#pTmp
0042 E0                MOVX    A,@DPTR
0043 FE                MOV     R6,A
0044 A3                INC     DPTR
0045 E0                MOVX    A,@DPTR
0046 FF                MOV     R7,A
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B E4                CLR     A
004C 93                MOVC    A,@A+DPTR
004D FF                MOV     R7,A
004E 900000      R     MOV     DPTR,#confIndex
0051 E0                MOVX    A,@DPTR
0052 FE                MOV     R6,A
0053 EE                MOV     A,R6
0054 C3                CLR     C
0055 9F                SUBB    A,R7
0056 400A              JC      ?C0116
                                           ; SOURCE LINE # 882
                                           ; SOURCE LINE # 883
0058 900000      R     MOV     DPTR,#pTmp
005B E4                CLR     A
005C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 73  

005D A3                INC     DPTR
005E E4                CLR     A
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 884
0060 8030              SJMP    ?C0117
0062         ?C0116:
                                           ; SOURCE LINE # 886
                                           ; SOURCE LINE # 887
0062 900000      R     MOV     DPTR,#pTmp
0065 E0                MOVX    A,@DPTR
0066 FE                MOV     R6,A
0067 A3                INC     DPTR
0068 E0                MOVX    A,@DPTR
0069 FF                MOV     R7,A
006A 8F82              MOV     DPL,R7
006C 8E83              MOV     DPH,R6
006E C083              PUSH    DPH
0070 C082              PUSH    DPL
0072 900000      R     MOV     DPTR,#confIndex
0075 E0                MOVX    A,@DPTR
0076 FF                MOV     R7,A
0077 D082              POP     DPL
0079 D083              POP     DPH
007B 75F004            MOV     B,#04H
007E EF                MOV     A,R7
007F 120000      E     LCALL   ?C?OFFXADD
0082 A3                INC     DPTR
0083 120000      E     LCALL   ?C?PLDCODE
0086 AE02              MOV     R6,AR2
0088 AF01              MOV     R7,AR1
008A 900000      R     MOV     DPTR,#pTmp
008D EE                MOV     A,R6
008E F0                MOVX    @DPTR,A
008F A3                INC     DPTR
0090 EF                MOV     A,R7
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 888
0092         ?C0117:
                                           ; SOURCE LINE # 890
0092 900000      R     MOV     DPTR,#pTmp
0095 E0                MOVX    A,@DPTR
0096 FE                MOV     R6,A
0097 A3                INC     DPTR
0098 E0                MOVX    A,@DPTR
0099 FF                MOV     R7,A
                                           ; SOURCE LINE # 891
009A         ?C0118:
009A 22                RET     
             ; FUNCTION _USBUART_1_GetConfigTablePtr (END)

             ; FUNCTION USBUART_1_GetDeviceTablePtr (BEGIN)
                                           ; SOURCE LINE # 908
                                           ; SOURCE LINE # 910
                                           ; SOURCE LINE # 912
0000 900000      E     MOV     DPTR,#USBUART_1_device
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 25E0              ADD     A,ACC
0008 25E0              ADD     A,ACC
000A 2400        E     ADD     A,#LOW USBUART_1_TABLE+01H
000C F582              MOV     DPL,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 74  

000E E4                CLR     A
000F 3400        E     ADDC    A,#HIGH USBUART_1_TABLE+01H
0011 F583              MOV     DPH,A
0013 120000      E     LCALL   ?C?PLDCODE
0016 AE02              MOV     R6,AR2
0018 AF01              MOV     R7,AR1
                                           ; SOURCE LINE # 913
001A         ?C0119:
001A 22                RET     
             ; FUNCTION USBUART_1_GetDeviceTablePtr (END)

             ; FUNCTION USBUART_1_GetInterfaceClassTablePtr (BEGIN)
                                           ; SOURCE LINE # 931
                                           ; SOURCE LINE # 933
                                           ; SOURCE LINE # 938
0000 900000      E     MOV     DPTR,#USBUART_1_configuration
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 14                DEC     A
0007 FF                MOV     R7,A
0008 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
000B 900000      R     MOV     DPTR,#pTmp
000E EE                MOV     A,R6
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 939
0013 900000      R     MOV     DPTR,#pTmp
0016 E0                MOVX    A,@DPTR
0017 FE                MOV     R6,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C 4E                ORL     A,R6
001D 606F              JZ      ?C0120
                                           ; SOURCE LINE # 940
                                           ; SOURCE LINE # 941
001F 900000      R     MOV     DPTR,#pTmp
0022 E0                MOVX    A,@DPTR
0023 FE                MOV     R6,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 8F82              MOV     DPL,R7
0029 8E83              MOV     DPH,R6
002B A3                INC     DPTR
002C 120000      E     LCALL   ?C?PLDCODE
002F E9                MOV     A,R1
0030 2404              ADD     A,#04H
0032 F9                MOV     R1,A
0033 EA                MOV     A,R2
0034 3400              ADDC    A,#00H
0036 FA                MOV     R2,A
0037 120000      E     LCALL   ?C?CLDPTR
003A FF                MOV     R7,A
003B 900000      R     MOV     DPTR,#currentInterfacesNum
003E EF                MOV     A,R7
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 944
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 75  

0040 900000      R     MOV     DPTR,#currentInterfacesNum
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 7E00              MOV     R6,#00H
0047 EF                MOV     A,R7
0048 2402              ADD     A,#02H
004A FF                MOV     R7,A
004B EE                MOV     A,R6
004C 3400              ADDC    A,#00H
004E FE                MOV     R6,A
004F EF                MOV     A,R7
0050 7802              MOV     R0,#02H
0052         ?C0145:
0052 C3                CLR     C
0053 33                RLC     A
0054 CE                XCH     A,R6
0055 33                RLC     A
0056 CE                XCH     A,R6
0057 D8F9              DJNZ    R0,?C0145
0059 FF                MOV     R7,A
005A 900000      R     MOV     DPTR,#pTmp
005D E0                MOVX    A,@DPTR
005E FC                MOV     R4,A
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 FD                MOV     R5,A
0062 EF                MOV     A,R7
0063 2D                ADD     A,R5
0064 FF                MOV     R7,A
0065 EE                MOV     A,R6
0066 3C                ADDC    A,R4
0067 FE                MOV     R6,A
0068 900000      R     MOV     DPTR,#pTmp
006B EE                MOV     A,R6
006C F0                MOVX    @DPTR,A
006D A3                INC     DPTR
006E EF                MOV     A,R7
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 945
0070 900000      R     MOV     DPTR,#pTmp
0073 E0                MOVX    A,@DPTR
0074 FE                MOV     R6,A
0075 A3                INC     DPTR
0076 E0                MOVX    A,@DPTR
0077 FF                MOV     R7,A
0078 8F82              MOV     DPL,R7
007A 8E83              MOV     DPH,R6
007C A3                INC     DPTR
007D 120000      E     LCALL   ?C?PLDCODE
0080 AE02              MOV     R6,AR2
0082 AF01              MOV     R7,AR1
0084 900000      R     MOV     DPTR,#pInterfaceClass
0087 EE                MOV     A,R6
0088 F0                MOVX    @DPTR,A
0089 A3                INC     DPTR
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 946
008C 8008              SJMP    ?C0121
008E         ?C0120:
                                           ; SOURCE LINE # 948
                                           ; SOURCE LINE # 949
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 76  

008E 900000      R     MOV     DPTR,#pInterfaceClass
0091 E4                CLR     A
0092 F0                MOVX    @DPTR,A
0093 A3                INC     DPTR
0094 E4                CLR     A
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 950
0096         ?C0121:
                                           ; SOURCE LINE # 952
0096 900000      R     MOV     DPTR,#pInterfaceClass
0099 E0                MOVX    A,@DPTR
009A FE                MOV     R6,A
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D FF                MOV     R7,A
                                           ; SOURCE LINE # 953
009E         ?C0122:
009E 22                RET     
             ; FUNCTION USBUART_1_GetInterfaceClassTablePtr (END)

             ; FUNCTION _USBUART_1_TerminateEP (BEGIN)
                                           ; SOURCE LINE # 974
0000 900000      R     MOV     DPTR,#ep
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 975
                                           ; SOURCE LINE # 978
0005 900000      R     MOV     DPTR,#ep
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 547F              ANL     A,#07FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#ep
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 979
0013 900000      R     MOV     DPTR,#ep
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A EF                MOV     A,R7
001B 24FF              ADD     A,#0FFH
001D FF                MOV     R7,A
001E EE                MOV     A,R6
001F 34FF              ADDC    A,#0FFH
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 C4                SWAP    A
0024 F8                MOV     R0,A
0025 540F              ANL     A,#0FH
0027 C8                XCH     A,R0
0028 68                XRL     A,R0
0029 FF                MOV     R7,A
002A EE                MOV     A,R6
002B C4                SWAP    A
002C 54F0              ANL     A,#0F0H
002E 48                ORL     A,R0
002F FE                MOV     R6,A
0030 900000      R     MOV     DPTR,#ri
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 77  

                                           ; SOURCE LINE # 981
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B D3                SETB    C
003C 9400              SUBB    A,#00H
003E 5003              JNC     $ + 5H
0040 020000      R     LJMP    ?C0126
0043 900000      R     MOV     DPTR,#ep
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 C3                CLR     C
004A 9409              SUBB    A,#09H
004C 4003              JC      $ + 5H
004E 020000      R     LJMP    ?C0126
                                           ; SOURCE LINE # 982
                                           ; SOURCE LINE # 984
0051 900000      R     MOV     DPTR,#ep
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 75F00B            MOV     B,#0BH
005A A4                MUL     AB
005B 2400        E     ADD     A,#LOW USBUART_1_EP+02H
005D F582              MOV     DPL,A
005F E4                CLR     A
0060 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0062 F583              MOV     DPH,A
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 4401              ORL     A,#01H
0069 FF                MOV     R7,A
006A EF                MOV     A,R7
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 987
006C 900000      R     MOV     DPTR,#ep
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
0072 75F00B            MOV     B,#0BH
0075 A4                MUL     AB
0076 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0078 F582              MOV     DPL,A
007A E4                CLR     A
007B 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
007D F583              MOV     DPH,A
007F E4                CLR     A
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 988
0081 900000      R     MOV     DPTR,#ep
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
0086 EF                MOV     A,R7
0087 75F00B            MOV     B,#0BH
008A A4                MUL     AB
008B 2400        E     ADD     A,#LOW USBUART_1_EP+01H
008D F582              MOV     DPL,A
008F E4                CLR     A
0090 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 78  

0092 F583              MOV     DPH,A
0094 7402              MOV     A,#02H
0096 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 990
0097 900000      R     MOV     DPTR,#ep
009A E0                MOVX    A,@DPTR
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 75F00B            MOV     B,#0BH
00A0 A4                MUL     AB
00A1 2400        E     ADD     A,#LOW USBUART_1_EP+04H
00A3 F582              MOV     DPL,A
00A5 E4                CLR     A
00A6 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
00A8 F583              MOV     DPH,A
00AA E0                MOVX    A,@DPTR
00AB FF                MOV     R7,A
00AC EF                MOV     A,R7
00AD 5480              ANL     A,#080H
00AF FF                MOV     R7,A
00B0 7E00              MOV     R6,#00H
00B2 EF                MOV     A,R7
00B3 4E                ORL     A,R6
00B4 6017              JZ      ?C0124
                                           ; SOURCE LINE # 991
                                           ; SOURCE LINE # 993
00B6 900000      R     MOV     DPTR,#ri
00B9 E0                MOVX    A,@DPTR
00BA FF                MOV     R7,A
00BB 7E00              MOV     R6,#00H
00BD EF                MOV     A,R7
00BE 240E              ADD     A,#0EH
00C0 FF                MOV     R7,A
00C1 EE                MOV     A,R6
00C2 3460              ADDC    A,#060H
00C4 FE                MOV     R6,A
00C5 8F82              MOV     DPL,R7
00C7 8E83              MOV     DPH,R6
00C9 740C              MOV     A,#0CH
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 994
00CC 22                RET     
00CD         ?C0124:
                                           ; SOURCE LINE # 996
                                           ; SOURCE LINE # 998
00CD 900000      R     MOV     DPTR,#ri
00D0 E0                MOVX    A,@DPTR
00D1 FF                MOV     R7,A
00D2 7E00              MOV     R6,#00H
00D4 EF                MOV     A,R7
00D5 240E              ADD     A,#0EH
00D7 FF                MOV     R7,A
00D8 EE                MOV     A,R6
00D9 3460              ADDC    A,#060H
00DB FE                MOV     R6,A
00DC 8F82              MOV     DPL,R7
00DE 8E83              MOV     DPH,R6
00E0 7408              MOV     A,#08H
00E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 999
                                           ; SOURCE LINE # 1000
                                           ; SOURCE LINE # 1001
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 79  

00E3         ?C0126:
00E3 22                RET     
             ; FUNCTION _USBUART_1_TerminateEP (END)

             ; FUNCTION USBUART_1_SetEndpointHalt (BEGIN)
                                           ; SOURCE LINE # 1021
                                           ; SOURCE LINE # 1022
                                           ; SOURCE LINE # 1025
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1028
0005 906004            MOV     DPTR,#06004H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 547F              ANL     A,#07FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#ep
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1029
0013 900000      R     MOV     DPTR,#ep
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A EF                MOV     A,R7
001B 24FF              ADD     A,#0FFH
001D FF                MOV     R7,A
001E EE                MOV     A,R6
001F 34FF              ADDC    A,#0FFH
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 C4                SWAP    A
0024 F8                MOV     R0,A
0025 540F              ANL     A,#0FH
0027 C8                XCH     A,R0
0028 68                XRL     A,R0
0029 FF                MOV     R7,A
002A EE                MOV     A,R6
002B C4                SWAP    A
002C 54F0              ANL     A,#0F0H
002E 48                ORL     A,R0
002F FE                MOV     R6,A
0030 900000      R     MOV     DPTR,#ri
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1031
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B D3                SETB    C
003C 9400              SUBB    A,#00H
003E 5003              JNC     $ + 5H
0040 020000      R     LJMP    ?C0127
0043 900000      R     MOV     DPTR,#ep
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 C3                CLR     C
004A 9409              SUBB    A,#09H
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 80  

004C 4003              JC      $ + 5H
004E 020000      R     LJMP    ?C0127
                                           ; SOURCE LINE # 1032
                                           ; SOURCE LINE # 1034
0051 900000      R     MOV     DPTR,#ep
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 75F00B            MOV     B,#0BH
005A A4                MUL     AB
005B 2400        E     ADD     A,#LOW USBUART_1_EP+02H
005D F582              MOV     DPL,A
005F E4                CLR     A
0060 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0062 F583              MOV     DPH,A
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 4401              ORL     A,#01H
0069 FF                MOV     R7,A
006A EF                MOV     A,R7
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1037
006C 900000      R     MOV     DPTR,#ep
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
0072 75F00B            MOV     B,#0BH
0075 A4                MUL     AB
0076 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0078 F582              MOV     DPL,A
007A E4                CLR     A
007B 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
007D F583              MOV     DPH,A
007F E4                CLR     A
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1038
0081 900000      R     MOV     DPTR,#ep
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
0086 EF                MOV     A,R7
0087 75F00B            MOV     B,#0BH
008A A4                MUL     AB
008B 2400        E     ADD     A,#LOW USBUART_1_EP+01H
008D F582              MOV     DPL,A
008F E4                CLR     A
0090 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0092 F583              MOV     DPH,A
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 4402              ORL     A,#02H
0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1040
009C 900000      R     MOV     DPTR,#ep
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 75F00B            MOV     B,#0BH
00A5 A4                MUL     AB
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 81  

00A6 2400        E     ADD     A,#LOW USBUART_1_EP+04H
00A8 F582              MOV     DPL,A
00AA E4                CLR     A
00AB 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
00AD F583              MOV     DPH,A
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 5480              ANL     A,#080H
00B4 FF                MOV     R7,A
00B5 7E00              MOV     R6,#00H
00B7 EF                MOV     A,R7
00B8 4E                ORL     A,R6
00B9 6018              JZ      ?C0128
                                           ; SOURCE LINE # 1041
                                           ; SOURCE LINE # 1044
00BB 900000      R     MOV     DPTR,#ri
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 7E00              MOV     R6,#00H
00C2 EF                MOV     A,R7
00C3 240E              ADD     A,#0EH
00C5 FF                MOV     R7,A
00C6 EE                MOV     A,R6
00C7 3460              ADDC    A,#060H
00C9 FE                MOV     R6,A
00CA 8F82              MOV     DPL,R7
00CC 8E83              MOV     DPH,R6
00CE 748D              MOV     A,#08DH
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1045
00D1 8016              SJMP    ?C0129
00D3         ?C0128:
                                           ; SOURCE LINE # 1047
                                           ; SOURCE LINE # 1050
00D3 900000      R     MOV     DPTR,#ri
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 7E00              MOV     R6,#00H
00DA EF                MOV     A,R7
00DB 240E              ADD     A,#0EH
00DD FF                MOV     R7,A
00DE EE                MOV     A,R6
00DF 3460              ADDC    A,#060H
00E1 FE                MOV     R6,A
00E2 8F82              MOV     DPL,R7
00E4 8E83              MOV     DPH,R6
00E6 7489              MOV     A,#089H
00E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1051
00E9         ?C0129:
                                           ; SOURCE LINE # 1052
00E9 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
00EC 900000      R     MOV     DPTR,#requestHandled
00EF EF                MOV     A,R7
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1053
00F1         ?C0127:
                                           ; SOURCE LINE # 1055
00F1 900000      R     MOV     DPTR,#requestHandled
00F4 E0                MOVX    A,@DPTR
00F5 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 82  

                                           ; SOURCE LINE # 1056
00F6         ?C0130:
00F6 22                RET     
             ; FUNCTION USBUART_1_SetEndpointHalt (END)

             ; FUNCTION USBUART_1_ClearEndpointHalt (BEGIN)
                                           ; SOURCE LINE # 1076
                                           ; SOURCE LINE # 1077
                                           ; SOURCE LINE # 1080
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1083
0005 906004            MOV     DPTR,#06004H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 547F              ANL     A,#07FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#ep
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1084
0013 900000      R     MOV     DPTR,#ep
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A EF                MOV     A,R7
001B 24FF              ADD     A,#0FFH
001D FF                MOV     R7,A
001E EE                MOV     A,R6
001F 34FF              ADDC    A,#0FFH
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 C4                SWAP    A
0024 F8                MOV     R0,A
0025 540F              ANL     A,#0FH
0027 C8                XCH     A,R0
0028 68                XRL     A,R0
0029 FF                MOV     R7,A
002A EE                MOV     A,R6
002B C4                SWAP    A
002C 54F0              ANL     A,#0F0H
002E 48                ORL     A,R0
002F FE                MOV     R6,A
0030 900000      R     MOV     DPTR,#ri
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1086
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B D3                SETB    C
003C 9400              SUBB    A,#00H
003E 5003              JNC     $ + 5H
0040 020000      R     LJMP    ?C0131
0043 900000      R     MOV     DPTR,#ep
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 C3                CLR     C
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 83  

004A 9409              SUBB    A,#09H
004C 4003              JC      $ + 5H
004E 020000      R     LJMP    ?C0131
                                           ; SOURCE LINE # 1087
                                           ; SOURCE LINE # 1089
0051 900000      R     MOV     DPTR,#ep
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 75F00B            MOV     B,#0BH
005A A4                MUL     AB
005B 2400        E     ADD     A,#LOW USBUART_1_EP+02H
005D F582              MOV     DPL,A
005F E4                CLR     A
0060 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0062 F583              MOV     DPH,A
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 54FE              ANL     A,#0FEH
0069 FF                MOV     R7,A
006A EF                MOV     A,R7
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1092
006C 900000      R     MOV     DPTR,#ep
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
0072 75F00B            MOV     B,#0BH
0075 A4                MUL     AB
0076 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0078 F582              MOV     DPL,A
007A E4                CLR     A
007B 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
007D F583              MOV     DPH,A
007F E4                CLR     A
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1095
0081 900000      R     MOV     DPTR,#ri
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
0086 7E00              MOV     R6,#00H
0088 EF                MOV     A,R7
0089 240C              ADD     A,#0CH
008B FF                MOV     R7,A
008C EE                MOV     A,R6
008D 3460              ADDC    A,#060H
008F FE                MOV     R6,A
0090 8F82              MOV     DPL,R7
0092 8E83              MOV     DPH,R6
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 547F              ANL     A,#07FH
0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1097
009C 900000      R     MOV     DPTR,#ep
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 84  

00A2 75F00B            MOV     B,#0BH
00A5 A4                MUL     AB
00A6 2400        E     ADD     A,#LOW USBUART_1_EP+01H
00A8 F582              MOV     DPL,A
00AA E4                CLR     A
00AB 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
00AD F583              MOV     DPH,A
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 54FD              ANL     A,#0FDH
00B4 FF                MOV     R7,A
00B5 EF                MOV     A,R7
00B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1099
00B7 900000      R     MOV     DPTR,#ep
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 75F00B            MOV     B,#0BH
00C0 A4                MUL     AB
00C1 2400        E     ADD     A,#LOW USBUART_1_EP+04H
00C3 F582              MOV     DPL,A
00C5 E4                CLR     A
00C6 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
00C8 F583              MOV     DPH,A
00CA E0                MOVX    A,@DPTR
00CB FF                MOV     R7,A
00CC EF                MOV     A,R7
00CD 5480              ANL     A,#080H
00CF FF                MOV     R7,A
00D0 7E00              MOV     R6,#00H
00D2 EF                MOV     A,R7
00D3 4E                ORL     A,R6
00D4 6049              JZ      ?C0132
                                           ; SOURCE LINE # 1100
                                           ; SOURCE LINE # 1102
00D6 900000      R     MOV     DPTR,#ep
00D9 E0                MOVX    A,@DPTR
00DA FF                MOV     R7,A
00DB EF                MOV     A,R7
00DC 75F00B            MOV     B,#0BH
00DF A4                MUL     AB
00E0 2400        E     ADD     A,#LOW USBUART_1_EP+01H
00E2 F582              MOV     DPL,A
00E4 E4                CLR     A
00E5 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
00E7 F583              MOV     DPH,A
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB EF                MOV     A,R7
00EC B40118            CJNE    A,#01H,?C0133
                                           ; SOURCE LINE # 1103
                                           ; SOURCE LINE # 1104
00EF 900000      R     MOV     DPTR,#ri
00F2 E0                MOVX    A,@DPTR
00F3 FF                MOV     R7,A
00F4 7E00              MOV     R6,#00H
00F6 EF                MOV     A,R7
00F7 240E              ADD     A,#0EH
00F9 FF                MOV     R7,A
00FA EE                MOV     A,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 85  

00FB 3460              ADDC    A,#060H
00FD FE                MOV     R6,A
00FE 8F82              MOV     DPL,R7
0100 8E83              MOV     DPH,R6
0102 740C              MOV     A,#0CH
0104 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1105
0105 805F              SJMP    ?C0135
0107         ?C0133:
                                           ; SOURCE LINE # 1107
                                           ; SOURCE LINE # 1108
0107 900000      R     MOV     DPTR,#ri
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 7E00              MOV     R6,#00H
010E EF                MOV     A,R7
010F 240E              ADD     A,#0EH
0111 FF                MOV     R7,A
0112 EE                MOV     A,R6
0113 3460              ADDC    A,#060H
0115 FE                MOV     R6,A
0116 8F82              MOV     DPL,R7
0118 8E83              MOV     DPH,R6
011A 740D              MOV     A,#0DH
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1109
                                           ; SOURCE LINE # 1110
011D 8047              SJMP    ?C0135
011F         ?C0132:
                                           ; SOURCE LINE # 1112
                                           ; SOURCE LINE # 1114
011F 900000      R     MOV     DPTR,#ep
0122 E0                MOVX    A,@DPTR
0123 FF                MOV     R7,A
0124 EF                MOV     A,R7
0125 75F00B            MOV     B,#0BH
0128 A4                MUL     AB
0129 2400        E     ADD     A,#LOW USBUART_1_EP+01H
012B F582              MOV     DPL,A
012D E4                CLR     A
012E 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0130 F583              MOV     DPH,A
0132 E0                MOVX    A,@DPTR
0133 FF                MOV     R7,A
0134 EF                MOV     A,R7
0135 B40118            CJNE    A,#01H,?C0136
                                           ; SOURCE LINE # 1115
                                           ; SOURCE LINE # 1116
0138 900000      R     MOV     DPTR,#ri
013B E0                MOVX    A,@DPTR
013C FF                MOV     R7,A
013D 7E00              MOV     R6,#00H
013F EF                MOV     A,R7
0140 240E              ADD     A,#0EH
0142 FF                MOV     R7,A
0143 EE                MOV     A,R6
0144 3460              ADDC    A,#060H
0146 FE                MOV     R6,A
0147 8F82              MOV     DPL,R7
0149 8E83              MOV     DPH,R6
014B 7408              MOV     A,#08H
014D F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 86  

                                           ; SOURCE LINE # 1117
014E 8016              SJMP    ?C0135
0150         ?C0136:
                                           ; SOURCE LINE # 1119
                                           ; SOURCE LINE # 1120
0150 900000      R     MOV     DPTR,#ri
0153 E0                MOVX    A,@DPTR
0154 FF                MOV     R7,A
0155 7E00              MOV     R6,#00H
0157 EF                MOV     A,R7
0158 240E              ADD     A,#0EH
015A FF                MOV     R7,A
015B EE                MOV     A,R6
015C 3460              ADDC    A,#060H
015E FE                MOV     R6,A
015F 8F82              MOV     DPL,R7
0161 8E83              MOV     DPH,R6
0163 7409              MOV     A,#09H
0165 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1121
                                           ; SOURCE LINE # 1122
0166         ?C0135:
                                           ; SOURCE LINE # 1123
0166 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
0169 900000      R     MOV     DPTR,#requestHandled
016C EF                MOV     A,R7
016D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1124
016E         ?C0131:
                                           ; SOURCE LINE # 1126
016E 900000      R     MOV     DPTR,#requestHandled
0171 E0                MOVX    A,@DPTR
0172 FF                MOV     R7,A
                                           ; SOURCE LINE # 1127
0173         ?C0138:
0173 22                RET     
             ; FUNCTION USBUART_1_ClearEndpointHalt (END)

             ; FUNCTION USBUART_1_ValidateAlternateSetting (BEGIN)
                                           ; SOURCE LINE # 1147
                                           ; SOURCE LINE # 1148
                                           ; SOURCE LINE # 1149
0000 900000      R     MOV     DPTR,#requestHandled
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1154
0006 906004            MOV     DPTR,#06004H
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 900000      R     MOV     DPTR,#interfaceNum
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1156
0010 900000      E     MOV     DPTR,#USBUART_1_configuration
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 14                DEC     A
0017 FF                MOV     R7,A
0018 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
001B 900000      R     MOV     DPTR,#pTmp
001E EE                MOV     A,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 87  

001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1157
0023 900000      R     MOV     DPTR,#pTmp
0026 E0                MOVX    A,@DPTR
0027 FE                MOV     R6,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 8F82              MOV     DPL,R7
002D 8E83              MOV     DPH,R6
002F A3                INC     DPTR
0030 120000      E     LCALL   ?C?PLDCODE
0033 E9                MOV     A,R1
0034 2404              ADD     A,#04H
0036 F9                MOV     R1,A
0037 EA                MOV     A,R2
0038 3400              ADDC    A,#00H
003A FA                MOV     R2,A
003B 120000      E     LCALL   ?C?CLDPTR
003E FF                MOV     R7,A
003F 900000      R     MOV     DPTR,#currentInterfacesNum
0042 EF                MOV     A,R7
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1159
0044 900000      R     MOV     DPTR,#currentInterfacesNum
0047 E0                MOVX    A,@DPTR
0048 FF                MOV     R7,A
0049 900000      R     MOV     DPTR,#interfaceNum
004C E0                MOVX    A,@DPTR
004D FE                MOV     R6,A
004E EE                MOV     A,R6
004F C3                CLR     C
0050 9F                SUBB    A,R7
0051 500B              JNC     ?C0140
0053 900000      R     MOV     DPTR,#interfaceNum
0056 E0                MOVX    A,@DPTR
0057 FF                MOV     R7,A
0058 EF                MOV     A,R7
0059 C3                CLR     C
005A 9402              SUBB    A,#02H
005C 4007              JC      ?C0139
005E         ?C0140:
                                           ; SOURCE LINE # 1160
                                           ; SOURCE LINE # 1161
005E 900000      R     MOV     DPTR,#requestHandled
0061 E4                CLR     A
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1162
0063 8038              SJMP    ?C0141
0065         ?C0139:
                                           ; SOURCE LINE # 1164
                                           ; SOURCE LINE # 1166
0065 900000      R     MOV     DPTR,#interfaceNum
0068 E0                MOVX    A,@DPTR
0069 FF                MOV     R7,A
006A 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
006C 2F                ADD     A,R7
006D F582              MOV     DPL,A
006F E4                CLR     A
C51 COMPILER V9.51   USBUART_1_STD                                                         09/04/2014 17:45:48 PAGE 88  

0070 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0072 F583              MOV     DPH,A
0074 E0                MOVX    A,@DPTR
0075 FF                MOV     R7,A
0076 900000      R     MOV     DPTR,#interfaceNum
0079 E0                MOVX    A,@DPTR
007A FE                MOV     R6,A
007B 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
007D 2E                ADD     A,R6
007E F582              MOV     DPL,A
0080 E4                CLR     A
0081 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
0083 F583              MOV     DPH,A
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1167
0087 906002            MOV     DPTR,#06002H
008A E0                MOVX    A,@DPTR
008B FF                MOV     R7,A
008C 900000      R     MOV     DPTR,#interfaceNum
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
0093 2E                ADD     A,R6
0094 F582              MOV     DPL,A
0096 E4                CLR     A
0097 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0099 F583              MOV     DPH,A
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1168
009D         ?C0141:
                                           ; SOURCE LINE # 1170
009D 900000      R     MOV     DPTR,#requestHandled
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
                                           ; SOURCE LINE # 1171
00A2         ?C0142:
00A2 22                RET     
             ; FUNCTION USBUART_1_ValidateAlternateSetting (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5676    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =      2      62
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
