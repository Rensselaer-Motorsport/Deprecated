C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYPM
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\cyPm.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyPm.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\cyPm.lst) CD DB NOIP OT(2,SIZE) 
                    -INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\cyPm.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyPm.c
   3          * Version 4.10
   4          *
   5          * Description:
   6          *  Provides an API for the power management.
   7          *
   8          * Note:
   9          *  Documentation of the API's in this file is located in the
  10          *  System Reference Guide provided with PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions,
  15          * disclaimers, and limitations in the end user license agreement accompanying
  16          * the software package with which this file was provided.
  17          *******************************************************************************/
  18          
  19          #include "cyPm.h"
  20          
  21          
  22          /*******************************************************************
  23          * Place your includes, defines, and code here. Do not use the merge
  24          * region below unless any component datasheet suggests doing so.
  25          *******************************************************************/
  26          /* `#START CY_PM_HEADER_INCLUDE` */
  27          
  28          /* `#END` */
  29          
  30          
  31          static CY_PM_BACKUP_STRUCT          cyPmBackup;
  32          static CY_PM_CLOCK_BACKUP_STRUCT    cyPmClockBackup;
  33          
  34          /* Convertion table between register's values and frequency in MHz  */
  35          static const uint8 CYCODE cyPmImoFreqReg2Mhz[7u] = {12u, 6u, 24u, 3u, 48u, 62u, 74u};
  36          
  37          /* Function Prototypes */
  38          static void CyPmHibSaveSet(void);
  39          static void CyPmHibRestore(void) ;
  40          
  41          static void CyPmHibSlpSaveSet(void) ;
  42          static void CyPmHibSlpRestore(void) ;
  43          
  44          static void CyPmHviLviSaveDisable(void) ;
  45          static void CyPmHviLviRestore(void) ;
  46          
  47          
  48          /*******************************************************************************
  49          * Function Name: CyPmSaveClocks
  50          ********************************************************************************
  51          *
  52          * Summary:
  53          *  This function is called in preparation for entering sleep or hibernate low
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 2   

  54          *  power modes. Saves all the states of the clocking system that do not persist
  55          *  during sleep/hibernate or that need to be altered in preparation for
  56          *  sleep/hibernate. Shutdowns all the digital and analog clock dividers for the
  57          *  active power mode configuration.
  58          *
  59          *  Switches the master clock over to the IMO and shuts down the PLL and MHz
  60          *  Crystal. The IMO frequency is set to either 12 MHz or 48 MHz to match the
  61          *  Design-Wide Resources System Editor "Enable Fast IMO During Startup" setting.
  62          *  The ILO and 32 KHz oscillators are not impacted. The current Flash wait state
  63          *  setting is saved and the Flash wait state setting is set for the current IMO
  64          *  speed.
  65          *
  66          *  Note If the Master Clock source is routed through the DSI inputs, then it
  67          *  must be set manually to another source before using the
  68          *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
  69          *
  70          * Parameters:
  71          *  None
  72          *
  73          * Return:
  74          *  None
  75          *
  76          * Side Effects:
  77          *  All peripheral clocks are going to be off after this API method call.
  78          *
  79          *******************************************************************************/
  80          void CyPmSaveClocks(void) 
  81          {
  82   1          /* Digital and analog clocks - save enable state and disable them all */
  83   1          cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
  84   1          cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
  85   1          CY_PM_ACT_CFG1_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_A_MASK));
  86   1          CY_PM_ACT_CFG2_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_D_MASK));
  87   1      
  88   1          /* Save current flash wait cycles and set the maximum value */
  89   1          cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
  90   1          CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
  91   1      
  92   1          /* IMO - save current IMO MHz OSC frequency and USB mode is on bit */
  93   1          cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
  94   1          cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
  95   1      
  96   1          /* IMO doubler - save enable state */
  97   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
  98   1          {
  99   2              /* IMO doubler enabled - save and disable */
 100   2              cyPmClockBackup.imo2x = CY_PM_ENABLED;
 101   2          }
 102   1          else
 103   1          {
 104   2              /* IMO doubler disabled */
 105   2              cyPmClockBackup.imo2x = CY_PM_DISABLED;
 106   2          }
 107   1      
 108   1          /* Master clock - save source */
 109   1          cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 110   1      
 111   1          /* Switch Master clock's source from PLL's output to PLL's source */
 112   1          if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 113   1          {
 114   2              switch (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_PLL_SRC_MASK)
 115   2              {
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 3   

 116   3              case CY_PM_CLKDIST_PLL_SRC_IMO:
 117   3                  CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 118   3                  break;
 119   3      
 120   3              case CY_PM_CLKDIST_PLL_SRC_XTAL:
 121   3                  CyMasterClk_SetSource(CY_MASTER_SOURCE_XTAL);
 122   3                  break;
 123   3      
 124   3              case CY_PM_CLKDIST_PLL_SRC_DSI:
 125   3                  CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 126   3                  break;
 127   3      
 128   3              default:
 129   3                  CYASSERT(0u != 0u);
 130   3                  break;
 131   3              }
 132   2          }
 133   1      
 134   1          /* PLL - check enable state, disable if needed */
 135   1          if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 136   1          {
 137   2              /* PLL is enabled - save state and disable */
 138   2              cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 139   2              CyPLL_OUT_Stop();
 140   2          }
 141   1          else
 142   1          {
 143   2              /* PLL is disabled - save state */
 144   2              cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 145   2          }
 146   1      
 147   1          /* IMO - set appropriate frequency for LPM */
 148   1          CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 149   1      
 150   1          /* IMO - save enable state and enable without wait to settle */
 151   1          if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 152   1          {
 153   2              /* IMO - save enabled state */
 154   2              cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 155   2          }
 156   1          else
 157   1          {
 158   2              /* IMO - save disabled state */
 159   2              cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 160   2      
 161   2              /* Enable the IMO. Use software delay instead of the FTW-based inside */
 162   2              CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 163   2      
 164   2              /* Settling time of the IMO is of the order of less than 6us */
 165   2              CyDelayUs(6u);
 166   2          }
 167   1      
 168   1          /* IMO - save the current IMOCLK source and set to IMO if not yet */
 169   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 170   1          {
 171   2              /* DSI or XTAL CLK */
 172   2              cyPmClockBackup.imoClkSrc =
 173   2                  (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_SOURCE_X
             -TAL;
 174   2      
 175   2              /* IMO -  set IMOCLK source to IMO */
 176   2              CyIMO_SetSource(CY_IMO_SOURCE_IMO);
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 4   

 177   2          }
 178   1          else
 179   1          {
 180   2              /* IMO */
 181   2              cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 182   2          }
 183   1      
 184   1          /* Save clk_imo source */
 185   1          cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 186   1      
 187   1          /* If IMOCLK2X or SPC OSC is source for clk_imo, set it to IMOCLK */
 188   1          if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 189   1          {
 190   2              /* Set IMOCLK to source for clk_imo */
 191   2              CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 192   2                                      CY_PM_CLKDIST_IMO_OUT_IMO;
 193   2          }    /* Need to change nothing if IMOCLK is source clk_imo */
 194   1      
 195   1          /* IMO doubler - disable it (saved above) */
 196   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 197   1          {
 198   2              CyIMO_DisableDoubler();
 199   2          }
 200   1      
 201   1          /* Master clock - save divider and set it to divide-by-one (if no yet) */
 202   1          cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 203   1          if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 204   1          {
 205   2              CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 206   2          }    /* No change if master clock divider is 1 */
 207   1      
 208   1          /* Master clock source - set it to IMO if not yet. */
 209   1          if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 210   1          {
 211   2              CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 212   2          }    /* No change if master clock source is IMO */
 213   1      
 214   1          /* Bus clock - save divider and set it, if needed, to divide-by-one */
 215   1          cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 216   1          cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 217   1          if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 218   1          {
 219   2              CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 220   2          }    /* Do nothing if saved and actual values are equal */
 221   1      
 222   1          /* Set number of wait cycles for flash according to CPU frequency in MHz */
 223   1          CyFlash_SetWaitCycles((uint8)CY_PM_GET_CPU_FREQ_MHZ);
 224   1      
 225   1          /* MHz ECO - check enable state and disable if needed */
 226   1          if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 227   1          {
 228   2              /* MHz ECO is enabled - save state and disable */
 229   2              cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 230   2              CyXTAL_Stop();
 231   2          }
 232   1          else
 233   1          {
 234   2              /* MHz ECO is disabled - save state */
 235   2              cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 236   2          }
 237   1      
 238   1      
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 5   

 239   1          /***************************************************************************
 240   1          * Save the enable state of delay between the system bus clock and each of the
 241   1          * 4 individual analog clocks. This bit non-retention and its value should
 242   1          * be restored on wakeup.
 243   1          ***************************************************************************/
 244   1          if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
 245   1          {
 246   2              cyPmClockBackup.clkDistDelay = CY_PM_ENABLED;
 247   2          }
 248   1          else
 249   1          {
 250   2              cyPmClockBackup.clkDistDelay = CY_PM_DISABLED;
 251   2          }
 252   1      }
 253          
 254          
 255          /*******************************************************************************
 256          * Function Name: CyPmRestoreClocks
 257          ********************************************************************************
 258          *
 259          * Summary:
 260          *  Restores any state that was preserved by the last call to CyPmSaveClocks().
 261          *  The Flash wait state setting is also restored.
 262          *
 263          *  Note If the Master Clock source is routed through the DSI inputs, then it
 264          *  must be set manually to another source before using the
 265          *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
 266          *
 267          *  PSoC 3 and PSoC 5LP:
 268          *  The merge region could be used to process state when the megahertz crystal is
 269          *  not ready after a hold-off timeout.
 270          *
 271          *  PSoC 5:
 272          *  The 130 ms is given for the megahertz crystal to stabilize. Its readiness is
 273          *  not verified after a hold-off timeout.
 274          *
 275          * Parameters:
 276          *  None
 277          *
 278          * Return:
 279          *  None
 280          *
 281          *******************************************************************************/
 282          void CyPmRestoreClocks(void) 
 283          {
 284   1          cystatus status = CYRET_TIMEOUT;
 285   1          uint16 i;
 286   1          uint16 clkBusDivTmp;
 287   1      
 288   1      
 289   1          /* Convertion table between CyIMO_SetFreq() parameters and register's value */
 290   1          const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 291   1              CY_IMO_FREQ_12MHZ, CY_IMO_FREQ_6MHZ,  CY_IMO_FREQ_24MHZ, CY_IMO_FREQ_3MHZ,
 292   1              CY_IMO_FREQ_48MHZ, 5u, 6u};
 293   1      
 294   1          /* Restore enable state of delay between system bus clock and ACLKs. */
 295   1          if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 296   1          {
 297   2              /* Delay for both bandgap and delay line to settle out */
 298   2              CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) *
 299   2                              CY_PM_GET_CPU_FREQ_MHZ);
 300   2      
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 6   

 301   2              CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
 302   2          }
 303   1      
 304   1          /* MHz ECO restore state */
 305   1          if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 306   1          {
 307   2              /***********************************************************************
 308   2              * Enabling XMHZ XTAL. The actual CyXTAL_Start() with a non zero wait
 309   2              * period uses FTW for period measurement. This could cause a problem
 310   2              * if CTW/FTW is used as a wake up time in the low power modes APIs.
 311   2              * So, the XTAL wait procedure is implemented with a software delay.
 312   2              ***********************************************************************/
 313   2      
 314   2              /* Enable XMHZ XTAL with no wait */
 315   2              (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 316   2      
 317   2              /* Read XERR bit to clear it */
 318   2              (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 319   2      
 320   2              /* Wait */
 321   2              for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 322   2              {
 323   3                  /* Make a 200 microseconds delay */
 324   3                  CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 325   3      
 326   3                  /* High output indicates oscillator failure */
 327   3                  if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 328   3                  {
 329   4                      status = CYRET_SUCCESS;
 330   4                      break;
 331   4                  }
 332   3              }
 333   2      
 334   2              if(CYRET_TIMEOUT == status)
 335   2              {
 336   3                  /*******************************************************************
 337   3                  * Process the situation when megahertz crystal is not ready.
 338   3                  * Time to stabilize the value is crystal specific.
 339   3                  *******************************************************************/
 340   3                 /* `#START_MHZ_ECO_TIMEOUT` */
 341   3      
 342   3                 /* `#END` */
 343   3              }
 344   2          }   /* (CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState) */
 345   1      
 346   1      
 347   1          /* Temprorary set maximum flash wait cycles */
 348   1          CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 349   1      
 350   1          /* XTAL and DSI clocks are ready to be source for Master clock. */
 351   1          if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 352   1             (CY_PM_MASTER_CLK_SRC_DSI  == cyPmClockBackup.masterClkSrc))
 353   1          {
 354   2              /* Restore Master clock's divider */
 355   2              if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 356   2              {
 357   3                  /* Restore Master clock divider */
 358   3                  CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 359   3              }
 360   2      
 361   2              /* Restore Master clock source */
 362   2              CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 7   

 363   2          }
 364   1      
 365   1          /* IMO - restore IMO frequency */
 366   1          if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 367   1              (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 368   1          {
 369   2              /* Restore IMO frequency (24 MHz) and trim it for USB */
 370   2              CyIMO_SetFreq(CY_IMO_FREQ_USB);
 371   2          }
 372   1          else
 373   1          {
 374   2              /* Restore IMO frequency */
 375   2              CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 376   2      
 377   2              if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 378   2              {
 379   3                  CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 380   3              }
 381   2              else
 382   2              {
 383   3                  CY_PM_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_PM_FASTCLK_IMO_CR_USB));
 384   3              }
 385   2          }
 386   1      
 387   1          /* IMO - restore enable state if needed */
 388   1          if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 389   1             (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 390   1          {
 391   2              /* IMO - restore enabled state */
 392   2              CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 393   2          }
 394   1      
 395   1          /* IMO - restore IMOCLK source */
 396   1          CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 397   1      
 398   1          /* Restore IMO doubler enable state (turned off by CyPmSaveClocks()) */
 399   1          if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 400   1          {
 401   2              CyIMO_EnableDoubler();
 402   2          }
 403   1      
 404   1          /* IMO - restore clk_imo source, if needed */
 405   1          if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 406   1          {
 407   2              CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 408   2                                      cyPmClockBackup.clkImoSrc;
 409   2          }
 410   1      
 411   1      
 412   1          /* PLL restore state */
 413   1          if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 414   1          {
 415   2              /***********************************************************************
 416   2              * Enable PLL. The actual CyPLL_OUT_Start() without wait period uses FTW
 417   2              * for period measurement. This could cause a problem if CTW/FTW is used
 418   2              * as a wakeup time in the low power modes APIs. To omit this issue PLL
 419   2              * wait procedure is implemented with a software delay.
 420   2              ***********************************************************************/
 421   2              status = CYRET_TIMEOUT;
 422   2      
 423   2              /* Enable PLL */
 424   2              (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 8   

 425   2      
 426   2              /* Read to clear lock status after delay */
 427   2              CyDelayUs((uint32)80u);
 428   2              (void) CY_PM_FASTCLK_PLL_SR_REG;
 429   2      
 430   2              /* It should take 250 us lock: 251-80 = 171 */
 431   2              for(i = 171u; i > 0u; i--)
 432   2              {
 433   3                  CyDelayUs((uint32)1u);
 434   3      
 435   3                  /* Accept PLL is OK after two consecutive polls indicate PLL lock */
 436   3                  if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 437   3                     (0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)))
 438   3                  {
 439   4                      status = CYRET_SUCCESS;
 440   4                      break;
 441   4                  }
 442   3              }
 443   2      
 444   2              if(CYRET_TIMEOUT == status)
 445   2              {
 446   3                  /*******************************************************************
 447   3                  * Process the situation when PLL is not ready.
 448   3                  *******************************************************************/
 449   3                 /* `#START_PLL_TIMEOUT` */
 450   3      
 451   3                 /* `#END` */
 452   3              }
 453   2          }   /* (CY_PM_ENABLED == cyPmClockBackup.pllEnableState) */
 454   1      
 455   1      
 456   1          /* PLL and IMO is ready to be source for Master clock */
 457   1          if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 458   1             (CY_PM_MASTER_CLK_SRC_PLL == cyPmClockBackup.masterClkSrc))
 459   1          {
 460   2              /* Restore Master clock divider */
 461   2              if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 462   2              {
 463   3                  CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 464   3              }
 465   2      
 466   2              /* Restore Master clock source */
 467   2              CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 468   2          }
 469   1      
 470   1          /* IMO - disable if it was originally disabled */
 471   1          if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 472   1             (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 473   1          {
 474   2              CyIMO_Stop();
 475   2          }
 476   1      
 477   1          /* Bus clock - restore divider, if needed */
 478   1          clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 479   1          clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 480   1          if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 481   1          {
 482   2              CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 483   2          }
 484   1      
 485   1          /* Restore flash wait cycles */
 486   1          CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 9   

 487   1                                 cyPmClockBackup.flashWaitCycles);
 488   1      
 489   1          /* Digital and analog clocks - restore state */
 490   1          CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 491   1          CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 492   1      }
 493          
 494          
 495          /*******************************************************************************
 496          * Function Name: CyPmAltAct
 497          ********************************************************************************
 498          *
 499          * Summary:
 500          *  Puts the part into the Alternate Active (Standby) state. The Alternate Active
 501          *  state can allow for any of the capabilities of the device to be active, but
 502          *  the operation of this function is dependent on the CPU being disabled during
 503          *  the Alternate Active state. The configuration code and the component APIs
 504          *  will configure the template for the Alternate Active state to be the same as
 505          *  the Active state with the exception that the CPU will be disabled during
 506          *  Alternate Active.
 507          *
 508          *  Note Before calling this function, you must manually configure the power mode
 509          *  of the source clocks for the timer that is used as the wakeup timer.
 510          *
 511          *  PSoC 3:
 512          *  Before switching to Alternate Active, if a wakeupTime other than NONE is
 513          *  specified, then the appropriate timer state is configured as specified with
 514          *  the interrupt for that timer disabled.  The wakeup source will be the
 515          *  combination of the values specified in the wakeupSource and any timer
 516          *  specified in the wakeupTime argument.  Once the wakeup condition is
 517          *  satisfied, then all saved state is restored and the function returns in the
 518          *  Active state.
 519          *
 520          *  Note that if the wakeupTime is made with a different value, the period before
 521          *  the wakeup occurs can be significantly shorter than the specified time.  If
 522          *  the next call is made with the same wakeupTime value, then the wakeup will
 523          *  occur the specified period after the previous wakeup occurred.
 524          *
 525          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 526          *  specified timer will be left as specified by wakeupTime with the timer
 527          *  enabled and the interrupt disabled.  If the CTW, FTW or One PPS is already
 528          *  configured for wakeup, for example with the SleepTimer or RTC components,
 529          *  then specify NONE for the wakeupTime and include the appropriate source for
 530          *  wakeupSource.
 531          *
 532          *  PSoC 5LP:
 533          *  This function is used to both enter the Alternate Active mode and halt the
 534          *  processor.  For PSoC 3 these two actions must be paired together.  With PSoC
 535          *  5LP the processor can be halted independently with the __WFI() function from
 536          *  the CMSIS library that is included in Creator.  This function should be used
 537          *  instead when the action required is just to halt the processor until an
 538          *  enabled interrupt occurs.
 539          *
 540          *  The wakeupTime parameter is not used for this device. It must be set to zero
 541          *  (PM_ALT_ACT_TIME_NONE). The wake up time configuration can be done by a
 542          *  separate component: the CTW wakeup interval should be configured with the
 543          *  Sleep Timer component and one second interval should be configured with the
 544          *  RTC component.
 545          *
 546          *  The wakeup behavior depends on the wakeupSource parameter in the following
 547          *  manner: upon function execution the device will be switched from Active to
 548          *  Alternate Active mode and then the CPU will be halted. When an enabled wakeup
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 10  

 549          *  event occurs the device will return to Active mode.  Similarly when an
 550          *  enabled interrupt occurs the CPU will be started. These two actions will
 551          *  occur together provided that the event that occurs is an enabled wakeup
 552          *  source and also generates an interrupt. If just the wakeup event occurs then
 553          *  the device will be in Active mode, but the CPU will remain halted waiting for
 554          *  an interrupt. If an interrupt occurs from something other than a wakeup
 555          *  source, then the CPU will restart with the device in Alternate Active mode
 556          *  until a wakeup event occurs.
 557          *
 558          *  For example, if CyPmAltAct(PM_ALT_ACT_TIME_NONE, PM_ALT_ACT_SRC_PICU) is
 559          *  called and PICU interrupt occurs, the CPU will be started and device will be
 560          *  switched into Active mode. And if CyPmAltAct(PM_ALT_ACT_TIME_NONE,
 561          *  PM_ALT_ACT_SRC_NONE) is called and PICU interrupt occurs, the CPU will be
 562          *  started while device remains in Alternate Active mode.
 563          *
 564          * Parameters:
 565          *  wakeupTime: Specifies a timer wakeup source and the frequency of that
 566          *              source. For PSoC 5LP this parameter is ignored.
 567          *
 568          *           Define                      Time
 569          *  PM_ALT_ACT_TIME_NONE             None
 570          *  PM_ALT_ACT_TIME_ONE_PPS          One PPS: 1 second
 571          *  PM_ALT_ACT_TIME_CTW_2MS          CTW: 2 ms
 572          *  PM_ALT_ACT_TIME_CTW_4MS          CTW: 4 ms
 573          *  PM_ALT_ACT_TIME_CTW_8MS          CTW: 8 ms
 574          *  PM_ALT_ACT_TIME_CTW_16MS         CTW: 16 ms
 575          *  PM_ALT_ACT_TIME_CTW_32MS         CTW: 32 ms
 576          *  PM_ALT_ACT_TIME_CTW_64MS         CTW: 64 ms
 577          *  PM_ALT_ACT_TIME_CTW_128MS        CTW: 128 ms
 578          *  PM_ALT_ACT_TIME_CTW_256MS        CTW: 256 ms
 579          *  PM_ALT_ACT_TIME_CTW_512MS        CTW: 512 ms
 580          *  PM_ALT_ACT_TIME_CTW_1024MS       CTW: 1024 ms
 581          *  PM_ALT_ACT_TIME_CTW_2048MS       CTW: 2048 ms
 582          *  PM_ALT_ACT_TIME_CTW_4096MS       CTW: 4096 ms
 583          *  PM_ALT_ACT_TIME_FTW(1-256)*       FTW: 10us to 2.56 ms
 584          *
 585          *  *Note:   PM_ALT_ACT_TIME_FTW() is a macro that takes an argument that
 586          *           specifies how many increments of 10 us to delay.
 587                      For PSoC 3 silicon the valid range of  values is 1 to 256.
 588          *
 589          *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 590          *                   a wakeupTime has been specified, the associated timer will be
 591          *                   included as a wakeup source.
 592          *
 593          *           Define                      Source
 594          *  PM_ALT_ACT_SRC_NONE              None
 595          *  PM_ALT_ACT_SRC_COMPARATOR0       Comparator 0
 596          *  PM_ALT_ACT_SRC_COMPARATOR1       Comparator 1
 597          *  PM_ALT_ACT_SRC_COMPARATOR2       Comparator 2
 598          *  PM_ALT_ACT_SRC_COMPARATOR3       Comparator 3
 599          *  PM_ALT_ACT_SRC_INTERRUPT         Interrupt
 600          *  PM_ALT_ACT_SRC_PICU              PICU
 601          *  PM_ALT_ACT_SRC_I2C               I2C
 602          *  PM_ALT_ACT_SRC_BOOSTCONVERTER    Boost Converter
 603          *  PM_ALT_ACT_SRC_FTW               Fast Timewheel*
 604          *  PM_ALT_ACT_SRC_VD                High and Low Voltage Detection (HVI, LVI)*
 605          *  PM_ALT_ACT_SRC_CTW               Central Timewheel**
 606          *  PM_ALT_ACT_SRC_ONE_PPS           One PPS**
 607          *  PM_ALT_ACT_SRC_LCD               LCD
 608          *
 609          *  *Note : FTW and HVI/LVI wakeup signals are in the same mask bit.
 610          *  **Note: CTW and One PPS wakeup signals are in the same mask bit.
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 11  

 611          *
 612          *  When specifying a Comparator as the wakeupSource, an instance specific define
 613          *  that will track with the specific comparator that the instance
 614          *  is placed into should be used. As an example, for a Comparator instance named MyComp the
 615          *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 616          *
 617          *  When CTW, FTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 618          *  function must be called upon wakeup with a corresponding parameter. Please
 619          *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 620          *  information.
 621          *
 622          * Return:
 623          *  None
 624          *
 625          * Reentrant:
 626          *  No
 627          *
 628          * Side Effects:
 629          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 630          *  specified timer will be left as specified by wakeupTime with the timer
 631          *  enabled and the interrupt disabled.  Also, the ILO 1 KHz (if CTW timer is
 632          *  used as wakeup time) or ILO 100 KHz (if the FTW timer is used as wakeup time)
 633          *  will be left started.
 634          *
 635          *******************************************************************************/
 636          void CyPmAltAct(uint16 wakeupTime, uint16 wakeupSource) 
 637          {
 638   1          #if(CY_PSOC5)
              
                      /* Arguments expected to be 0 */
                      CYASSERT(PM_ALT_ACT_TIME_NONE == wakeupTime);
              
                      if(0u != wakeupTime)
                      {
                          /* To remove unreferenced local variable warning */
                      }
              
                  #endif /* (CY_PSOC5) */
 649   1      
 650   1      
 651   1          #if(CY_PSOC3)
 652   1      
 653   1              /* FTW - save current and set new configuration */
 654   1              if((wakeupTime >= PM_ALT_ACT_TIME_FTW(1u)) && (wakeupTime <= PM_ALT_ACT_TIME_FTW(256u)))
 655   1              {
 656   2                  CyPmFtwSetInterval(PM_ALT_ACT_FTW_INTERVAL(wakeupTime));
 657   2      
 658   2                  /* Include associated timer to wakeupSource */
 659   2                  wakeupSource |= PM_ALT_ACT_SRC_FTW;
 660   2              }
 661   1      
 662   1              /* CTW - save current and set new configuration */
 663   1              if((wakeupTime >= PM_ALT_ACT_TIME_CTW_2MS) && (wakeupTime <= PM_ALT_ACT_TIME_CTW_4096MS))
 664   1              {
 665   2                  /* Save current CTW configuration and set new one */
 666   2                  CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
 667   2      
 668   2                  /* Include associated timer to wakeupSource */
 669   2                  wakeupSource |= PM_ALT_ACT_SRC_CTW;
 670   2              }
 671   1      
 672   1              /* 1PPS - save current and set new configuration */
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 12  

 673   1              if(PM_ALT_ACT_TIME_ONE_PPS == wakeupTime)
 674   1              {
 675   2                  /* Save current 1PPS configuration and set new one */
 676   2                  CyPmOppsSet();
 677   2      
 678   2                  /* Include associated timer to wakeupSource */
 679   2                  wakeupSource |= PM_ALT_ACT_SRC_ONE_PPS;
 680   2              }
 681   1      
 682   1          #endif /* (CY_PSOC3) */
 683   1      
 684   1      
 685   1          /* Save and set new wake up configuration */
 686   1      
 687   1          /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 688   1          cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 689   1          CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 690   1      
 691   1          /* Comparators */
 692   1          cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 693   1          CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 694   1      
 695   1          /* LCD */
 696   1          cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 697   1          CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 698   1      
 699   1      
 700   1          /* Switch to the Alternate Active mode */
 701   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_ALT_ACT)
             -;
 702   1      
 703   1          /* Recommended readback. */
 704   1          (void) CY_PM_MODE_CSR_REG;
 705   1      
 706   1          /* Two recommended NOPs to get into the mode. */
 707   1          CY_NOP;
 708   1          CY_NOP;
 709   1      
 710   1          /* Execute WFI instruction (for ARM-based devices only) */
 711   1          CY_PM_WFI;
 712   1      
 713   1          /* Point of return from Alternate Active Mode */
 714   1      
 715   1          /* Restore wake up configuration */
 716   1          CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 717   1          CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 718   1          CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 719   1      }
 720          
 721          
 722          /*******************************************************************************
 723          * Function Name: CyPmSleep
 724          ********************************************************************************
 725          *
 726          * Summary:
 727          *  Puts the part into the Sleep state.
 728          *
 729          *  Note Before calling this function, you must manually configure the power
 730          *  mode of the source clocks for the timer that is used as the wakeup timer.
 731          *
 732          *  Note Before calling this function, you must prepare clock tree configuration
 733          *  for the low power mode by calling CyPmSaveClocks(). And restore clock
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 13  

 734          *  configuration after CyPmSleep() execution by calling CyPmRestoreClocks(). See
 735          *  Power Management section, Clock Configuration subsection of the System
 736          *  Reference Guide for more information.
 737          *
 738          *  PSoC 3:
 739          *  Before switching to Sleep, if a wakeupTime other than NONE is specified,
 740          *  then the appropriate timer state is configured as specified with the
 741          *  interrupt for that timer disabled.  The wakeup source will be a combination
 742          *  of the values specified in the wakeupSource and any timer specified in the
 743          *  wakeupTime argument.  Once the wakeup condition is satisfied, then all saved
 744          *  state is restored and the function returns in the Active state.
 745          *
 746          *  Note that if the wakeupTime is made with a different value, the period before
 747          *  the wakeup occurs can be significantly shorter than the specified time.  If
 748          *  the next call is made with the same wakeupTime value, then the wakeup will
 749          *  occur the specified period after the previous wakeup occurred.
 750          *
 751          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 752          *  specified timer will be left as specified by wakeupTime with the timer
 753          *  enabled and the interrupt disabled.  If the CTW or One PPS is already
 754          *  configured for wakeup, for example with the SleepTimer or RTC components,
 755          *  then specify NONE for the wakeupTime and include the appropriate source for
 756          *  wakeupSource.
 757          *
 758          *  PSoC 5LP:
 759          *  The wakeupTime parameter is not used and the only NONE can be specified.
 760          *  The wakeup time must be configured with the component, SleepTimer for CTW
 761          *  intervals and RTC for 1PPS interval. The component must be configured to
 762          *  generate interrupt.
 763          *
 764          * Parameters:
 765          *  wakeupTime:      Specifies a timer wakeup source and the frequency of that
 766          *                   source. For PSoC 5LP, this parameter is ignored.
 767          *
 768          *           Define                      Time
 769          *  PM_SLEEP_TIME_NONE               None
 770          *  PM_SLEEP_TIME_ONE_PPS            One PPS: 1 second
 771          *  PM_SLEEP_TIME_CTW_2MS            CTW: 2 ms
 772          *  PM_SLEEP_TIME_CTW_4MS            CTW: 4 ms
 773          *  PM_SLEEP_TIME_CTW_8MS            CTW: 8 ms
 774          *  PM_SLEEP_TIME_CTW_16MS           CTW: 16 ms
 775          *  PM_SLEEP_TIME_CTW_32MS           CTW: 32 ms
 776          *  PM_SLEEP_TIME_CTW_64MS           CTW: 64 ms
 777          *  PM_SLEEP_TIME_CTW_128MS          CTW: 128 ms
 778          *  PM_SLEEP_TIME_CTW_256MS          CTW: 256 ms
 779          *  PM_SLEEP_TIME_CTW_512MS          CTW: 512 ms
 780          *  PM_SLEEP_TIME_CTW_1024MS         CTW: 1024 ms
 781          *  PM_SLEEP_TIME_CTW_2048MS         CTW: 2048 ms
 782          *  PM_SLEEP_TIME_CTW_4096MS         CTW: 4096 ms
 783          *
 784          *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 785          *                   a wakeupTime has been specified the associated timer will be
 786          *                   included as a wakeup source.
 787          *
 788          *           Define                      Source
 789          *  PM_SLEEP_SRC_NONE                None
 790          *  PM_SLEEP_SRC_COMPARATOR0         Comparator 0
 791          *  PM_SLEEP_SRC_COMPARATOR1         Comparator 1
 792          *  PM_SLEEP_SRC_COMPARATOR2         Comparator 2
 793          *  PM_SLEEP_SRC_COMPARATOR3         Comparator 3
 794          *  PM_SLEEP_SRC_PICU                PICU
 795          *  PM_SLEEP_SRC_I2C                 I2C
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 14  

 796          *  PM_SLEEP_SRC_BOOSTCONVERTER      Boost Converter
 797          *  PM_SLEEP_SRC_VD                  High and Low Voltage Detection (HVI, LVI)
 798          *  PM_SLEEP_SRC_CTW                 Central Timewheel*
 799          *  PM_SLEEP_SRC_ONE_PPS             One PPS*
 800          *  PM_SLEEP_SRC_LCD                 LCD
 801          *
 802          *  *Note:   CTW and One PPS wakeup signals are in the same mask bit.
 803          *
 804          *  When specifying a Comparator as the wakeupSource an instance specific define
 805          *  should be used that will track with the specific comparator that the instance
 806          *  is placed into. As an example for a Comparator instance named MyComp the
 807          *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 808          *
 809          *  When CTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 810          *  function must be called upon wakeup with corresponding parameter. Please
 811          *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 812          *  information.
 813          *
 814          * Return:
 815          *  None
 816          *
 817          * Reentrant:
 818          *  No
 819          *
 820          * Side Effects and Restrictions:
 821          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 822          *  specified timer will be left as specified by wakeupTime with the timer
 823          *  enabled and the interrupt disabled. Also, the ILO 1 KHz (if CTW timer is
 824          *  used as wake up time) will be left started.
 825          *
 826          *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
 827          *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
 828          *  delay is measured using rising edges of the 1 kHz ILO.
 829          *
 830          *  For PSoC 3 silicon hardware buzz should be disabled before entering a sleep
 831          *  power mode. It is disabled by PSoC Creator during startup.
 832          *  If a Low Voltage Interrupt (LVI), High Voltage Interrupt (HVI) or Brown Out
 833          *  detect (power supply supervising capabilities) are required in a design
 834          *  during sleep, use the Central Time Wheel (CTW) to periodically wake the
 835          *  device, perform software buzz, and refresh the supervisory services. If LVI,
 836          *  HVI, or Brown Out is not required, then CTW is not required.
 837          *  Refer to the device errata for more information.
 838          *
 839          *******************************************************************************/
 840          void CyPmSleep(uint8 wakeupTime, uint16 wakeupSource) 
 841          {
 842   1          uint8 interruptState;
 843   1      
 844   1          /* Save current global interrupt enable and disable it */
 845   1          interruptState = CyEnterCriticalSection();
 846   1      
 847   1      
 848   1          /***********************************************************************
 849   1          * The Hibernate/Sleep regulator has a settling time after a reset.
 850   1          * During this time, the system ignores requests to enter Sleep and
 851   1          * Hibernate modes. The holdoff delay is measured using rising edges of
 852   1          * the 1 kHz ILO.
 853   1          ***********************************************************************/
 854   1          if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 855   1          {
 856   2              /* Disable hold off - no action on restore */
 857   2              CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 15  

 858   2          }
 859   1          else
 860   1          {
 861   2              /* Abort, device is not ready for low power mode entry */
 862   2      
 863   2              /* Restore global interrupt enable state */
 864   2              CyExitCriticalSection(interruptState);
 865   2      
 866   2              return;
 867   2          }
 868   1      
 869   1      
 870   1          /***********************************************************************
 871   1          * PSoC3 < TO6:
 872   1          * - Hardware buzz must be disabled before the sleep mode entry.
 873   1          * - Voltage supervision (HVI/LVI) requires hardware buzz, so they must
 874   1          *   be also disabled.
 875   1          *
 876   1          * PSoC3 >= TO6:
 877   1          * - Voltage supervision (HVI/LVI) requires hardware buzz, so hardware buzz must be
 878   1          *   enabled before the sleep mode entry and restored on the wakeup.
 879   1          ***********************************************************************/
 880   1          #if(CY_PSOC3)
 881   1      
 882   1              /* Silicon Revision ID is below TO6 */
 883   1              if(CYDEV_CHIP_REV_ACTUAL < 5u)
 884   1              {
 885   2                  /* Hardware buzz expected to be disabled in Sleep mode */
 886   2                  CYASSERT(0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ));
 887   2              }
 888   1      
 889   1      
 890   1              if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
 891   1                  CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
 892   1              {
 893   2                  if(CYDEV_CHIP_REV_ACTUAL < 5u)
 894   2                  {
 895   3                      /* LVI/HVI requires hardware buzz to be enabled */
 896   3                      CYASSERT(0u != 0u);
 897   3                  }
 898   2                  else
 899   2                  {
 900   3                      if (0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ))
 901   3                      {
 902   4                          cyPmBackup.hardwareBuzz = CY_PM_DISABLED;
 903   4                          CY_PM_PWRSYS_WAKE_TR2_REG |= CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ;
 904   4                      }
 905   3                      else
 906   3                      {
 907   4                          cyPmBackup.hardwareBuzz = CY_PM_ENABLED;
 908   4                      }
 909   3                  }
 910   2              }
 911   1      
 912   1          #endif /* (CY_PSOC3) */
 913   1      
 914   1      
 915   1          /*******************************************************************************
 916   1          * For ARM-based devices,interrupt is required for the CPU to wake up. The
 917   1          * Power Management implementation assumes that wakeup time is configured with a
 918   1          * separate component (component-based wakeup time configuration) for
 919   1          * interrupt to be issued on terminal count. For more information, refer to the
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 16  

 920   1          * Wakeup Time Configuration section of System Reference Guide.
 921   1          *******************************************************************************/
 922   1          #if(CY_PSOC5)
              
                      /* Arguments expected to be 0 */
                      CYASSERT(PM_SLEEP_TIME_NONE == wakeupTime);
              
                      if(0u != wakeupTime)
                      {
                          /* To remove unreferenced local variable warning */
                      }
              
                  #endif /* (CY_PSOC5) */
 933   1      
 934   1      
 935   1          CyPmHibSlpSaveSet();
 936   1      
 937   1      
 938   1          #if(CY_PSOC3)
 939   1      
 940   1              /* CTW - save current and set new configuration */
 941   1              if((wakeupTime >= PM_SLEEP_TIME_CTW_2MS) && (wakeupTime <= PM_SLEEP_TIME_CTW_4096MS))
 942   1              {
 943   2                  /* Save current and set new configuration of CTW */
 944   2                  CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
 945   2      
 946   2                  /* Include associated timer to wakeupSource */
 947   2                  wakeupSource |= PM_SLEEP_SRC_CTW;
 948   2              }
 949   1      
 950   1              /* 1PPS - save current and set new configuration */
 951   1              if(PM_SLEEP_TIME_ONE_PPS == wakeupTime)
 952   1              {
 953   2                  /* Save current and set new configuration of the 1PPS */
 954   2                  CyPmOppsSet();
 955   2      
 956   2                  /* Include associated timer to wakeupSource */
 957   2                  wakeupSource |= PM_SLEEP_SRC_ONE_PPS;
 958   2              }
 959   1      
 960   1          #endif /* (CY_PSOC3) */
 961   1      
 962   1      
 963   1          /* Save and set new wake up configuration */
 964   1      
 965   1          /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 966   1          cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 967   1          CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 968   1      
 969   1          /* Comparators */
 970   1          cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 971   1          CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 972   1      
 973   1          /* LCD */
 974   1          cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 975   1          CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 976   1      
 977   1      
 978   1          /*******************************************************************
 979   1          * Do not use the merge region below unless any component datasheet
 980   1          * suggests doing so.
 981   1          *******************************************************************/
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 17  

 982   1          /* `#START CY_PM_JUST_BEFORE_SLEEP` */
 983   1      
 984   1          /* `#END` */
 985   1      
 986   1      
 987   1          /* Last moment IMO frequency change */
 988   1          if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 989   1          {
 990   2              /* IMO frequency is 12 MHz */
 991   2              cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 992   2          }
 993   1          else
 994   1          {
 995   2              /* IMO frequency is not 12 MHz */
 996   2              cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 997   2      
 998   2              /* Save IMO frequency */
 999   2              cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1000   2      
1001   2              /* Set IMO frequency to 12 MHz */
1002   2              CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1003   2          }
1004   1      
1005   1          /* Switch to Sleep mode */
1006   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_SLEEP);
1007   1      
1008   1          /* Recommended readback. */
1009   1          (void) CY_PM_MODE_CSR_REG;
1010   1      
1011   1          /* Two recommended NOPs to get into mode. */
1012   1          CY_NOP;
1013   1          CY_NOP;
1014   1      
1015   1          /* Execute WFI instruction (for ARM-based devices only) */
1016   1          CY_PM_WFI;
1017   1      
1018   1          /* Point of return from Sleep Mode */
1019   1      
1020   1          /* Restore last moment IMO frequency change */
1021   1          if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1022   1          {
1023   2              CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
             -) |
1024   2                                          cyPmBackup.imoActFreq;
1025   2          }
1026   1      
1027   1      
1028   1          /*******************************************************************
1029   1          * Do not use merge region below unless any component datasheet
1030   1          * suggest to do so.
1031   1          *******************************************************************/
1032   1          /* `#START CY_PM_JUST_AFTER_WAKEUP_FROM_SLEEP` */
1033   1      
1034   1          /* `#END` */
1035   1      
1036   1      
1037   1          /* Restore hardware configuration */
1038   1          CyPmHibSlpRestore();
1039   1      
1040   1      
1041   1          /* Disable hardware buzz, if it was previously enabled */
1042   1          #if(CY_PSOC3)
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 18  

1043   1      
1044   1              if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1045   1                  CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
1046   1              {
1047   2                  if(CYDEV_CHIP_REV_ACTUAL >= 5u)
1048   2                  {
1049   3                      if (CY_PM_DISABLED == cyPmBackup.hardwareBuzz)
1050   3                      {
1051   4                          CY_PM_PWRSYS_WAKE_TR2_REG &= (uint8)(~CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ);
1052   4                      }
1053   3                  }
1054   2              }
1055   1      
1056   1          #endif /* (CY_PSOC3) */
1057   1      
1058   1      
1059   1          /* Restore current wake up configuration */
1060   1          CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1061   1          CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1062   1          CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1063   1      
1064   1          /* Restore global interrupt enable state */
1065   1          CyExitCriticalSection(interruptState);
1066   1      }
1067          
1068          
1069          /*******************************************************************************
1070          * Function Name: CyPmHibernate
1071          ********************************************************************************
1072          *
1073          * Summary:
1074          *  Puts the part into the Hibernate state.
1075          *
1076          *  PSoC 3 and PSoC 5LP:
1077          *  Before switching to Hibernate, the current status of the PICU wakeup source
1078          *  bit is saved and then set. This configures the device to wake up from the
1079          *  PICU. Make sure you have at least one pin configured to generate PICU
1080          *  interrupt. For pin Px.y, the register "PICU_INTTYPE_PICUx_INTTYPEy" controls
1081          *  the PICU behavior. In the TRM, this register is "PICU[0..15]_INTTYPE[0..7]."
1082          *  In the Pins component datasheet, this register is referred to as the IRQ
1083          *  option. Once the wakeup occurs, the PICU wakeup source bit is restored and
1084          *  the PSoC returns to the Active state.
1085          *
1086          * Parameters:
1087          *  None
1088          *
1089          * Return:
1090          *  None
1091          *
1092          * Reentrant:
1093          *  No
1094          *
1095          * Side Effects:
1096          *  Applications must wait 20 us before re-entering hibernate or sleep after
1097          *  waking up from hibernate. The 20 us allows the sleep regulator time to
1098          *  stabilize before the next hibernate / sleep event occurs. The 20 us
1099          *  requirement begins when the device wakes up. There is no hardware check that
1100          *  this requirement is met. The specified delay should be done on ISR entry.
1101          *
1102          *  After the wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin is
1103          *  instance name of the Pins component) function must be called to clear the
1104          *  latched pin events to allow the proper Hibernate mode entry and to enable
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 19  

1105          *  detection of future events.
1106          *
1107          *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
1108          *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
1109          *  delay is measured using the rising edges of the 1 kHz ILO.
1110          *
1111          *******************************************************************************/
1112          void CyPmHibernate(void) 
1113          {
1114   1          uint8 interruptState;
1115   1      
1116   1          /* Save current global interrupt enable and disable it */
1117   1          interruptState = CyEnterCriticalSection();
1118   1      
1119   1              /***********************************************************************
1120   1              * The Hibernate/Sleep regulator has a settling time after a reset.
1121   1              * During this time, the system ignores requests to enter the Sleep and
1122   1              * Hibernate modes. The holdoff delay is measured using the rising edges of
1123   1              * the 1 kHz ILO.
1124   1              ***********************************************************************/
1125   1              if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
1126   1              {
1127   2                  /* Disable hold off - no action on restore */
1128   2                  CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
1129   2              }
1130   1              else
1131   1              {
1132   2                  /* Abort, device is not ready for low power mode entry */
1133   2      
1134   2                  /* Restore global interrupt enable state */
1135   2                  CyExitCriticalSection(interruptState);
1136   2      
1137   2                  return;
1138   2              }
1139   1      
1140   1          CyPmHibSaveSet();
1141   1      
1142   1      
1143   1          /* Save and enable only wakeup on PICU */
1144   1          cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
1145   1          CY_PM_WAKEUP_CFG0_REG = CY_PM_WAKEUP_PICU;
1146   1      
1147   1          cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
1148   1          CY_PM_WAKEUP_CFG1_REG = 0x00u;
1149   1      
1150   1          cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
1151   1          CY_PM_WAKEUP_CFG2_REG = 0x00u;
1152   1      
1153   1      
1154   1          /* Last moment IMO frequency change */
1155   1          if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1156   1          {
1157   2              /* IMO frequency is 12 MHz */
1158   2              cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1159   2          }
1160   1          else
1161   1          {
1162   2              /* IMO frequency is not 12 MHz */
1163   2              cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1164   2      
1165   2              /* Save IMO frequency */
1166   2              cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 20  

1167   2      
1168   2              /* Set IMO frequency to 12 MHz */
1169   2              CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1170   2          }
1171   1      
1172   1      
1173   1          /* Switch to Hibernate Mode */
1174   1          CY_PM_MODE_CSR_REG = (CY_PM_MODE_CSR_REG & ((uint8) (~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_HIBERNAT
             -E;
1175   1      
1176   1          /* Recommended readback. */
1177   1          (void) CY_PM_MODE_CSR_REG;
1178   1      
1179   1          /* Two recommended NOPs to get into mode. */
1180   1          CY_NOP;
1181   1          CY_NOP;
1182   1      
1183   1          /* Execute WFI instruction (for ARM-based devices only) */
1184   1          CY_PM_WFI;
1185   1      
1186   1      
1187   1          /* Point of return from Hibernate mode */
1188   1      
1189   1      
1190   1          /* Restore last moment IMO frequency change */
1191   1          if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1192   1          {
1193   2              CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
             -) |
1194   2                                          cyPmBackup.imoActFreq;
1195   2          }
1196   1      
1197   1      
1198   1          /* Restore device for proper Hibernate mode exit*/
1199   1          CyPmHibRestore();
1200   1      
1201   1          /* Restore current wake up configuration */
1202   1          CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1203   1          CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1204   1          CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1205   1      
1206   1          /* Restore global interrupt enable state */
1207   1          CyExitCriticalSection(interruptState);
1208   1      }
1209          
1210          
1211          /*******************************************************************************
1212          * Function Name: CyPmReadStatus
1213          ********************************************************************************
1214          *
1215          * Summary:
1216          *  Manages the Power Manager Interrupt Status Register.  This register has the
1217          *  interrupt status for the one pulse per second, central timewheel and fast
1218          *  timewheel timers.  This hardware register clears on read.  To allow for only
1219          *  clearing the bits of interest and preserving the other bits, this function
1220          *  uses a shadow register that retains the state.  This function reads the
1221          *  status register and ORs that value with the shadow register.  That is the
1222          *  value that is returned.  Then the bits in the mask that are set are cleared
1223          *  from this value and written back to the shadow register.
1224          *
1225          *  Note You must call this function within 1 ms (1 clock cycle of the ILO)
1226          *  after a CTW event has occurred.
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 21  

1227          *
1228          * Parameters:
1229          *  mask: Bits in the shadow register to clear.
1230          *
1231          *       Define                      Source
1232          *  CY_PM_FTW_INT                Fast Timewheel
1233          *  CY_PM_CTW_INT                Central Timewheel
1234          *  CY_PM_ONEPPS_INT             One Pulse Per Second
1235          *
1236          * Return:
1237          *  Status.  Same bits values as the mask parameter.
1238          *
1239          *******************************************************************************/
1240          uint8 CyPmReadStatus(uint8 mask) 
1241          {
1242   1          static uint8 interruptStatus;
1243   1          uint8 interruptState;
1244   1          uint8 tmpStatus;
1245   1      
1246   1          /* Enter critical section */
1247   1          interruptState = CyEnterCriticalSection();
1248   1      
1249   1          /* Save value of register, copy it and clear desired bit */
1250   1          interruptStatus |= CY_PM_INT_SR_REG;
1251   1          tmpStatus = interruptStatus;
1252   1          interruptStatus &= ((uint8)(~mask));
1253   1      
1254   1          /* Exit critical section */
1255   1          CyExitCriticalSection(interruptState);
1256   1      
1257   1          return(tmpStatus);
1258   1      }
1259          
1260          
1261          /*******************************************************************************
1262          * Function Name: CyPmHibSaveSet
1263          ********************************************************************************
1264          *
1265          * Summary:
1266          *  Prepare device for proper Hibernate low power mode entry:
1267          *  - Disables I2C backup regulator
1268          *  - Saves ILO power down mode state and enable it
1269          *  - Saves state of 1 kHz and 100 kHz ILO and disable them
1270          *  - Disables sleep regulator and shorts vccd to vpwrsleep
1271          *  - Save LVI/HVI configuration and disable them - CyPmHviLviSaveDisable()
1272          *  - CyPmHibSlpSaveSet() function is called
1273          *
1274          * Parameters:
1275          *  None
1276          *
1277          * Return:
1278          *  None
1279          *
1280          * Reentrant:
1281          *  No
1282          *
1283          *******************************************************************************/
1284          static void CyPmHibSaveSet(void) 
1285          {
1286   1          /* I2C backup reg must be off when the sleep regulator is unavailable */
1287   1          if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
1288   1          {
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 22  

1289   2              /***********************************************************************
1290   2              * If the I2C backup regulator is enabled, all the fixed-function registers
1291   2              * store their values while the device is in the low power mode, otherwise their
1292   2              * configuration is lost. The I2C API makes a decision to restore or not
1293   2              * to restore I2C registers based on this. If this regulator will be
1294   2              * disabled and then enabled, I2C API will suppose that the I2C block
1295   2              * registers preserved their values, while this is not true. So, the
1296   2              * backup regulator is disabled. The I2C sleep APIs is responsible for
1297   2              * restoration.
1298   2              ***********************************************************************/
1299   2      
1300   2              /* Disable I2C backup register */
1301   2              CY_PM_PWRSYS_CR1_REG &= ((uint8)(~CY_PM_PWRSYS_CR1_I2CREG_BACKUP));
1302   2          }
1303   1      
1304   1      
1305   1          /* Save current ILO power mode and ensure low power mode */
1306   1          cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
1307   1      
1308   1          /* Save current 1kHz ILO enable state. Disabled automatically. */
1309   1          cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
1310   1                                      CY_PM_DISABLED : CY_PM_ENABLED;
1311   1      
1312   1          /* Save current 100kHz ILO enable state. Disabled automatically. */
1313   1          cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
1314   1                                      CY_PM_DISABLED : CY_PM_ENABLED;
1315   1      
1316   1      
1317   1          /* Disable the sleep regulator and shorts vccd to vpwrsleep */
1318   1          if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
1319   1          {
1320   2              /* Save current bypass state */
1321   2              cyPmBackup.slpTrBypass = CY_PM_DISABLED;
1322   2              CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
1323   2          }
1324   1          else
1325   1          {
1326   2              cyPmBackup.slpTrBypass = CY_PM_ENABLED;
1327   2          }
1328   1      
1329   1          /* LPCOMPs are always enabled (even when BOTH ext_vccd=1 and ext_vcca=1)*/
1330   1      
1331   1      
1332   1          /***************************************************************************
1333   1          * LVI/HVI must be disabled in Hibernate
1334   1          ***************************************************************************/
1335   1      
1336   1          /* Save LVI/HVI configuration and disable them */
1337   1          CyPmHviLviSaveDisable();
1338   1      
1339   1      
1340   1          /* Make the same preparations for Hibernate and Sleep modes */
1341   1          CyPmHibSlpSaveSet();
1342   1      
1343   1      
1344   1          /***************************************************************************
1345   1          * Save and set the power mode wakeup trim registers
1346   1          ***************************************************************************/
1347   1          cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
1348   1          cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
1349   1      
1350   1          CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 23  

1351   1          CY_PM_PWRSYS_WAKE_TR1_REG = CY_PM_PWRSYS_WAKE_TR1;
1352   1      }
1353          
1354          
1355          /*******************************************************************************
1356          * Function Name: CyPmHibRestore
1357          ********************************************************************************
1358          *
1359          * Summary:
1360          *  Restores the device for the proper Hibernate mode exit:
1361          *  - Restores LVI/HVI configuration - calsl CyPmHviLviRestore()
1362          *  - CyPmHibSlpSaveRestore() function is called
1363          *  - Restores ILO power down mode state and enables it
1364          *  - Restores the state of 1 kHz and 100 kHz ILO and disables them
1365          *  - Restores the sleep regulator settings
1366          *
1367          * Parameters:
1368          *  None
1369          *
1370          * Return:
1371          *  None
1372          *
1373          *******************************************************************************/
1374          static void CyPmHibRestore(void) 
1375          {
1376   1          /* Restore LVI/HVI configuration */
1377   1          CyPmHviLviRestore();
1378   1      
1379   1          /* Restore the same configuration for Hibernate and Sleep modes */
1380   1          CyPmHibSlpRestore();
1381   1      
1382   1          /* Restore 1kHz ILO enable state */
1383   1          if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
1384   1          {
1385   2              /* Enable 1kHz ILO */
1386   2              CyILO_Start1K();
1387   2          }
1388   1      
1389   1          /* Restore 100kHz ILO enable state */
1390   1          if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
1391   1          {
1392   2              /* Enable 100kHz ILO */
1393   2              CyILO_Start100K();
1394   2          }
1395   1      
1396   1          /* Restore ILO power mode */
1397   1          (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
1398   1      
1399   1      
1400   1          if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
1401   1          {
1402   2              /* Enable the sleep regulator */
1403   2              CY_PM_PWRSYS_SLP_TR_REG &= ((uint8)(~CY_PM_PWRSYS_SLP_TR_BYPASS));
1404   2          }
1405   1      
1406   1      
1407   1          /***************************************************************************
1408   1          * Restore the power mode wakeup trim registers
1409   1          ***************************************************************************/
1410   1          CY_PM_PWRSYS_WAKE_TR0_REG = cyPmBackup.wakeupTrim0;
1411   1          CY_PM_PWRSYS_WAKE_TR1_REG = cyPmBackup.wakeupTrim1;
1412   1      }
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 24  

1413          
1414          
1415          /*******************************************************************************
1416          * Function Name: CyPmCtwSetInterval
1417          ********************************************************************************
1418          *
1419          * Summary:
1420          *  Performs the CTW configuration:
1421          *  - Disables the CTW interrupt
1422          *  - Enables 1 kHz ILO
1423          *  - Sets a new CTW interval
1424          *
1425          * Parameters:
1426          *  ctwInterval: the CTW interval to be set.
1427          *
1428          * Return:
1429          *  None
1430          *
1431          * Side Effects:
1432          *  Enables ILO 1 KHz clock and leaves it enabled.
1433          *
1434          *******************************************************************************/
1435          void CyPmCtwSetInterval(uint8 ctwInterval) 
1436          {
1437   1          /* Disable CTW interrupt enable */
1438   1          CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
1439   1      
1440   1          /* Enable 1kHz ILO (required for CTW operation) */
1441   1          CyILO_Start1K();
1442   1      
1443   1          /* Interval could be set only while CTW is disabled */
1444   1          if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
1445   1          {
1446   2              /* Set CTW interval if needed */
1447   2              if(CY_PM_TW_CFG1_REG != ctwInterval)
1448   2              {
1449   3                  /* Disable the CTW, set new CTW interval and enable it again */
1450   3                  CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_EN));
1451   3                  CY_PM_TW_CFG1_REG = ctwInterval;
1452   3                  CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1453   3              }   /* Required interval is already set */
1454   2          }
1455   1          else
1456   1          {
1457   2              /* Set CTW interval if needed */
1458   2              if(CY_PM_TW_CFG1_REG != ctwInterval)
1459   2              {
1460   3                  /* Set new CTW interval. Could be changed if CTW is disabled */
1461   3                  CY_PM_TW_CFG1_REG = ctwInterval;
1462   3              }   /* Required interval is already set */
1463   2      
1464   2              /* Enable CTW */
1465   2              CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1466   2          }
1467   1      }
1468          
1469          
1470          /*******************************************************************************
1471          * Function Name: CyPmOppsSet
1472          ********************************************************************************
1473          *
1474          * Summary:
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 25  

1475          *  Performs 1PPS configuration:
1476          *  - Starts 32 KHz XTAL
1477          *  - Disables 1PPS interrupts
1478          *  - Enables 1PPS
1479          *
1480          * Parameters:
1481          *  None
1482          *
1483          * Return:
1484          *  None
1485          *
1486          *******************************************************************************/
1487          void CyPmOppsSet(void) 
1488          {
1489   1          /* Enable 32kHz XTAL if needed */
1490   1          if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
1491   1          {
1492   2              /* Enable 32kHz XTAL */
1493   2              CyXTAL_32KHZ_Start();
1494   2          }
1495   1      
1496   1          /* Disable 1PPS interrupt enable */
1497   1          CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_1PPS_IE));
1498   1      
1499   1          /* Enable 1PPS operation */
1500   1          CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
1501   1      }
1502          
1503          
1504          /*******************************************************************************
1505          * Function Name: CyPmFtwSetInterval
1506          ********************************************************************************
1507          *
1508          * Summary:
1509          *  Performs the FTW configuration:
1510          *  - Disables the FTW interrupt
1511          *  - Enables 100 kHz ILO
1512          *  - Sets a new FTW interval.
1513          *
1514          * Parameters:
1515          *  ftwInterval - FTW counter interval.
1516          *
1517          * Return:
1518          *  None
1519          *
1520          * Side Effects:
1521          *  Enables the ILO 100 KHz clock and leaves it enabled.
1522          *
1523          *******************************************************************************/
1524          void CyPmFtwSetInterval(uint8 ftwInterval) 
1525          {
1526   1          /* Disable FTW interrupt enable */
1527   1          CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
1528   1      
1529   1          /* Enable 100kHz ILO */
1530   1          CyILO_Start100K();
1531   1      
1532   1          /* Interval could be set only while FTW is disabled */
1533   1          if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
1534   1          {
1535   2              /* Disable FTW, set new FTW interval if needed and enable it again */
1536   2              if(CY_PM_TW_CFG0_REG != ftwInterval)
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 26  

1537   2              {
1538   3                  /* Disable CTW, set new CTW interval and enable it again */
1539   3                  CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_EN));
1540   3                  CY_PM_TW_CFG0_REG = ftwInterval;
1541   3                  CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1542   3              }   /* Required interval is already set */
1543   2          }
1544   1          else
1545   1          {
1546   2              /* Set new FTW counter interval if needed. FTW is disabled. */
1547   2              if(CY_PM_TW_CFG0_REG != ftwInterval)
1548   2              {
1549   3                  /* Set new CTW interval. Could be changed if CTW is disabled */
1550   3                  CY_PM_TW_CFG0_REG = ftwInterval;
1551   3              }   /* Required interval is already set */
1552   2      
1553   2              /* Enable FTW */
1554   2              CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1555   2          }
1556   1      }
1557          
1558          
1559          /*******************************************************************************
1560          * Function Name: CyPmHibSlpSaveSet
1561          ********************************************************************************
1562          *
1563          * Summary:
1564          *  This API is used for preparing the device for the Sleep and Hibernate low power
1565          *  modes entry:
1566          *  - Saves the COMP, VIDAC, DSM, and SAR routing connections (PSoC 5)
1567          *  - Saves the SC/CT routing connections (PSoC 3/5/5LP)
1568          *  - Disables the Serial Wire Viewer (SWV) (PSoC 3)
1569          *  - Saves the boost reference selection and sets it to internal
1570          *
1571          * Parameters:
1572          *  None
1573          *
1574          * Return:
1575          *  None
1576          *
1577          * Reentrant:
1578          *  No
1579          *
1580          *******************************************************************************/
1581          static void CyPmHibSlpSaveSet(void) 
1582          {
1583   1          /* Save SC/CT routing registers */
1584   1          cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
1585   1          cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
1586   1          cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
1587   1          cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
1588   1          cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
1589   1          cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
1590   1          cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
1591   1      
1592   1          cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
1593   1          cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
1594   1          cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
1595   1          cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
1596   1          cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
1597   1          cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
1598   1          cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 27  

1599   1      
1600   1          cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
1601   1          cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
1602   1          cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
1603   1          cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
1604   1          cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
1605   1          cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
1606   1          cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
1607   1      
1608   1          cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
1609   1          cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
1610   1          cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
1611   1          cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
1612   1          cyPmBackup.scctData[25u]  = CY_GET_REG8(CYREG_SC3_SW6 );
1613   1          cyPmBackup.scctData[26u]  = CY_GET_REG8(CYREG_SC3_SW8 );
1614   1          cyPmBackup.scctData[27u]  = CY_GET_REG8(CYREG_SC3_SW10);
1615   1      
1616   1          CY_SET_REG8(CYREG_SC0_SW0 , 0u);
1617   1          CY_SET_REG8(CYREG_SC0_SW2 , 0u);
1618   1          CY_SET_REG8(CYREG_SC0_SW3 , 0u);
1619   1          CY_SET_REG8(CYREG_SC0_SW4 , 0u);
1620   1          CY_SET_REG8(CYREG_SC0_SW6 , 0u);
1621   1          CY_SET_REG8(CYREG_SC0_SW8 , 0u);
1622   1          CY_SET_REG8(CYREG_SC0_SW10, 0u);
1623   1      
1624   1          CY_SET_REG8(CYREG_SC1_SW0 , 0u);
1625   1          CY_SET_REG8(CYREG_SC1_SW2 , 0u);
1626   1          CY_SET_REG8(CYREG_SC1_SW3 , 0u);
1627   1          CY_SET_REG8(CYREG_SC1_SW4 , 0u);
1628   1          CY_SET_REG8(CYREG_SC1_SW6 , 0u);
1629   1          CY_SET_REG8(CYREG_SC1_SW8 , 0u);
1630   1          CY_SET_REG8(CYREG_SC1_SW10, 0u);
1631   1      
1632   1          CY_SET_REG8(CYREG_SC2_SW0 , 0u);
1633   1          CY_SET_REG8(CYREG_SC2_SW2 , 0u);
1634   1          CY_SET_REG8(CYREG_SC2_SW3 , 0u);
1635   1          CY_SET_REG8(CYREG_SC2_SW4 , 0u);
1636   1          CY_SET_REG8(CYREG_SC2_SW6 , 0u);
1637   1          CY_SET_REG8(CYREG_SC2_SW8 , 0u);
1638   1          CY_SET_REG8(CYREG_SC2_SW10, 0u);
1639   1      
1640   1          CY_SET_REG8(CYREG_SC3_SW0 , 0u);
1641   1          CY_SET_REG8(CYREG_SC3_SW2 , 0u);
1642   1          CY_SET_REG8(CYREG_SC3_SW3 , 0u);
1643   1          CY_SET_REG8(CYREG_SC3_SW4 , 0u);
1644   1          CY_SET_REG8(CYREG_SC3_SW6 , 0u);
1645   1          CY_SET_REG8(CYREG_SC3_SW8 , 0u);
1646   1          CY_SET_REG8(CYREG_SC3_SW10, 0u);
1647   1      
1648   1      
1649   1          #if(CY_PSOC3)
1650   1      
1651   1              /* Serial Wire Viewer (SWV) workaround */
1652   1      
1653   1              /* Disable SWV before entering low power mode */
1654   1              if(0u != (CY_PM_MLOGIC_DBG_REG & CY_PM_MLOGIC_DBG_SWV_CLK_EN))
1655   1              {
1656   2                  /* Save SWV clock enabled state */
1657   2                  cyPmBackup.swvClkEnabled = CY_PM_ENABLED;
1658   2      
1659   2                  /* Save current ports drive mode settings */
1660   2                  cyPmBackup.prt1Dm = CY_PM_PRT1_PC3_REG & ((uint8)(~CY_PM_PRT1_PC3_DM_MASK));
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 28  

1661   2      
1662   2                  /* Set drive mode to strong output */
1663   2                  CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1664   2                                      CY_PM_PRT1_PC3_DM_STRONG;
1665   2      
1666   2                  /* Disable SWV clocks */
1667   2                  CY_PM_MLOGIC_DBG_REG &= ((uint8)(~CY_PM_MLOGIC_DBG_SWV_CLK_EN));
1668   2              }
1669   1              else
1670   1              {
1671   2                  /* Save SWV clock disabled state */
1672   2                  cyPmBackup.swvClkEnabled = CY_PM_DISABLED;
1673   2              }
1674   1      
1675   1          #endif  /* (CY_PSOC3) */
1676   1      
1677   1      
1678   1          /***************************************************************************
1679   1          * Save boost reference and set it to boost's internal by clearing the bit.
1680   1          * External (chip bandgap) reference is not available in Sleep and Hibernate.
1681   1          ***************************************************************************/
1682   1          if(0u != (CY_PM_BOOST_CR2_REG & CY_PM_BOOST_CR2_EREFSEL_EXT))
1683   1          {
1684   2              cyPmBackup.boostRefExt = CY_PM_ENABLED;
1685   2              CY_PM_BOOST_CR2_REG &= ((uint8)(~CY_PM_BOOST_CR2_EREFSEL_EXT));
1686   2          }
1687   1          else
1688   1          {
1689   2              cyPmBackup.boostRefExt = CY_PM_DISABLED;
1690   2          }
1691   1      }
1692          
1693          
1694          /*******************************************************************************
1695          * Function Name: CyPmHibSlpRestore
1696          ********************************************************************************
1697          *
1698          * Summary:
1699          *  This API is used for restoring the device configurations after wakeup from the Sleep
1700          *  and Hibernate low power modes:
1701          *  - Restores the SC/CT routing connections
1702          *  - Restores the enable state of the Serial Wire Viewer (SWV) (PSoC 3)
1703          *  - Restores the  boost reference selection
1704          *
1705          * Parameters:
1706          *  None
1707          *
1708          * Return:
1709          *  None
1710          *
1711          *******************************************************************************/
1712          static void CyPmHibSlpRestore(void) 
1713          {
1714   1          /* Restore SC/CT routing registers */
1715   1          CY_SET_REG8(CYREG_SC0_SW0 , cyPmBackup.scctData[0u] );
1716   1          CY_SET_REG8(CYREG_SC0_SW2 , cyPmBackup.scctData[1u] );
1717   1          CY_SET_REG8(CYREG_SC0_SW3 , cyPmBackup.scctData[2u] );
1718   1          CY_SET_REG8(CYREG_SC0_SW4 , cyPmBackup.scctData[3u] );
1719   1          CY_SET_REG8(CYREG_SC0_SW6 , cyPmBackup.scctData[4u] );
1720   1          CY_SET_REG8(CYREG_SC0_SW8 , cyPmBackup.scctData[5u] );
1721   1          CY_SET_REG8(CYREG_SC0_SW10, cyPmBackup.scctData[6u] );
1722   1      
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 29  

1723   1          CY_SET_REG8(CYREG_SC1_SW0 , cyPmBackup.scctData[7u] );
1724   1          CY_SET_REG8(CYREG_SC1_SW2 , cyPmBackup.scctData[8u] );
1725   1          CY_SET_REG8(CYREG_SC1_SW3 , cyPmBackup.scctData[9u] );
1726   1          CY_SET_REG8(CYREG_SC1_SW4 , cyPmBackup.scctData[10u]);
1727   1          CY_SET_REG8(CYREG_SC1_SW6 , cyPmBackup.scctData[11u]);
1728   1          CY_SET_REG8(CYREG_SC1_SW8 , cyPmBackup.scctData[12u]);
1729   1          CY_SET_REG8(CYREG_SC1_SW10, cyPmBackup.scctData[13u]);
1730   1      
1731   1          CY_SET_REG8(CYREG_SC2_SW0 , cyPmBackup.scctData[14u]);
1732   1          CY_SET_REG8(CYREG_SC2_SW2 , cyPmBackup.scctData[15u]);
1733   1          CY_SET_REG8(CYREG_SC2_SW3 , cyPmBackup.scctData[16u]);
1734   1          CY_SET_REG8(CYREG_SC2_SW4 , cyPmBackup.scctData[17u]);
1735   1          CY_SET_REG8(CYREG_SC2_SW6 , cyPmBackup.scctData[18u]);
1736   1          CY_SET_REG8(CYREG_SC2_SW8 , cyPmBackup.scctData[19u]);
1737   1          CY_SET_REG8(CYREG_SC2_SW10, cyPmBackup.scctData[20u]);
1738   1      
1739   1          CY_SET_REG8(CYREG_SC3_SW0 , cyPmBackup.scctData[21u]);
1740   1          CY_SET_REG8(CYREG_SC3_SW2 , cyPmBackup.scctData[22u]);
1741   1          CY_SET_REG8(CYREG_SC3_SW3 , cyPmBackup.scctData[23u]);
1742   1          CY_SET_REG8(CYREG_SC3_SW4 , cyPmBackup.scctData[24u]);
1743   1          CY_SET_REG8(CYREG_SC3_SW6 , cyPmBackup.scctData[25u]);
1744   1          CY_SET_REG8(CYREG_SC3_SW8 , cyPmBackup.scctData[26u]);
1745   1          CY_SET_REG8(CYREG_SC3_SW10, cyPmBackup.scctData[27u]);
1746   1      
1747   1      
1748   1          #if(CY_PSOC3)
1749   1      
1750   1              /* Serial Wire Viewer (SWV) workaround */
1751   1              if(CY_PM_ENABLED == cyPmBackup.swvClkEnabled)
1752   1              {
1753   2                  /* Restore ports drive mode */
1754   2                  CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1755   2                                          cyPmBackup.prt1Dm;
1756   2      
1757   2                  /* Enable SWV clocks */
1758   2                  CY_PM_MLOGIC_DBG_REG |= CY_PM_MLOGIC_DBG_SWV_CLK_EN;
1759   2              }
1760   1      
1761   1          #endif /* (CY_PSOC3) */
1762   1      
1763   1      
1764   1          /* Restore boost reference */
1765   1          if(CY_PM_ENABLED == cyPmBackup.boostRefExt)
1766   1          {
1767   2              CY_PM_BOOST_CR2_REG |= CY_PM_BOOST_CR2_EREFSEL_EXT;
1768   2          }
1769   1      }
1770          
1771          
1772          /*******************************************************************************
1773          * Function Name: CyPmHviLviSaveDisable
1774          ********************************************************************************
1775          *
1776          * Summary:
1777          *  Saves analog and digital LVI and HVI configuration and disables them.
1778          *
1779          * Parameters:
1780          *  None
1781          *
1782          * Return:
1783          *  None
1784          *
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 30  

1785          * Reentrant:
1786          *  No
1787          *
1788          *******************************************************************************/
1789          static void CyPmHviLviSaveDisable(void) 
1790          {
1791   1          if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVID_EN))
1792   1          {
1793   2              cyPmBackup.lvidEn = CY_PM_ENABLED;
1794   2              cyPmBackup.lvidTrip = CY_VD_LVI_TRIP_REG & CY_VD_LVI_TRIP_LVID_MASK;
1795   2      
1796   2              /* Save state of reset device at specified Vddd threshold */
1797   2              cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
1798   2                                   CY_PM_DISABLED : CY_PM_ENABLED;
1799   2      
1800   2              CyVdLvDigitDisable();
1801   2          }
1802   1          else
1803   1          {
1804   2              cyPmBackup.lvidEn = CY_PM_DISABLED;
1805   2          }
1806   1      
1807   1          if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVIA_EN))
1808   1          {
1809   2              cyPmBackup.lviaEn = CY_PM_ENABLED;
1810   2              cyPmBackup.lviaTrip = CY_VD_LVI_TRIP_REG >> 4u;
1811   2      
1812   2              /* Save state of reset device at specified Vdda threshold */
1813   2              cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
1814   2                                   CY_PM_DISABLED : CY_PM_ENABLED;
1815   2      
1816   2              CyVdLvAnalogDisable();
1817   2          }
1818   1          else
1819   1          {
1820   2              cyPmBackup.lviaEn = CY_PM_DISABLED;
1821   2          }
1822   1      
1823   1          if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_HVIA_EN))
1824   1          {
1825   2              cyPmBackup.hviaEn = CY_PM_ENABLED;
1826   2              CyVdHvAnalogDisable();
1827   2          }
1828   1          else
1829   1          {
1830   2              cyPmBackup.hviaEn = CY_PM_DISABLED;
1831   2          }
1832   1      }
1833          
1834          
1835          /*******************************************************************************
1836          * Function Name: CyPmHviLviRestore
1837          ********************************************************************************
1838          *
1839          * Summary:
1840          *  Restores the analog and digital LVI and HVI configuration.
1841          *
1842          * Parameters:
1843          *  None
1844          *
1845          * Return:
1846          *  None
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 31  

1847          *
1848          * Reentrant:
1849          *  No
1850          *
1851          *******************************************************************************/
1852          static void CyPmHviLviRestore(void) 
1853          {
1854   1          /* Restore LVI/HVI configuration */
1855   1          if(CY_PM_ENABLED == cyPmBackup.lvidEn)
1856   1          {
1857   2              CyVdLvDigitEnable(cyPmBackup.lvidRst, cyPmBackup.lvidTrip);
1858   2          }
1859   1      
1860   1          if(CY_PM_ENABLED == cyPmBackup.lviaEn)
1861   1          {
1862   2              CyVdLvAnalogEnable(cyPmBackup.lviaRst, cyPmBackup.lviaTrip);
1863   2          }
1864   1      
1865   1          if(CY_PM_ENABLED == cyPmBackup.hviaEn)
1866   1          {
1867   2              CyVdHvAnalogEnable();
1868   2          }
1869   1      }
1870          
1871          
1872          /* [] END OF FILE */
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 32  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION CyPmSaveClocks (BEGIN)
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 83
0000 9043A1            MOV     DPTR,#043A1H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 540F              ANL     A,#0FH
0008 FF                MOV     R7,A
0009 900000      R     MOV     DPTR,#cyPmClockBackup
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 84
000E 9043A2            MOV     DPTR,#043A2H
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900000      R     MOV     DPTR,#cyPmClockBackup+01H
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
0018 9043A1            MOV     DPTR,#043A1H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E 54F0              ANL     A,#0F0H
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 86
0023 9043A2            MOV     DPTR,#043A2H
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 5400              ANL     A,#00H
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 89
002E 904800            MOV     DPTR,#04800H
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 54C0              ANL     A,#0C0H
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#cyPmClockBackup+05H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
003C 7F2D              MOV     R7,#02DH
003E 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 93
0041 904200            MOV     DPTR,#04200H
0044 E0                MOVX    A,@DPTR
0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 5407              ANL     A,#07H
0049 FF                MOV     R7,A
004A 900000      R     MOV     DPTR,#cyPmClockBackup+03H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 33  

004D EF                MOV     A,R7
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 94
004F 904200            MOV     DPTR,#04200H
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 5440              ANL     A,#040H
0057 FF                MOV     R7,A
0058 900000      R     MOV     DPTR,#cyPmClockBackup+04H
005B EF                MOV     A,R7
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
005D 904200            MOV     DPTR,#04200H
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 5410              ANL     A,#010H
0065 FF                MOV     R7,A
0066 7E00              MOV     R6,#00H
0068 EF                MOV     A,R7
0069 4E                ORL     A,R6
006A 6008              JZ      ?C0001
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 100
006C 900000      R     MOV     DPTR,#cyPmClockBackup+09H
006F 7401              MOV     A,#01H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
0072 8005              SJMP    ?C0002
0074         ?C0001:
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 105
0074 900000      R     MOV     DPTR,#cyPmClockBackup+09H
0077 E4                CLR     A
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
0079         ?C0002:
                                           ; SOURCE LINE # 109
0079 904005            MOV     DPTR,#04005H
007C E0                MOVX    A,@DPTR
007D FF                MOV     R7,A
007E EF                MOV     A,R7
007F 5403              ANL     A,#03H
0081 FF                MOV     R7,A
0082 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
0087 900000      R     MOV     DPTR,#cyPmClockBackup+02H
008A E0                MOVX    A,@DPTR
008B FF                MOV     R7,A
008C EF                MOV     A,R7
008D 6401              XRL     A,#01H
008F 7034              JNZ     ?C0003
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
0091 904000            MOV     DPTR,#04000H
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 5403              ANL     A,#03H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 34  

0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B 120000      E     LCALL   ?C?CCASE
009E 0000        R     DW      ?C0005
00A0 00                DB      00H
00A1 0000        R     DW      ?C0006
00A3 01                DB      01H
00A4 0000        R     DW      ?C0007
00A6 02                DB      02H
00A7 0000              DW      00H
00A9 0000        R     DW      ?C0008
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
00AB         ?C0005:
                                           ; SOURCE LINE # 117
00AB 7F00              MOV     R7,#00H
00AD 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 118
00B0 8013              SJMP    ?C0003
                                           ; SOURCE LINE # 120
00B2         ?C0006:
                                           ; SOURCE LINE # 121
00B2 7F02              MOV     R7,#02H
00B4 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 122
00B7 800C              SJMP    ?C0003
                                           ; SOURCE LINE # 124
00B9         ?C0007:
                                           ; SOURCE LINE # 125
00B9 7F03              MOV     R7,#03H
00BB 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 126
00BE 8005              SJMP    ?C0003
                                           ; SOURCE LINE # 128
00C0         ?C0008:
                                           ; SOURCE LINE # 129
00C0 7F00              MOV     R7,#00H
00C2 120000      E     LCALL   _?CyHalt
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
00C5         ?C0003:
                                           ; SOURCE LINE # 135
00C5 904220            MOV     DPTR,#04220H
00C8 E0                MOVX    A,@DPTR
00C9 FF                MOV     R7,A
00CA EF                MOV     A,R7
00CB 5401              ANL     A,#01H
00CD FF                MOV     R7,A
00CE 7E00              MOV     R6,#00H
00D0 EF                MOV     A,R7
00D1 4E                ORL     A,R6
00D2 600B              JZ      ?C0010
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 138
00D4 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
00D7 7401              MOV     A,#01H
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
00DA 120000      E     LCALL   CyPLL_OUT_Stop
                                           ; SOURCE LINE # 140
00DD 8005              SJMP    ?C0011
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 35  

00DF         ?C0010:
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 144
00DF 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
00E2 E4                CLR     A
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
00E4         ?C0011:
                                           ; SOURCE LINE # 148
00E4 7F04              MOV     R7,#04H
00E6 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 151
00E9 9043A0            MOV     DPTR,#043A0H
00EC E0                MOVX    A,@DPTR
00ED FF                MOV     R7,A
00EE EF                MOV     A,R7
00EF 5410              ANL     A,#010H
00F1 FF                MOV     R7,A
00F2 7E00              MOV     R6,#00H
00F4 EF                MOV     A,R7
00F5 4E                ORL     A,R6
00F6 6008              JZ      ?C0012
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 154
00F8 900000      R     MOV     DPTR,#cyPmClockBackup+06H
00FB 7401              MOV     A,#01H
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
00FE 8011              SJMP    ?C0013
0100         ?C0012:
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 159
0100 900000      R     MOV     DPTR,#cyPmClockBackup+06H
0103 E4                CLR     A
0104 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
0105 7F00              MOV     R7,#00H
0107 120000      E     LCALL   _CyIMO_Start
                                           ; SOURCE LINE # 165
010A 7F06              MOV     R7,#06H
010C 7E00              MOV     R6,#00H
010E 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 166
0111         ?C0013:
                                           ; SOURCE LINE # 169
0111 904200            MOV     DPTR,#04200H
0114 E0                MOVX    A,@DPTR
0115 FF                MOV     R7,A
0116 EF                MOV     A,R7
0117 5420              ANL     A,#020H
0119 FF                MOV     R7,A
011A 7E00              MOV     R6,#00H
011C EF                MOV     A,R7
011D 4E                ORL     A,R6
011E 6021              JZ      ?C0014
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 173
0120 904000            MOV     DPTR,#04000H
0123 E0                MOVX    A,@DPTR
0124 FF                MOV     R7,A
0125 EF                MOV     A,R7
0126 5440              ANL     A,#040H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 36  

0128 FF                MOV     R7,A
0129 7E00              MOV     R6,#00H
012B EF                MOV     A,R7
012C 4E                ORL     A,R6
012D 7004              JNZ     ?C0015
012F 7F02              MOV     R7,#02H
0131 8002              SJMP    ?C0016
0133         ?C0015:
0133 7F01              MOV     R7,#01H
0135         ?C0016:
0135 900000      R     MOV     DPTR,#cyPmClockBackup+07H
0138 EF                MOV     A,R7
0139 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
013A 7F00              MOV     R7,#00H
013C 120000      E     LCALL   _CyIMO_SetSource
                                           ; SOURCE LINE # 177
013F 8005              SJMP    ?C0017
0141         ?C0014:
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 181
0141 900000      R     MOV     DPTR,#cyPmClockBackup+07H
0144 E4                CLR     A
0145 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
0146         ?C0017:
                                           ; SOURCE LINE # 185
0146 904000            MOV     DPTR,#04000H
0149 E0                MOVX    A,@DPTR
014A FF                MOV     R7,A
014B EF                MOV     A,R7
014C 5430              ANL     A,#030H
014E FF                MOV     R7,A
014F 900000      R     MOV     DPTR,#cyPmClockBackup+08H
0152 EF                MOV     A,R7
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
0154 900000      R     MOV     DPTR,#cyPmClockBackup+08H
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 600B              JZ      ?C0018
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 191
015C 904000            MOV     DPTR,#04000H
015F E0                MOVX    A,@DPTR
0160 FF                MOV     R7,A
0161 EF                MOV     A,R7
0162 54CF              ANL     A,#0CFH
0164 FF                MOV     R7,A
0165 EF                MOV     A,R7
0166 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
0167         ?C0018:
                                           ; SOURCE LINE # 196
0167 904200            MOV     DPTR,#04200H
016A E0                MOVX    A,@DPTR
016B FF                MOV     R7,A
016C EF                MOV     A,R7
016D 5410              ANL     A,#010H
016F FF                MOV     R7,A
0170 7E00              MOV     R6,#00H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 37  

0172 EF                MOV     A,R7
0173 4E                ORL     A,R6
0174 6003              JZ      ?C0019
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
0176 120000      E     LCALL   CyIMO_DisableDoubler
                                           ; SOURCE LINE # 199
0179         ?C0019:
                                           ; SOURCE LINE # 202
0179 904004            MOV     DPTR,#04004H
017C E0                MOVX    A,@DPTR
017D FF                MOV     R7,A
017E 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0181 EF                MOV     A,R7
0182 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
0183 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0186 E0                MOVX    A,@DPTR
0187 FF                MOV     R7,A
0188 EF                MOV     A,R7
0189 6005              JZ      ?C0020
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
018B 7F00              MOV     R7,#00H
018D 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 206
0190         ?C0020:
                                           ; SOURCE LINE # 209
0190 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0193 E0                MOVX    A,@DPTR
0194 FF                MOV     R7,A
0195 EF                MOV     A,R7
0196 6005              JZ      ?C0021
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
0198 7F00              MOV     R7,#00H
019A 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 212
019D         ?C0021:
                                           ; SOURCE LINE # 215
019D 904007            MOV     DPTR,#04007H
01A0 E0                MOVX    A,@DPTR
01A1 FF                MOV     R7,A
01A2 7E00              MOV     R6,#00H
01A4 EF                MOV     A,R7
01A5 7F00              MOV     R7,#00H
01A7 FE                MOV     R6,A
01A8 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
01AB EE                MOV     A,R6
01AC F0                MOVX    @DPTR,A
01AD A3                INC     DPTR
01AE EF                MOV     A,R7
01AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
01B0 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
01B3 E0                MOVX    A,@DPTR
01B4 FE                MOV     R6,A
01B5 A3                INC     DPTR
01B6 E0                MOVX    A,@DPTR
01B7 FF                MOV     R7,A
01B8 904006            MOV     DPTR,#04006H
01BB E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 38  

01BC FD                MOV     R5,A
01BD 7C00              MOV     R4,#00H
01BF EE                MOV     A,R6
01C0 4C                ORL     A,R4
01C1 FE                MOV     R6,A
01C2 EF                MOV     A,R7
01C3 4D                ORL     A,R5
01C4 FF                MOV     R7,A
01C5 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
01C8 EE                MOV     A,R6
01C9 F0                MOVX    @DPTR,A
01CA A3                INC     DPTR
01CB EF                MOV     A,R7
01CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
01CD 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
01D0 E0                MOVX    A,@DPTR
01D1 FE                MOV     R6,A
01D2 A3                INC     DPTR
01D3 E0                MOVX    A,@DPTR
01D4 FF                MOV     R7,A
01D5 EF                MOV     A,R7
01D6 4E                ORL     A,R6
01D7 6007              JZ      ?C0022
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
01D9 7F00              MOV     R7,#00H
01DB 7E00              MOV     R6,#00H
01DD 120000      E     LCALL   _CyBusClk_SetDivider
                                           ; SOURCE LINE # 220
01E0         ?C0022:
                                           ; SOURCE LINE # 223
01E0 904005            MOV     DPTR,#04005H
01E3 E0                MOVX    A,@DPTR
01E4 FF                MOV     R7,A
01E5 EF                MOV     A,R7
01E6 54F0              ANL     A,#0F0H
01E8 FF                MOV     R7,A
01E9 7E00              MOV     R6,#00H
01EB EE                MOV     A,R6
01EC C4                SWAP    A
01ED F8                MOV     R0,A
01EE 54F0              ANL     A,#0F0H
01F0 C8                XCH     A,R0
01F1 68                XRL     A,R0
01F2 FE                MOV     R6,A
01F3 EF                MOV     A,R7
01F4 C4                SWAP    A
01F5 540F              ANL     A,#0FH
01F7 48                ORL     A,R0
01F8 FF                MOV     R7,A
01F9 EF                MOV     A,R7
01FA 04                INC     A
01FB FF                MOV     R7,A
01FC AB07              MOV     R3,AR7
01FE E4                CLR     A
01FF FA                MOV     R2,A
0200 F9                MOV     R1,A
0201 F8                MOV     R0,A
0202 904200            MOV     DPTR,#04200H
0205 E0                MOVX    A,@DPTR
0206 FF                MOV     R7,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 39  

0207 EF                MOV     A,R7
0208 5407              ANL     A,#07H
020A FF                MOV     R7,A
020B EF                MOV     A,R7
020C 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
020F 93                MOVC    A,@A+DPTR
0210 FF                MOV     R7,A
0211 E4                CLR     A
0212 FC                MOV     R4,A
0213 FD                MOV     R5,A
0214 FE                MOV     R6,A
0215 120000      E     LCALL   ?C?ULDIV
0218 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 226
021B 904210            MOV     DPTR,#04210H
021E E0                MOVX    A,@DPTR
021F FF                MOV     R7,A
0220 EF                MOV     A,R7
0221 5401              ANL     A,#01H
0223 FF                MOV     R7,A
0224 7E00              MOV     R6,#00H
0226 EF                MOV     A,R7
0227 4E                ORL     A,R6
0228 600B              JZ      ?C0023
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 229
022A 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
022D 7401              MOV     A,#01H
022F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
0230 120000      E     LCALL   CyXTAL_Stop
                                           ; SOURCE LINE # 231
0233 8005              SJMP    ?C0024
0235         ?C0023:
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 235
0235 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
0238 E4                CLR     A
0239 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 236
023A         ?C0024:
                                           ; SOURCE LINE # 244
023A 90400B            MOV     DPTR,#0400BH
023D E0                MOVX    A,@DPTR
023E FF                MOV     R7,A
023F EF                MOV     A,R7
0240 5404              ANL     A,#04H
0242 FF                MOV     R7,A
0243 7E00              MOV     R6,#00H
0245 EF                MOV     A,R7
0246 4E                ORL     A,R6
0247 6007              JZ      ?C0025
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
0249 900000      R     MOV     DPTR,#cyPmClockBackup+0FH
024C 7401              MOV     A,#01H
024E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
024F 22                RET     
0250         ?C0025:
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 40  

0250 900000      R     MOV     DPTR,#cyPmClockBackup+0FH
0253 E4                CLR     A
0254 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
0255         ?C0027:
0255 22                RET     
             ; FUNCTION CyPmSaveClocks (END)

             ; FUNCTION CyPmRestoreClocks (BEGIN)
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
0000 900000      R     MOV     DPTR,#status
0003 7410              MOV     A,#010H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
0006 900000      R     MOV     DPTR,#cyPmClockBackup+0FH
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B EF                MOV     A,R7
000C 6401              XRL     A,#01H
000E 7051              JNZ     ?C0028
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 299
0010 904005            MOV     DPTR,#04005H
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 54F0              ANL     A,#0F0H
0018 FF                MOV     R7,A
0019 7E00              MOV     R6,#00H
001B EE                MOV     A,R6
001C C4                SWAP    A
001D F8                MOV     R0,A
001E 54F0              ANL     A,#0F0H
0020 C8                XCH     A,R0
0021 68                XRL     A,R0
0022 FE                MOV     R6,A
0023 EF                MOV     A,R7
0024 C4                SWAP    A
0025 540F              ANL     A,#0FH
0027 48                ORL     A,R0
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 04                INC     A
002B FF                MOV     R7,A
002C AB07              MOV     R3,AR7
002E E4                CLR     A
002F FA                MOV     R2,A
0030 F9                MOV     R1,A
0031 F8                MOV     R0,A
0032 904200            MOV     DPTR,#04200H
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 EF                MOV     A,R7
0038 5407              ANL     A,#07H
003A FF                MOV     R7,A
003B EF                MOV     A,R7
003C 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
003F 93                MOVC    A,@A+DPTR
0040 FF                MOV     R7,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 41  

0041 E4                CLR     A
0042 FC                MOV     R4,A
0043 FD                MOV     R5,A
0044 FE                MOV     R6,A
0045 120000      E     LCALL   ?C?ULDIV
0048 7B4B              MOV     R3,#04BH
004A 7A00              MOV     R2,#00H
004C 7900              MOV     R1,#00H
004E 7800              MOV     R0,#00H
0050 120000      E     LCALL   ?C?LMUL
0053 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 301
0056 90400B            MOV     DPTR,#0400BH
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B EF                MOV     A,R7
005C 4404              ORL     A,#04H
005E FF                MOV     R7,A
005F EF                MOV     A,R7
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
0061         ?C0028:
                                           ; SOURCE LINE # 305
0061 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 6401              XRL     A,#01H
0069 6003              JZ      $ + 5H
006B 020000      R     LJMP    ?C0029
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 315
006E 7F00              MOV     R7,#00H
0070 120000      E     LCALL   _CyXTAL_Start
                                           ; SOURCE LINE # 318
0073 904210            MOV     DPTR,#04210H
0076 E0                MOVX    A,@DPTR
0077 FF                MOV     R7,A
                                           ; SOURCE LINE # 321
0078 900000      R     MOV     DPTR,#i
007B E4                CLR     A
007C F0                MOVX    @DPTR,A
007D A3                INC     DPTR
007E 7405              MOV     A,#05H
0080 F0                MOVX    @DPTR,A
0081         ?C0030:
0081 900000      R     MOV     DPTR,#i
0084 E0                MOVX    A,@DPTR
0085 FE                MOV     R6,A
0086 A3                INC     DPTR
0087 E0                MOVX    A,@DPTR
0088 FF                MOV     R7,A
0089 D3                SETB    C
008A EF                MOV     A,R7
008B 9400              SUBB    A,#00H
008D EE                MOV     A,R6
008E 9400              SUBB    A,#00H
0090 4069              JC      ?C0031
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 324
0092 904005            MOV     DPTR,#04005H
0095 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 42  

0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 54F0              ANL     A,#0F0H
009A FF                MOV     R7,A
009B 7E00              MOV     R6,#00H
009D EE                MOV     A,R6
009E C4                SWAP    A
009F F8                MOV     R0,A
00A0 54F0              ANL     A,#0F0H
00A2 C8                XCH     A,R0
00A3 68                XRL     A,R0
00A4 FE                MOV     R6,A
00A5 EF                MOV     A,R7
00A6 C4                SWAP    A
00A7 540F              ANL     A,#0FH
00A9 48                ORL     A,R0
00AA FF                MOV     R7,A
00AB EF                MOV     A,R7
00AC 04                INC     A
00AD FF                MOV     R7,A
00AE AB07              MOV     R3,AR7
00B0 E4                CLR     A
00B1 FA                MOV     R2,A
00B2 F9                MOV     R1,A
00B3 F8                MOV     R0,A
00B4 904200            MOV     DPTR,#04200H
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 EF                MOV     A,R7
00BA 5407              ANL     A,#07H
00BC FF                MOV     R7,A
00BD EF                MOV     A,R7
00BE 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
00C1 93                MOVC    A,@A+DPTR
00C2 FF                MOV     R7,A
00C3 E4                CLR     A
00C4 FC                MOV     R4,A
00C5 FD                MOV     R5,A
00C6 FE                MOV     R6,A
00C7 120000      E     LCALL   ?C?ULDIV
00CA 7BC8              MOV     R3,#0C8H
00CC 7A00              MOV     R2,#00H
00CE 7900              MOV     R1,#00H
00D0 7800              MOV     R0,#00H
00D2 120000      E     LCALL   ?C?LMUL
00D5 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 327
00D8 904210            MOV     DPTR,#04210H
00DB E0                MOVX    A,@DPTR
00DC FF                MOV     R7,A
00DD EF                MOV     A,R7
00DE 5480              ANL     A,#080H
00E0 FF                MOV     R7,A
00E1 7E00              MOV     R6,#00H
00E3 EF                MOV     A,R7
00E4 4E                ORL     A,R6
00E5 7007              JNZ     ?C0032
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
00E7 900000      R     MOV     DPTR,#status
00EA E4                CLR     A
00EB F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 43  

                                           ; SOURCE LINE # 330
00EC 800D              SJMP    ?C0031
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 332
00EE         ?C0032:
00EE 900000      R     MOV     DPTR,#i
00F1 74FF              MOV     A,#0FFH
00F3 75F0FF            MOV     B,#0FFH
00F6 120000      E     LCALL   ?C?IILDX
00F9 8086              SJMP    ?C0030
00FB         ?C0031:
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 335
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 344
00FB         ?C0029:
                                           ; SOURCE LINE # 348
00FB 7F2D              MOV     R7,#02DH
00FD 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 351
0100 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0103 E0                MOVX    A,@DPTR
0104 FF                MOV     R7,A
0105 EF                MOV     A,R7
0106 6402              XRL     A,#02H
0108 6009              JZ      ?C0036
010A 900000      R     MOV     DPTR,#cyPmClockBackup+02H
010D E0                MOVX    A,@DPTR
010E FF                MOV     R7,A
010F EF                MOV     A,R7
0110 B4031E            CJNE    A,#03H,?C0035
0113         ?C0036:
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 355
0113 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0116 E0                MOVX    A,@DPTR
0117 FF                MOV     R7,A
0118 904004            MOV     DPTR,#04004H
011B E0                MOVX    A,@DPTR
011C FE                MOV     R6,A
011D EE                MOV     A,R6
011E 6F                XRL     A,R7
011F 6008              JZ      ?C0037
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 358
0121 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 359
0129         ?C0037:
                                           ; SOURCE LINE # 362
0129 900000      R     MOV     DPTR,#cyPmClockBackup+02H
012C E0                MOVX    A,@DPTR
012D FF                MOV     R7,A
012E 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 363
0131         ?C0035:
                                           ; SOURCE LINE # 366
0131 900000      R     MOV     DPTR,#cyPmClockBackup+04H
0134 E0                MOVX    A,@DPTR
0135 FF                MOV     R7,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 44  

0136 EF                MOV     A,R7
0137 5440              ANL     A,#040H
0139 FF                MOV     R7,A
013A 7E00              MOV     R6,#00H
013C EF                MOV     A,R7
013D 4E                ORL     A,R6
013E 6016              JZ      ?C0038
0140 900000      R     MOV     DPTR,#cyPmClockBackup+03H
0143 E0                MOVX    A,@DPTR
0144 FF                MOV     R7,A
0145 EF                MOV     A,R7
0146 900000      R     MOV     DPTR,#cyPmImoFreqMhz2Reg
0149 93                MOVC    A,@A+DPTR
014A FF                MOV     R7,A
014B EF                MOV     A,R7
014C B40307            CJNE    A,#03H,?C0038
                                           ; SOURCE LINE # 368
                                           ; SOURCE LINE # 370
014F 7F08              MOV     R7,#08H
0151 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 371
0154 8035              SJMP    ?C0039
0156         ?C0038:
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 375
0156 900000      R     MOV     DPTR,#cyPmClockBackup+03H
0159 E0                MOVX    A,@DPTR
015A FF                MOV     R7,A
015B EF                MOV     A,R7
015C 900000      R     MOV     DPTR,#cyPmImoFreqMhz2Reg
015F 93                MOVC    A,@A+DPTR
0160 FF                MOV     R7,A
0161 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 377
0164 900000      R     MOV     DPTR,#cyPmClockBackup+04H
0167 E0                MOVX    A,@DPTR
0168 FF                MOV     R7,A
0169 EF                MOV     A,R7
016A 5440              ANL     A,#040H
016C FF                MOV     R7,A
016D 7E00              MOV     R6,#00H
016F EF                MOV     A,R7
0170 4E                ORL     A,R6
0171 600D              JZ      ?C0040
                                           ; SOURCE LINE # 378
                                           ; SOURCE LINE # 379
0173 904200            MOV     DPTR,#04200H
0176 E0                MOVX    A,@DPTR
0177 FF                MOV     R7,A
0178 EF                MOV     A,R7
0179 4440              ORL     A,#040H
017B FF                MOV     R7,A
017C EF                MOV     A,R7
017D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 380
017E 800B              SJMP    ?C0039
0180         ?C0040:
                                           ; SOURCE LINE # 382
                                           ; SOURCE LINE # 383
0180 904200            MOV     DPTR,#04200H
0183 E0                MOVX    A,@DPTR
0184 FF                MOV     R7,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 45  

0185 EF                MOV     A,R7
0186 54BF              ANL     A,#0BFH
0188 FF                MOV     R7,A
0189 EF                MOV     A,R7
018A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 384
                                           ; SOURCE LINE # 385
018B         ?C0039:
                                           ; SOURCE LINE # 389
018B 900000      R     MOV     DPTR,#cyPmClockBackup+06H
018E E0                MOVX    A,@DPTR
018F FF                MOV     R7,A
0190 EF                MOV     A,R7
0191 B40114            CJNE    A,#01H,?C0042
0194 9043A0            MOV     DPTR,#043A0H
0197 E0                MOVX    A,@DPTR
0198 FF                MOV     R7,A
0199 EF                MOV     A,R7
019A 5410              ANL     A,#010H
019C FF                MOV     R7,A
019D 7E00              MOV     R6,#00H
019F EF                MOV     A,R7
01A0 4E                ORL     A,R6
01A1 7005              JNZ     ?C0042
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 392
01A3 7F00              MOV     R7,#00H
01A5 120000      E     LCALL   _CyIMO_Start
                                           ; SOURCE LINE # 393
01A8         ?C0042:
                                           ; SOURCE LINE # 396
01A8 900000      R     MOV     DPTR,#cyPmClockBackup+07H
01AB E0                MOVX    A,@DPTR
01AC FF                MOV     R7,A
01AD 120000      E     LCALL   _CyIMO_SetSource
                                           ; SOURCE LINE # 399
01B0 900000      R     MOV     DPTR,#cyPmClockBackup+09H
01B3 E0                MOVX    A,@DPTR
01B4 FF                MOV     R7,A
01B5 EF                MOV     A,R7
01B6 B40103            CJNE    A,#01H,?C0043
                                           ; SOURCE LINE # 400
                                           ; SOURCE LINE # 401
01B9 120000      E     LCALL   CyIMO_EnableDoubler
                                           ; SOURCE LINE # 402
01BC         ?C0043:
                                           ; SOURCE LINE # 405
01BC 904000            MOV     DPTR,#04000H
01BF E0                MOVX    A,@DPTR
01C0 FF                MOV     R7,A
01C1 EF                MOV     A,R7
01C2 5430              ANL     A,#030H
01C4 FF                MOV     R7,A
01C5 7E00              MOV     R6,#00H
01C7 900000      R     MOV     DPTR,#cyPmClockBackup+08H
01CA E0                MOVX    A,@DPTR
01CB FD                MOV     R5,A
01CC 7C00              MOV     R4,#00H
01CE ED                MOV     A,R5
01CF 6F                XRL     A,R7
01D0 7002              JNZ     ?C0136
01D2 EC                MOV     A,R4
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 46  

01D3 6E                XRL     A,R6
01D4         ?C0136:
01D4 6016              JZ      ?C0044
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 407
01D6 904000            MOV     DPTR,#04000H
01D9 E0                MOVX    A,@DPTR
01DA FF                MOV     R7,A
01DB EF                MOV     A,R7
01DC 54CF              ANL     A,#0CFH
01DE FF                MOV     R7,A
01DF 900000      R     MOV     DPTR,#cyPmClockBackup+08H
01E2 E0                MOVX    A,@DPTR
01E3 FE                MOV     R6,A
01E4 EF                MOV     A,R7
01E5 4E                ORL     A,R6
01E6 FF                MOV     R7,A
01E7 904000            MOV     DPTR,#04000H
01EA EF                MOV     A,R7
01EB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 409
01EC         ?C0044:
                                           ; SOURCE LINE # 413
01EC 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
01EF E0                MOVX    A,@DPTR
01F0 FF                MOV     R7,A
01F1 EF                MOV     A,R7
01F2 6401              XRL     A,#01H
01F4 706A              JNZ     ?C0045
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 421
01F6 900000      R     MOV     DPTR,#status
01F9 7410              MOV     A,#010H
01FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 424
01FC 7F00              MOV     R7,#00H
01FE 120000      E     LCALL   _CyPLL_OUT_Start
                                           ; SOURCE LINE # 427
0201 7F50              MOV     R7,#050H
0203 7E00              MOV     R6,#00H
0205 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 428
0208 904225            MOV     DPTR,#04225H
020B E0                MOVX    A,@DPTR
020C FF                MOV     R7,A
                                           ; SOURCE LINE # 431
020D 900000      R     MOV     DPTR,#i
0210 E4                CLR     A
0211 F0                MOVX    @DPTR,A
0212 A3                INC     DPTR
0213 74AB              MOV     A,#0ABH
0215 F0                MOVX    @DPTR,A
0216         ?C0046:
0216 900000      R     MOV     DPTR,#i
0219 E0                MOVX    A,@DPTR
021A FE                MOV     R6,A
021B A3                INC     DPTR
021C E0                MOVX    A,@DPTR
021D FF                MOV     R7,A
021E D3                SETB    C
021F EF                MOV     A,R7
0220 9400              SUBB    A,#00H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 47  

0222 EE                MOV     A,R6
0223 9400              SUBB    A,#00H
0225 4039              JC      ?C0047
                                           ; SOURCE LINE # 432
                                           ; SOURCE LINE # 433
0227 7F01              MOV     R7,#01H
0229 7E00              MOV     R6,#00H
022B 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 437
022E 904225            MOV     DPTR,#04225H
0231 E0                MOVX    A,@DPTR
0232 FF                MOV     R7,A
0233 EF                MOV     A,R7
0234 5401              ANL     A,#01H
0236 FF                MOV     R7,A
0237 7E00              MOV     R6,#00H
0239 EF                MOV     A,R7
023A 4E                ORL     A,R6
023B 6016              JZ      ?C0048
023D 904225            MOV     DPTR,#04225H
0240 E0                MOVX    A,@DPTR
0241 FF                MOV     R7,A
0242 EF                MOV     A,R7
0243 5401              ANL     A,#01H
0245 FF                MOV     R7,A
0246 7E00              MOV     R6,#00H
0248 EF                MOV     A,R7
0249 4E                ORL     A,R6
024A 6007              JZ      ?C0048
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 439
024C 900000      R     MOV     DPTR,#status
024F E4                CLR     A
0250 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 440
0251 800D              SJMP    ?C0047
                                           ; SOURCE LINE # 441
                                           ; SOURCE LINE # 442
0253         ?C0048:
0253 900000      R     MOV     DPTR,#i
0256 74FF              MOV     A,#0FFH
0258 75F0FF            MOV     B,#0FFH
025B 120000      E     LCALL   ?C?IILDX
025E 80B6              SJMP    ?C0046
0260         ?C0047:
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 452
                                           ; SOURCE LINE # 453
0260         ?C0045:
                                           ; SOURCE LINE # 457
0260 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0263 E0                MOVX    A,@DPTR
0264 FF                MOV     R7,A
0265 EF                MOV     A,R7
0266 6009              JZ      ?C0052
0268 900000      R     MOV     DPTR,#cyPmClockBackup+02H
026B E0                MOVX    A,@DPTR
026C FF                MOV     R7,A
026D EF                MOV     A,R7
026E B4011E            CJNE    A,#01H,?C0051
0271         ?C0052:
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 48  

                                           ; SOURCE LINE # 459
                                           ; SOURCE LINE # 461
0271 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0274 E0                MOVX    A,@DPTR
0275 FF                MOV     R7,A
0276 904004            MOV     DPTR,#04004H
0279 E0                MOVX    A,@DPTR
027A FE                MOV     R6,A
027B EE                MOV     A,R6
027C 6F                XRL     A,R7
027D 6008              JZ      ?C0053
                                           ; SOURCE LINE # 462
                                           ; SOURCE LINE # 463
027F 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0282 E0                MOVX    A,@DPTR
0283 FF                MOV     R7,A
0284 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 464
0287         ?C0053:
                                           ; SOURCE LINE # 467
0287 900000      R     MOV     DPTR,#cyPmClockBackup+02H
028A E0                MOVX    A,@DPTR
028B FF                MOV     R7,A
028C 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 468
028F         ?C0051:
                                           ; SOURCE LINE # 472
028F 900000      R     MOV     DPTR,#cyPmClockBackup+06H
0292 E0                MOVX    A,@DPTR
0293 FF                MOV     R7,A
0294 EF                MOV     A,R7
0295 7012              JNZ     ?C0054
0297 9043A0            MOV     DPTR,#043A0H
029A E0                MOVX    A,@DPTR
029B FF                MOV     R7,A
029C EF                MOV     A,R7
029D 5410              ANL     A,#010H
029F FF                MOV     R7,A
02A0 7E00              MOV     R6,#00H
02A2 EF                MOV     A,R7
02A3 4E                ORL     A,R6
02A4 6003              JZ      ?C0054
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 474
02A6 120000      E     LCALL   CyIMO_Stop
                                           ; SOURCE LINE # 475
02A9         ?C0054:
                                           ; SOURCE LINE # 478
02A9 904007            MOV     DPTR,#04007H
02AC E0                MOVX    A,@DPTR
02AD FF                MOV     R7,A
02AE 7E00              MOV     R6,#00H
02B0 EF                MOV     A,R7
02B1 7F00              MOV     R7,#00H
02B3 FE                MOV     R6,A
02B4 900000      R     MOV     DPTR,#clkBusDivTmp
02B7 EE                MOV     A,R6
02B8 F0                MOVX    @DPTR,A
02B9 A3                INC     DPTR
02BA EF                MOV     A,R7
02BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 49  

02BC 900000      R     MOV     DPTR,#clkBusDivTmp
02BF E0                MOVX    A,@DPTR
02C0 FE                MOV     R6,A
02C1 A3                INC     DPTR
02C2 E0                MOVX    A,@DPTR
02C3 FF                MOV     R7,A
02C4 904006            MOV     DPTR,#04006H
02C7 E0                MOVX    A,@DPTR
02C8 FD                MOV     R5,A
02C9 7C00              MOV     R4,#00H
02CB EE                MOV     A,R6
02CC 4C                ORL     A,R4
02CD FE                MOV     R6,A
02CE EF                MOV     A,R7
02CF 4D                ORL     A,R5
02D0 FF                MOV     R7,A
02D1 900000      R     MOV     DPTR,#clkBusDivTmp
02D4 EE                MOV     A,R6
02D5 F0                MOVX    @DPTR,A
02D6 A3                INC     DPTR
02D7 EF                MOV     A,R7
02D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
02D9 900000      R     MOV     DPTR,#clkBusDivTmp
02DC E0                MOVX    A,@DPTR
02DD FE                MOV     R6,A
02DE A3                INC     DPTR
02DF E0                MOVX    A,@DPTR
02E0 FF                MOV     R7,A
02E1 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
02E4 E0                MOVX    A,@DPTR
02E5 FC                MOV     R4,A
02E6 A3                INC     DPTR
02E7 E0                MOVX    A,@DPTR
02E8 FD                MOV     R5,A
02E9 ED                MOV     A,R5
02EA 6F                XRL     A,R7
02EB 7002              JNZ     ?C0137
02ED EC                MOV     A,R4
02EE 6E                XRL     A,R6
02EF         ?C0137:
02EF 600B              JZ      ?C0055
                                           ; SOURCE LINE # 481
                                           ; SOURCE LINE # 482
02F1 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
02F4 E0                MOVX    A,@DPTR
02F5 FE                MOV     R6,A
02F6 A3                INC     DPTR
02F7 E0                MOVX    A,@DPTR
02F8 FF                MOV     R7,A
02F9 120000      E     LCALL   _CyBusClk_SetDivider
                                           ; SOURCE LINE # 483
02FC         ?C0055:
                                           ; SOURCE LINE # 486
02FC 904800            MOV     DPTR,#04800H
02FF E0                MOVX    A,@DPTR
0300 FF                MOV     R7,A
0301 EF                MOV     A,R7
0302 543F              ANL     A,#03FH
0304 FF                MOV     R7,A
0305 900000      R     MOV     DPTR,#cyPmClockBackup+05H
0308 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 50  

0309 FE                MOV     R6,A
030A EF                MOV     A,R7
030B 4E                ORL     A,R6
030C FF                MOV     R7,A
030D 904800            MOV     DPTR,#04800H
0310 EF                MOV     A,R7
0311 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 490
0312 900000      R     MOV     DPTR,#cyPmClockBackup
0315 E0                MOVX    A,@DPTR
0316 FF                MOV     R7,A
0317 9043A1            MOV     DPTR,#043A1H
031A EF                MOV     A,R7
031B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 491
031C 900000      R     MOV     DPTR,#cyPmClockBackup+01H
031F E0                MOVX    A,@DPTR
0320 FF                MOV     R7,A
0321 9043A2            MOV     DPTR,#043A2H
0324 EF                MOV     A,R7
0325 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 492
0326 22                RET     
             ; FUNCTION CyPmRestoreClocks (END)

             ; FUNCTION _CyPmAltAct (BEGIN)
                                           ; SOURCE LINE # 636
0000 900000      R     MOV     DPTR,#wakeupTime
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 900000      R     MOV     DPTR,#wakeupSource
000B EC                MOV     A,R4
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E ED                MOV     A,R5
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
                                           ; SOURCE LINE # 654
0010 900000      R     MOV     DPTR,#wakeupTime
0013 E0                MOVX    A,@DPTR
0014 FE                MOV     R6,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 C3                CLR     C
0019 EF                MOV     A,R7
001A 940F              SUBB    A,#0FH
001C EE                MOV     A,R6
001D 9400              SUBB    A,#00H
001F 4034              JC      ?C0057
0021 900000      R     MOV     DPTR,#wakeupTime
0024 E0                MOVX    A,@DPTR
0025 FE                MOV     R6,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 D3                SETB    C
002A EF                MOV     A,R7
002B 940E              SUBB    A,#0EH
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 51  

002D EE                MOV     A,R6
002E 9401              SUBB    A,#01H
0030 5023              JNC     ?C0057
                                           ; SOURCE LINE # 655
                                           ; SOURCE LINE # 656
0032 900000      R     MOV     DPTR,#wakeupTime
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B 24F2              ADD     A,#0F2H
003D FF                MOV     R7,A
003E 120000      R     LCALL   _CyPmFtwSetInterval
                                           ; SOURCE LINE # 659
0041 900000      R     MOV     DPTR,#wakeupSource
0044 E0                MOVX    A,@DPTR
0045 FE                MOV     R6,A
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 FF                MOV     R7,A
0049 EE                MOV     A,R6
004A 4404              ORL     A,#04H
004C FE                MOV     R6,A
004D 900000      R     MOV     DPTR,#wakeupSource
0050 EE                MOV     A,R6
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 EF                MOV     A,R7
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 660
0055         ?C0057:
                                           ; SOURCE LINE # 663
0055 900000      R     MOV     DPTR,#wakeupTime
0058 E0                MOVX    A,@DPTR
0059 FE                MOV     R6,A
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D C3                CLR     C
005E EF                MOV     A,R7
005F 9402              SUBB    A,#02H
0061 EE                MOV     A,R6
0062 9400              SUBB    A,#00H
0064 4033              JC      ?C0058
0066 900000      R     MOV     DPTR,#wakeupTime
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E D3                SETB    C
006F EF                MOV     A,R7
0070 940D              SUBB    A,#0DH
0072 EE                MOV     A,R6
0073 9400              SUBB    A,#00H
0075 5022              JNC     ?C0058
                                           ; SOURCE LINE # 664
                                           ; SOURCE LINE # 666
0077 900000      R     MOV     DPTR,#wakeupTime
007A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 52  

007B FE                MOV     R6,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F EF                MOV     A,R7
0080 14                DEC     A
0081 FF                MOV     R7,A
0082 120000      R     LCALL   _CyPmCtwSetInterval
                                           ; SOURCE LINE # 669
0085 900000      R     MOV     DPTR,#wakeupSource
0088 E0                MOVX    A,@DPTR
0089 FE                MOV     R6,A
008A A3                INC     DPTR
008B E0                MOVX    A,@DPTR
008C FF                MOV     R7,A
008D EE                MOV     A,R6
008E 4408              ORL     A,#08H
0090 FE                MOV     R6,A
0091 900000      R     MOV     DPTR,#wakeupSource
0094 EE                MOV     A,R6
0095 F0                MOVX    @DPTR,A
0096 A3                INC     DPTR
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 670
0099         ?C0058:
                                           ; SOURCE LINE # 673
0099 900000      R     MOV     DPTR,#wakeupTime
009C E0                MOVX    A,@DPTR
009D FE                MOV     R6,A
009E A3                INC     DPTR
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 6401              XRL     A,#01H
00A4 4E                ORL     A,R6
00A5 7017              JNZ     ?C0059
                                           ; SOURCE LINE # 674
                                           ; SOURCE LINE # 676
00A7 120000      R     LCALL   CyPmOppsSet
                                           ; SOURCE LINE # 679
00AA 900000      R     MOV     DPTR,#wakeupSource
00AD E0                MOVX    A,@DPTR
00AE FE                MOV     R6,A
00AF A3                INC     DPTR
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 EE                MOV     A,R6
00B3 4408              ORL     A,#08H
00B5 FE                MOV     R6,A
00B6 900000      R     MOV     DPTR,#wakeupSource
00B9 EE                MOV     A,R6
00BA F0                MOVX    @DPTR,A
00BB A3                INC     DPTR
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 680
00BE         ?C0059:
                                           ; SOURCE LINE # 688
00BE 904398            MOV     DPTR,#04398H
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 53  

00C3 900000      R     MOV     DPTR,#cyPmBackup+07H
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 689
00C8 900000      R     MOV     DPTR,#wakeupSource
00CB E0                MOVX    A,@DPTR
00CC FE                MOV     R6,A
00CD A3                INC     DPTR
00CE E0                MOVX    A,@DPTR
00CF FF                MOV     R7,A
00D0 EE                MOV     A,R6
00D1 C4                SWAP    A
00D2 F8                MOV     R0,A
00D3 54F0              ANL     A,#0F0H
00D5 C8                XCH     A,R0
00D6 68                XRL     A,R0
00D7 FE                MOV     R6,A
00D8 EF                MOV     A,R7
00D9 C4                SWAP    A
00DA 540F              ANL     A,#0FH
00DC 48                ORL     A,R0
00DD FF                MOV     R7,A
00DE 904398            MOV     DPTR,#04398H
00E1 EF                MOV     A,R7
00E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
00E3 904399            MOV     DPTR,#04399H
00E6 E0                MOVX    A,@DPTR
00E7 FF                MOV     R7,A
00E8 900000      R     MOV     DPTR,#cyPmBackup+08H
00EB EF                MOV     A,R7
00EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 693
00ED 900000      R     MOV     DPTR,#wakeupSource
00F0 E0                MOVX    A,@DPTR
00F1 FE                MOV     R6,A
00F2 A3                INC     DPTR
00F3 E0                MOVX    A,@DPTR
00F4 FF                MOV     R7,A
00F5 EF                MOV     A,R7
00F6 540F              ANL     A,#0FH
00F8 FF                MOV     R7,A
00F9 904399            MOV     DPTR,#04399H
00FC EF                MOV     A,R7
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 696
00FE 90439A            MOV     DPTR,#0439AH
0101 E0                MOVX    A,@DPTR
0102 FF                MOV     R7,A
0103 900000      R     MOV     DPTR,#cyPmBackup+09H
0106 EF                MOV     A,R7
0107 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 697
0108 900000      R     MOV     DPTR,#wakeupSource
010B E0                MOVX    A,@DPTR
010C FE                MOV     R6,A
010D A3                INC     DPTR
010E E0                MOVX    A,@DPTR
010F FF                MOV     R7,A
0110 EE                MOV     A,R6
0111 C4                SWAP    A
0112 540F              ANL     A,#0FH
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 54  

0114 FF                MOV     R7,A
0115 7E00              MOV     R6,#00H
0117 EF                MOV     A,R7
0118 5401              ANL     A,#01H
011A FF                MOV     R7,A
011B 90439A            MOV     DPTR,#0439AH
011E EF                MOV     A,R7
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 701
0120 904393            MOV     DPTR,#04393H
0123 E0                MOVX    A,@DPTR
0124 FF                MOV     R7,A
0125 EF                MOV     A,R7
0126 54F8              ANL     A,#0F8H
0128 FF                MOV     R7,A
0129 EF                MOV     A,R7
012A 4401              ORL     A,#01H
012C FF                MOV     R7,A
012D 904393            MOV     DPTR,#04393H
0130 EF                MOV     A,R7
0131 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 704
0132 904393            MOV     DPTR,#04393H
0135 E0                MOVX    A,@DPTR
0136 FF                MOV     R7,A
                                           ; SOURCE LINE # 707
0137 00                NOP     
                                           ; SOURCE LINE # 708
0138 00                NOP     
                                           ; SOURCE LINE # 711
0139 00                NOP     
                                           ; SOURCE LINE # 716
013A 900000      R     MOV     DPTR,#cyPmBackup+07H
013D E0                MOVX    A,@DPTR
013E FF                MOV     R7,A
013F 904398            MOV     DPTR,#04398H
0142 EF                MOV     A,R7
0143 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 717
0144 900000      R     MOV     DPTR,#cyPmBackup+08H
0147 E0                MOVX    A,@DPTR
0148 FF                MOV     R7,A
0149 904399            MOV     DPTR,#04399H
014C EF                MOV     A,R7
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 718
014E 900000      R     MOV     DPTR,#cyPmBackup+09H
0151 E0                MOVX    A,@DPTR
0152 FF                MOV     R7,A
0153 90439A            MOV     DPTR,#0439AH
0156 EF                MOV     A,R7
0157 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 719
0158 22                RET     
             ; FUNCTION _CyPmAltAct (END)

             ; FUNCTION _CyPmSleep (BEGIN)
                                           ; SOURCE LINE # 840
0000 900000      R     MOV     DPTR,#wakeupTime
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#wakeupSource
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 55  

0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 841
                                           ; SOURCE LINE # 845
000D 120000      E     LCALL   CyEnterCriticalSection
0010 900000      R     MOV     DPTR,#interruptState
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 854
0015 904393            MOV     DPTR,#04393H
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B 5408              ANL     A,#08H
001D FF                MOV     R7,A
001E 7E00              MOV     R6,#00H
0020 EF                MOV     A,R7
0021 4E                ORL     A,R6
0022 700D              JNZ     ?C0061
                                           ; SOURCE LINE # 855
                                           ; SOURCE LINE # 857
0024 904683            MOV     DPTR,#04683H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 541F              ANL     A,#01FH
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 858
002F 8009              SJMP    ?C0062
0031         ?C0061:
                                           ; SOURCE LINE # 860
                                           ; SOURCE LINE # 864
0031 900000      R     MOV     DPTR,#interruptState
0034 E0                MOVX    A,@DPTR
0035 FF                MOV     R7,A
0036 120000      E     LCALL   _CyExitCriticalSection
0039 22                RET     
                                           ; SOURCE LINE # 867
003A         ?C0062:
                                           ; SOURCE LINE # 883
003A 9046EC            MOV     DPTR,#046ECH
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 C3                CLR     C
0041 9405              SUBB    A,#05H
0043 501A              JNC     ?C0064
                                           ; SOURCE LINE # 884
                                           ; SOURCE LINE # 886
0045 904689            MOV     DPTR,#04689H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 5401              ANL     A,#01H
004D FF                MOV     R7,A
004E 7E00              MOV     R6,#00H
0050 EF                MOV     A,R7
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 56  

0051 4E                ORL     A,R6
0052 7003              JNZ     ?C0066
0054 D3                SETB    C
0055 8001              SJMP    ?C0067
0057         ?C0066:
0057 C3                CLR     C
0058         ?C0067:
0058 4005              JC      ?C0064
005A 7F00              MOV     R7,#00H
005C 120000      E     LCALL   _?CyHalt
                                           ; SOURCE LINE # 887
005F         ?C0064:
                                           ; SOURCE LINE # 890
005F 9046F5            MOV     DPTR,#046F5H
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 EF                MOV     A,R7
0065 5407              ANL     A,#07H
0067 FF                MOV     R7,A
0068 7E00              MOV     R6,#00H
006A EF                MOV     A,R7
006B 4E                ORL     A,R6
006C 6039              JZ      ?C0068
                                           ; SOURCE LINE # 892
                                           ; SOURCE LINE # 893
006E 9046EC            MOV     DPTR,#046ECH
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 C3                CLR     C
0075 9405              SUBB    A,#05H
0077 5007              JNC     ?C0069
                                           ; SOURCE LINE # 894
                                           ; SOURCE LINE # 896
0079 7F00              MOV     R7,#00H
007B 120000      E     LCALL   _?CyHalt
                                           ; SOURCE LINE # 897
007E 8027              SJMP    ?C0068
0080         ?C0069:
                                           ; SOURCE LINE # 899
                                           ; SOURCE LINE # 900
0080 904689            MOV     DPTR,#04689H
0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 EF                MOV     A,R7
0086 5401              ANL     A,#01H
0088 FF                MOV     R7,A
0089 7E00              MOV     R6,#00H
008B EF                MOV     A,R7
008C 4E                ORL     A,R6
008D 7012              JNZ     ?C0072
                                           ; SOURCE LINE # 901
                                           ; SOURCE LINE # 902
008F 900000      R     MOV     DPTR,#cyPmBackup+06H
0092 E4                CLR     A
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 903
0094 904689            MOV     DPTR,#04689H
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 EF                MOV     A,R7
009A 4401              ORL     A,#01H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 57  

009C FF                MOV     R7,A
009D EF                MOV     A,R7
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 904
009F 8006              SJMP    ?C0068
00A1         ?C0072:
                                           ; SOURCE LINE # 906
                                           ; SOURCE LINE # 907
00A1 900000      R     MOV     DPTR,#cyPmBackup+06H
00A4 7401              MOV     A,#01H
00A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 908
                                           ; SOURCE LINE # 909
                                           ; SOURCE LINE # 910
00A7         ?C0068:
                                           ; SOURCE LINE # 935
00A7 120000      R     LCALL   CyPmHibSlpSaveSet
                                           ; SOURCE LINE # 941
00AA 900000      R     MOV     DPTR,#wakeupTime
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF EF                MOV     A,R7
00B0 C3                CLR     C
00B1 9402              SUBB    A,#02H
00B3 402A              JC      ?C0074
00B5 900000      R     MOV     DPTR,#wakeupTime
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA EF                MOV     A,R7
00BB D3                SETB    C
00BC 940D              SUBB    A,#0DH
00BE 501F              JNC     ?C0074
                                           ; SOURCE LINE # 942
                                           ; SOURCE LINE # 944
00C0 900000      R     MOV     DPTR,#wakeupTime
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
00C5 EF                MOV     A,R7
00C6 14                DEC     A
00C7 FF                MOV     R7,A
00C8 120000      R     LCALL   _CyPmCtwSetInterval
                                           ; SOURCE LINE # 947
00CB 900000      R     MOV     DPTR,#wakeupSource
00CE E0                MOVX    A,@DPTR
00CF FE                MOV     R6,A
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FF                MOV     R7,A
00D3 EE                MOV     A,R6
00D4 4408              ORL     A,#08H
00D6 FE                MOV     R6,A
00D7 900000      R     MOV     DPTR,#wakeupSource
00DA EE                MOV     A,R6
00DB F0                MOVX    @DPTR,A
00DC A3                INC     DPTR
00DD EF                MOV     A,R7
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 948
00DF         ?C0074:
                                           ; SOURCE LINE # 951
00DF 900000      R     MOV     DPTR,#wakeupTime
00E2 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 58  

00E3 FF                MOV     R7,A
00E4 EF                MOV     A,R7
00E5 B40117            CJNE    A,#01H,?C0075
                                           ; SOURCE LINE # 952
                                           ; SOURCE LINE # 954
00E8 120000      R     LCALL   CyPmOppsSet
                                           ; SOURCE LINE # 957
00EB 900000      R     MOV     DPTR,#wakeupSource
00EE E0                MOVX    A,@DPTR
00EF FE                MOV     R6,A
00F0 A3                INC     DPTR
00F1 E0                MOVX    A,@DPTR
00F2 FF                MOV     R7,A
00F3 EE                MOV     A,R6
00F4 4408              ORL     A,#08H
00F6 FE                MOV     R6,A
00F7 900000      R     MOV     DPTR,#wakeupSource
00FA EE                MOV     A,R6
00FB F0                MOVX    @DPTR,A
00FC A3                INC     DPTR
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 958
00FF         ?C0075:
                                           ; SOURCE LINE # 966
00FF 904398            MOV     DPTR,#04398H
0102 E0                MOVX    A,@DPTR
0103 FF                MOV     R7,A
0104 900000      R     MOV     DPTR,#cyPmBackup+07H
0107 EF                MOV     A,R7
0108 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 967
0109 900000      R     MOV     DPTR,#wakeupSource
010C E0                MOVX    A,@DPTR
010D FE                MOV     R6,A
010E A3                INC     DPTR
010F E0                MOVX    A,@DPTR
0110 FF                MOV     R7,A
0111 EE                MOV     A,R6
0112 C4                SWAP    A
0113 F8                MOV     R0,A
0114 54F0              ANL     A,#0F0H
0116 C8                XCH     A,R0
0117 68                XRL     A,R0
0118 FE                MOV     R6,A
0119 EF                MOV     A,R7
011A C4                SWAP    A
011B 540F              ANL     A,#0FH
011D 48                ORL     A,R0
011E FF                MOV     R7,A
011F 904398            MOV     DPTR,#04398H
0122 EF                MOV     A,R7
0123 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 970
0124 904399            MOV     DPTR,#04399H
0127 E0                MOVX    A,@DPTR
0128 FF                MOV     R7,A
0129 900000      R     MOV     DPTR,#cyPmBackup+08H
012C EF                MOV     A,R7
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 971
012E 900000      R     MOV     DPTR,#wakeupSource
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 59  

0131 E0                MOVX    A,@DPTR
0132 FE                MOV     R6,A
0133 A3                INC     DPTR
0134 E0                MOVX    A,@DPTR
0135 FF                MOV     R7,A
0136 EF                MOV     A,R7
0137 540F              ANL     A,#0FH
0139 FF                MOV     R7,A
013A 904399            MOV     DPTR,#04399H
013D EF                MOV     A,R7
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 974
013F 90439A            MOV     DPTR,#0439AH
0142 E0                MOVX    A,@DPTR
0143 FF                MOV     R7,A
0144 900000      R     MOV     DPTR,#cyPmBackup+09H
0147 EF                MOV     A,R7
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 975
0149 900000      R     MOV     DPTR,#wakeupSource
014C E0                MOVX    A,@DPTR
014D FE                MOV     R6,A
014E A3                INC     DPTR
014F E0                MOVX    A,@DPTR
0150 FF                MOV     R7,A
0151 EE                MOV     A,R6
0152 C4                SWAP    A
0153 540F              ANL     A,#0FH
0155 FF                MOV     R7,A
0156 7E00              MOV     R6,#00H
0158 EF                MOV     A,R7
0159 5401              ANL     A,#01H
015B FF                MOV     R7,A
015C 90439A            MOV     DPTR,#0439AH
015F EF                MOV     A,R7
0160 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 988
0161 904200            MOV     DPTR,#04200H
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
0166 EF                MOV     A,R7
0167 5407              ANL     A,#07H
0169 FF                MOV     R7,A
016A 7E00              MOV     R6,#00H
016C EF                MOV     A,R7
016D 4E                ORL     A,R6
016E 7008              JNZ     ?C0076
                                           ; SOURCE LINE # 989
                                           ; SOURCE LINE # 991
0170 900000      R     MOV     DPTR,#cyPmBackup+030H
0173 7401              MOV     A,#01H
0175 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 992
0176 801E              SJMP    ?C0077
0178         ?C0076:
                                           ; SOURCE LINE # 994
                                           ; SOURCE LINE # 996
0178 900000      R     MOV     DPTR,#cyPmBackup+030H
017B E4                CLR     A
017C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 999
017D 904200            MOV     DPTR,#04200H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 60  

0180 E0                MOVX    A,@DPTR
0181 FF                MOV     R7,A
0182 EF                MOV     A,R7
0183 5407              ANL     A,#07H
0185 FF                MOV     R7,A
0186 900000      R     MOV     DPTR,#cyPmBackup+02FH
0189 EF                MOV     A,R7
018A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1002
018B 904200            MOV     DPTR,#04200H
018E E0                MOVX    A,@DPTR
018F FF                MOV     R7,A
0190 EF                MOV     A,R7
0191 54F8              ANL     A,#0F8H
0193 FF                MOV     R7,A
0194 EF                MOV     A,R7
0195 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1003
0196         ?C0077:
                                           ; SOURCE LINE # 1006
0196 904393            MOV     DPTR,#04393H
0199 E0                MOVX    A,@DPTR
019A FF                MOV     R7,A
019B EF                MOV     A,R7
019C 54F8              ANL     A,#0F8H
019E FF                MOV     R7,A
019F EF                MOV     A,R7
01A0 4403              ORL     A,#03H
01A2 FF                MOV     R7,A
01A3 904393            MOV     DPTR,#04393H
01A6 EF                MOV     A,R7
01A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1009
01A8 904393            MOV     DPTR,#04393H
01AB E0                MOVX    A,@DPTR
01AC FF                MOV     R7,A
                                           ; SOURCE LINE # 1012
01AD 00                NOP     
                                           ; SOURCE LINE # 1013
01AE 00                NOP     
                                           ; SOURCE LINE # 1016
01AF 00                NOP     
                                           ; SOURCE LINE # 1021
01B0 900000      R     MOV     DPTR,#cyPmBackup+030H
01B3 E0                MOVX    A,@DPTR
01B4 FF                MOV     R7,A
01B5 EF                MOV     A,R7
01B6 6401              XRL     A,#01H
01B8 6016              JZ      ?C0078
                                           ; SOURCE LINE # 1022
                                           ; SOURCE LINE # 1023
01BA 904200            MOV     DPTR,#04200H
01BD E0                MOVX    A,@DPTR
01BE FF                MOV     R7,A
01BF EF                MOV     A,R7
01C0 54F8              ANL     A,#0F8H
01C2 FF                MOV     R7,A
01C3 900000      R     MOV     DPTR,#cyPmBackup+02FH
01C6 E0                MOVX    A,@DPTR
01C7 FE                MOV     R6,A
01C8 EF                MOV     A,R7
01C9 4E                ORL     A,R6
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 61  

01CA FF                MOV     R7,A
01CB 904200            MOV     DPTR,#04200H
01CE EF                MOV     A,R7
01CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1025
01D0         ?C0078:
                                           ; SOURCE LINE # 1038
01D0 120000      R     LCALL   CyPmHibSlpRestore
                                           ; SOURCE LINE # 1044
01D3 9046F5            MOV     DPTR,#046F5H
01D6 E0                MOVX    A,@DPTR
01D7 FF                MOV     R7,A
01D8 EF                MOV     A,R7
01D9 5407              ANL     A,#07H
01DB FF                MOV     R7,A
01DC 7E00              MOV     R6,#00H
01DE EF                MOV     A,R7
01DF 4E                ORL     A,R6
01E0 601E              JZ      ?C0079
                                           ; SOURCE LINE # 1046
                                           ; SOURCE LINE # 1047
01E2 9046EC            MOV     DPTR,#046ECH
01E5 E0                MOVX    A,@DPTR
01E6 FF                MOV     R7,A
01E7 EF                MOV     A,R7
01E8 C3                CLR     C
01E9 9405              SUBB    A,#05H
01EB 4013              JC      ?C0079
                                           ; SOURCE LINE # 1048
                                           ; SOURCE LINE # 1049
01ED 900000      R     MOV     DPTR,#cyPmBackup+06H
01F0 E0                MOVX    A,@DPTR
01F1 FF                MOV     R7,A
01F2 EF                MOV     A,R7
01F3 700B              JNZ     ?C0079
                                           ; SOURCE LINE # 1050
                                           ; SOURCE LINE # 1051
01F5 904689            MOV     DPTR,#04689H
01F8 E0                MOVX    A,@DPTR
01F9 FF                MOV     R7,A
01FA EF                MOV     A,R7
01FB 54FE              ANL     A,#0FEH
01FD FF                MOV     R7,A
01FE EF                MOV     A,R7
01FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1052
                                           ; SOURCE LINE # 1053
                                           ; SOURCE LINE # 1054
0200         ?C0079:
                                           ; SOURCE LINE # 1060
0200 900000      R     MOV     DPTR,#cyPmBackup+07H
0203 E0                MOVX    A,@DPTR
0204 FF                MOV     R7,A
0205 904398            MOV     DPTR,#04398H
0208 EF                MOV     A,R7
0209 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1061
020A 900000      R     MOV     DPTR,#cyPmBackup+08H
020D E0                MOVX    A,@DPTR
020E FF                MOV     R7,A
020F 904399            MOV     DPTR,#04399H
0212 EF                MOV     A,R7
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 62  

0213 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1062
0214 900000      R     MOV     DPTR,#cyPmBackup+09H
0217 E0                MOVX    A,@DPTR
0218 FF                MOV     R7,A
0219 90439A            MOV     DPTR,#0439AH
021C EF                MOV     A,R7
021D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1065
021E 900000      R     MOV     DPTR,#interruptState
0221 E0                MOVX    A,@DPTR
0222 FF                MOV     R7,A
0223 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1066
0226         ?C0063:
0226 22                RET     
             ; FUNCTION _CyPmSleep (END)

             ; FUNCTION CyPmHibernate (BEGIN)
                                           ; SOURCE LINE # 1112
                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1117
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#interruptState
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1125
0008 904393            MOV     DPTR,#04393H
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 5408              ANL     A,#08H
0010 FF                MOV     R7,A
0011 7E00              MOV     R6,#00H
0013 EF                MOV     A,R7
0014 4E                ORL     A,R6
0015 700D              JNZ     ?C0082
                                           ; SOURCE LINE # 1126
                                           ; SOURCE LINE # 1128
0017 904683            MOV     DPTR,#04683H
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 541F              ANL     A,#01FH
001F FF                MOV     R7,A
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1129
0022 8009              SJMP    ?C0083
0024         ?C0082:
                                           ; SOURCE LINE # 1131
                                           ; SOURCE LINE # 1135
0024 900000      R     MOV     DPTR,#interruptState
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 120000      E     LCALL   _CyExitCriticalSection
002C 22                RET     
                                           ; SOURCE LINE # 1138
002D         ?C0083:
                                           ; SOURCE LINE # 1140
002D 120000      R     LCALL   CyPmHibSaveSet
                                           ; SOURCE LINE # 1144
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 63  

0030 904398            MOV     DPTR,#04398H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 900000      R     MOV     DPTR,#cyPmBackup+07H
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1145
003A 904398            MOV     DPTR,#04398H
003D 7404              MOV     A,#04H
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1147
0040 904399            MOV     DPTR,#04399H
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 900000      R     MOV     DPTR,#cyPmBackup+08H
0048 EF                MOV     A,R7
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1148
004A 904399            MOV     DPTR,#04399H
004D E4                CLR     A
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1150
004F 90439A            MOV     DPTR,#0439AH
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 900000      R     MOV     DPTR,#cyPmBackup+09H
0057 EF                MOV     A,R7
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1151
0059 90439A            MOV     DPTR,#0439AH
005C E4                CLR     A
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1155
005E 904200            MOV     DPTR,#04200H
0061 E0                MOVX    A,@DPTR
0062 FF                MOV     R7,A
0063 EF                MOV     A,R7
0064 5407              ANL     A,#07H
0066 FF                MOV     R7,A
0067 7E00              MOV     R6,#00H
0069 EF                MOV     A,R7
006A 4E                ORL     A,R6
006B 7008              JNZ     ?C0085
                                           ; SOURCE LINE # 1156
                                           ; SOURCE LINE # 1158
006D 900000      R     MOV     DPTR,#cyPmBackup+030H
0070 7401              MOV     A,#01H
0072 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1159
0073 801E              SJMP    ?C0086
0075         ?C0085:
                                           ; SOURCE LINE # 1161
                                           ; SOURCE LINE # 1163
0075 900000      R     MOV     DPTR,#cyPmBackup+030H
0078 E4                CLR     A
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1166
007A 904200            MOV     DPTR,#04200H
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F EF                MOV     A,R7
0080 5407              ANL     A,#07H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 64  

0082 FF                MOV     R7,A
0083 900000      R     MOV     DPTR,#cyPmBackup+02FH
0086 EF                MOV     A,R7
0087 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1169
0088 904200            MOV     DPTR,#04200H
008B E0                MOVX    A,@DPTR
008C FF                MOV     R7,A
008D EF                MOV     A,R7
008E 54F8              ANL     A,#0F8H
0090 FF                MOV     R7,A
0091 EF                MOV     A,R7
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1170
0093         ?C0086:
                                           ; SOURCE LINE # 1174
0093 904393            MOV     DPTR,#04393H
0096 E0                MOVX    A,@DPTR
0097 FF                MOV     R7,A
0098 EF                MOV     A,R7
0099 54F8              ANL     A,#0F8H
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 4404              ORL     A,#04H
009F FF                MOV     R7,A
00A0 904393            MOV     DPTR,#04393H
00A3 EF                MOV     A,R7
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1177
00A5 904393            MOV     DPTR,#04393H
00A8 E0                MOVX    A,@DPTR
00A9 FF                MOV     R7,A
                                           ; SOURCE LINE # 1180
00AA 00                NOP     
                                           ; SOURCE LINE # 1181
00AB 00                NOP     
                                           ; SOURCE LINE # 1184
00AC 00                NOP     
                                           ; SOURCE LINE # 1191
00AD 900000      R     MOV     DPTR,#cyPmBackup+030H
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 EF                MOV     A,R7
00B3 6401              XRL     A,#01H
00B5 6016              JZ      ?C0087
                                           ; SOURCE LINE # 1192
                                           ; SOURCE LINE # 1193
00B7 904200            MOV     DPTR,#04200H
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 54F8              ANL     A,#0F8H
00BF FF                MOV     R7,A
00C0 900000      R     MOV     DPTR,#cyPmBackup+02FH
00C3 E0                MOVX    A,@DPTR
00C4 FE                MOV     R6,A
00C5 EF                MOV     A,R7
00C6 4E                ORL     A,R6
00C7 FF                MOV     R7,A
00C8 904200            MOV     DPTR,#04200H
00CB EF                MOV     A,R7
00CC F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 65  

                                           ; SOURCE LINE # 1195
00CD         ?C0087:
                                           ; SOURCE LINE # 1199
00CD 120000      R     LCALL   CyPmHibRestore
                                           ; SOURCE LINE # 1202
00D0 900000      R     MOV     DPTR,#cyPmBackup+07H
00D3 E0                MOVX    A,@DPTR
00D4 FF                MOV     R7,A
00D5 904398            MOV     DPTR,#04398H
00D8 EF                MOV     A,R7
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1203
00DA 900000      R     MOV     DPTR,#cyPmBackup+08H
00DD E0                MOVX    A,@DPTR
00DE FF                MOV     R7,A
00DF 904399            MOV     DPTR,#04399H
00E2 EF                MOV     A,R7
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1204
00E4 900000      R     MOV     DPTR,#cyPmBackup+09H
00E7 E0                MOVX    A,@DPTR
00E8 FF                MOV     R7,A
00E9 90439A            MOV     DPTR,#0439AH
00EC EF                MOV     A,R7
00ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1207
00EE 900000      R     MOV     DPTR,#interruptState
00F1 E0                MOVX    A,@DPTR
00F2 FF                MOV     R7,A
00F3 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1208
00F6         ?C0084:
00F6 22                RET     
             ; FUNCTION CyPmHibernate (END)

             ; FUNCTION _CyPmReadStatus (BEGIN)
                                           ; SOURCE LINE # 1240
0000 900000      R     MOV     DPTR,#mask
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1241
                                           ; SOURCE LINE # 1247
0005 120000      E     LCALL   CyEnterCriticalSection
0008 900000      R     MOV     DPTR,#interruptState
000B EF                MOV     A,R7
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1250
000D 900000      R     MOV     DPTR,#interruptStatus
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 904390            MOV     DPTR,#04390H
0015 E0                MOVX    A,@DPTR
0016 FE                MOV     R6,A
0017 EF                MOV     A,R7
0018 4E                ORL     A,R6
0019 FF                MOV     R7,A
001A 900000      R     MOV     DPTR,#interruptStatus
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1251
001F 900000      R     MOV     DPTR,#interruptStatus
0022 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 66  

0023 FF                MOV     R7,A
0024 900000      R     MOV     DPTR,#tmpStatus
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1252
0029 900000      R     MOV     DPTR,#interruptStatus
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E 900000      R     MOV     DPTR,#mask
0031 E0                MOVX    A,@DPTR
0032 FE                MOV     R6,A
0033 EE                MOV     A,R6
0034 F4                CPL     A
0035 FE                MOV     R6,A
0036 EF                MOV     A,R7
0037 5E                ANL     A,R6
0038 FF                MOV     R7,A
0039 900000      R     MOV     DPTR,#interruptStatus
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1255
003E 900000      R     MOV     DPTR,#interruptState
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1257
0046 900000      R     MOV     DPTR,#tmpStatus
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
                                           ; SOURCE LINE # 1258
004B         ?C0088:
004B 22                RET     
             ; FUNCTION _CyPmReadStatus (END)

             ; FUNCTION CyPmHibSaveSet (BEGIN)
                                           ; SOURCE LINE # 1284
                                           ; SOURCE LINE # 1285
                                           ; SOURCE LINE # 1287
0000 904331            MOV     DPTR,#04331H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5404              ANL     A,#04H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 600B              JZ      ?C0089
                                           ; SOURCE LINE # 1288
                                           ; SOURCE LINE # 1301
000F 904331            MOV     DPTR,#04331H
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 54FB              ANL     A,#0FBH
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1302
001A         ?C0089:
                                           ; SOURCE LINE # 1306
001A 7F01              MOV     R7,#01H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 67  

001C 120000      E     LCALL   _CyILO_SetPowerMode
001F 900000      R     MOV     DPTR,#cyPmBackup
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1309
0024 904300            MOV     DPTR,#04300H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 5402              ANL     A,#02H
002C FF                MOV     R7,A
002D 7E00              MOV     R6,#00H
002F EF                MOV     A,R7
0030 4E                ORL     A,R6
0031 7004              JNZ     ?C0090
0033 7F00              MOV     R7,#00H
0035 8002              SJMP    ?C0091
0037         ?C0090:
0037 7F01              MOV     R7,#01H
0039         ?C0091:
0039 900000      R     MOV     DPTR,#cyPmBackup+01H
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1313
003E 904300            MOV     DPTR,#04300H
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 5404              ANL     A,#04H
0046 FF                MOV     R7,A
0047 7E00              MOV     R6,#00H
0049 EF                MOV     A,R7
004A 4E                ORL     A,R6
004B 7004              JNZ     ?C0092
004D 7F00              MOV     R7,#00H
004F 8002              SJMP    ?C0093
0051         ?C0092:
0051 7F01              MOV     R7,#01H
0053         ?C0093:
0053 900000      R     MOV     DPTR,#cyPmBackup+02H
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1318
0058 904683            MOV     DPTR,#04683H
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D EF                MOV     A,R7
005E 5410              ANL     A,#010H
0060 FF                MOV     R7,A
0061 7E00              MOV     R6,#00H
0063 EF                MOV     A,R7
0064 4E                ORL     A,R6
0065 7012              JNZ     ?C0094
                                           ; SOURCE LINE # 1319
                                           ; SOURCE LINE # 1321
0067 900000      R     MOV     DPTR,#cyPmBackup+03H
006A E4                CLR     A
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1322
006C 904683            MOV     DPTR,#04683H
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 68  

0071 EF                MOV     A,R7
0072 4410              ORL     A,#010H
0074 FF                MOV     R7,A
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1323
0077 8006              SJMP    ?C0095
0079         ?C0094:
                                           ; SOURCE LINE # 1325
                                           ; SOURCE LINE # 1326
0079 900000      R     MOV     DPTR,#cyPmBackup+03H
007C 7401              MOV     A,#01H
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1327
007F         ?C0095:
                                           ; SOURCE LINE # 1337
007F 120000      R     LCALL   CyPmHviLviSaveDisable
                                           ; SOURCE LINE # 1341
0082 120000      R     LCALL   CyPmHibSlpSaveSet
                                           ; SOURCE LINE # 1347
0085 904685            MOV     DPTR,#04685H
0088 E0                MOVX    A,@DPTR
0089 FF                MOV     R7,A
008A 900000      R     MOV     DPTR,#cyPmBackup+0AH
008D EF                MOV     A,R7
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1348
008F 904686            MOV     DPTR,#04686H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 900000      R     MOV     DPTR,#cyPmBackup+0BH
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1350
0099 904685            MOV     DPTR,#04685H
009C 74FF              MOV     A,#0FFH
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1351
009F 904686            MOV     DPTR,#04686H
00A2 7490              MOV     A,#090H
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1352
00A5 22                RET     
             ; FUNCTION CyPmHibSaveSet (END)

             ; FUNCTION CyPmHibRestore (BEGIN)
                                           ; SOURCE LINE # 1374
                                           ; SOURCE LINE # 1375
                                           ; SOURCE LINE # 1377
0000 120000      R     LCALL   CyPmHviLviRestore
                                           ; SOURCE LINE # 1380
0003 120000      R     LCALL   CyPmHibSlpRestore
                                           ; SOURCE LINE # 1383
0006 900000      R     MOV     DPTR,#cyPmBackup+01H
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B EF                MOV     A,R7
000C B40103            CJNE    A,#01H,?C0097
                                           ; SOURCE LINE # 1384
                                           ; SOURCE LINE # 1386
000F 120000      E     LCALL   CyILO_Start1K
                                           ; SOURCE LINE # 1387
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 69  

0012         ?C0097:
                                           ; SOURCE LINE # 1390
0012 900000      R     MOV     DPTR,#cyPmBackup+02H
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 B40103            CJNE    A,#01H,?C0098
                                           ; SOURCE LINE # 1391
                                           ; SOURCE LINE # 1393
001B 120000      E     LCALL   CyILO_Start100K
                                           ; SOURCE LINE # 1394
001E         ?C0098:
                                           ; SOURCE LINE # 1397
001E 900000      R     MOV     DPTR,#cyPmBackup
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 120000      E     LCALL   _CyILO_SetPowerMode
                                           ; SOURCE LINE # 1400
0026 900000      R     MOV     DPTR,#cyPmBackup+03H
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B EF                MOV     A,R7
002C 700B              JNZ     ?C0099
                                           ; SOURCE LINE # 1401
                                           ; SOURCE LINE # 1403
002E 904683            MOV     DPTR,#04683H
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 54EF              ANL     A,#0EFH
0036 FF                MOV     R7,A
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1404
0039         ?C0099:
                                           ; SOURCE LINE # 1410
0039 900000      R     MOV     DPTR,#cyPmBackup+0AH
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E 904685            MOV     DPTR,#04685H
0041 EF                MOV     A,R7
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1411
0043 900000      R     MOV     DPTR,#cyPmBackup+0BH
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 904686            MOV     DPTR,#04686H
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1412
004D 22                RET     
             ; FUNCTION CyPmHibRestore (END)

             ; FUNCTION _CyPmCtwSetInterval (BEGIN)
                                           ; SOURCE LINE # 1435
0000 900000      R     MOV     DPTR,#ctwInterval
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1436
                                           ; SOURCE LINE # 1438
0005 904382            MOV     DPTR,#04382H
0008 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 70  

0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54F7              ANL     A,#0F7H
000D FF                MOV     R7,A
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1441
0010 120000      E     LCALL   CyILO_Start1K
                                           ; SOURCE LINE # 1444
0013 904382            MOV     DPTR,#04382H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 5404              ANL     A,#04H
001B FF                MOV     R7,A
001C 7E00              MOV     R6,#00H
001E EF                MOV     A,R7
001F 4E                ORL     A,R6
0020 602F              JZ      ?C0101
                                           ; SOURCE LINE # 1445
                                           ; SOURCE LINE # 1447
0022 900000      R     MOV     DPTR,#ctwInterval
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 904381            MOV     DPTR,#04381H
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C EE                MOV     A,R6
002D 6F                XRL     A,R7
002E 6044              JZ      ?C0105
                                           ; SOURCE LINE # 1448
                                           ; SOURCE LINE # 1450
0030 904382            MOV     DPTR,#04382H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 54FB              ANL     A,#0FBH
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1451
003B 900000      R     MOV     DPTR,#ctwInterval
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 904381            MOV     DPTR,#04381H
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1452
0045 904382            MOV     DPTR,#04382H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 4404              ORL     A,#04H
004D FF                MOV     R7,A
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1453
                                           ; SOURCE LINE # 1454
0050 22                RET     
0051         ?C0101:
                                           ; SOURCE LINE # 1456
                                           ; SOURCE LINE # 1458
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 71  

0051 900000      R     MOV     DPTR,#ctwInterval
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 904381            MOV     DPTR,#04381H
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EE                MOV     A,R6
005C 6F                XRL     A,R7
005D 600A              JZ      ?C0104
                                           ; SOURCE LINE # 1459
                                           ; SOURCE LINE # 1461
005F 900000      R     MOV     DPTR,#ctwInterval
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 904381            MOV     DPTR,#04381H
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1462
0069         ?C0104:
                                           ; SOURCE LINE # 1465
0069 904382            MOV     DPTR,#04382H
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 4404              ORL     A,#04H
0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1466
                                           ; SOURCE LINE # 1467
0074         ?C0105:
0074 22                RET     
             ; FUNCTION _CyPmCtwSetInterval (END)

             ; FUNCTION CyPmOppsSet (BEGIN)
                                           ; SOURCE LINE # 1487
                                           ; SOURCE LINE # 1488
                                           ; SOURCE LINE # 1490
0000 904308            MOV     DPTR,#04308H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5401              ANL     A,#01H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 7003              JNZ     ?C0106
                                           ; SOURCE LINE # 1491
                                           ; SOURCE LINE # 1493
000F 120000      E     LCALL   CyXTAL_32KHZ_Start
                                           ; SOURCE LINE # 1494
0012         ?C0106:
                                           ; SOURCE LINE # 1497
0012 904382            MOV     DPTR,#04382H
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 54DF              ANL     A,#0DFH
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 72  

                                           ; SOURCE LINE # 1500
001D 904382            MOV     DPTR,#04382H
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 EF                MOV     A,R7
0023 4410              ORL     A,#010H
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1501
0028 22                RET     
             ; FUNCTION CyPmOppsSet (END)

             ; FUNCTION _CyPmFtwSetInterval (BEGIN)
                                           ; SOURCE LINE # 1524
0000 900000      R     MOV     DPTR,#ftwInterval
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1525
                                           ; SOURCE LINE # 1527
0005 904382            MOV     DPTR,#04382H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54FD              ANL     A,#0FDH
000D FF                MOV     R7,A
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1530
0010 120000      E     LCALL   CyILO_Start100K
                                           ; SOURCE LINE # 1533
0013 904382            MOV     DPTR,#04382H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 5401              ANL     A,#01H
001B FF                MOV     R7,A
001C 7E00              MOV     R6,#00H
001E EF                MOV     A,R7
001F 4E                ORL     A,R6
0020 602F              JZ      ?C0108
                                           ; SOURCE LINE # 1534
                                           ; SOURCE LINE # 1536
0022 900000      R     MOV     DPTR,#ftwInterval
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 904380            MOV     DPTR,#04380H
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C EE                MOV     A,R6
002D 6F                XRL     A,R7
002E 6044              JZ      ?C0112
                                           ; SOURCE LINE # 1537
                                           ; SOURCE LINE # 1539
0030 904382            MOV     DPTR,#04382H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 54FE              ANL     A,#0FEH
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 73  

                                           ; SOURCE LINE # 1540
003B 900000      R     MOV     DPTR,#ftwInterval
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 904380            MOV     DPTR,#04380H
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1541
0045 904382            MOV     DPTR,#04382H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 4401              ORL     A,#01H
004D FF                MOV     R7,A
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1542
                                           ; SOURCE LINE # 1543
0050 22                RET     
0051         ?C0108:
                                           ; SOURCE LINE # 1545
                                           ; SOURCE LINE # 1547
0051 900000      R     MOV     DPTR,#ftwInterval
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 904380            MOV     DPTR,#04380H
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EE                MOV     A,R6
005C 6F                XRL     A,R7
005D 600A              JZ      ?C0111
                                           ; SOURCE LINE # 1548
                                           ; SOURCE LINE # 1550
005F 900000      R     MOV     DPTR,#ftwInterval
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 904380            MOV     DPTR,#04380H
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1551
0069         ?C0111:
                                           ; SOURCE LINE # 1554
0069 904382            MOV     DPTR,#04382H
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 4401              ORL     A,#01H
0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1555
                                           ; SOURCE LINE # 1556
0074         ?C0112:
0074 22                RET     
             ; FUNCTION _CyPmFtwSetInterval (END)

             ; FUNCTION CyPmHibSlpSaveSet (BEGIN)
                                           ; SOURCE LINE # 1581
                                           ; SOURCE LINE # 1582
                                           ; SOURCE LINE # 1584
0000 905A00            MOV     DPTR,#05A00H
0003 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 74  

0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#cyPmBackup+0CH
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1585
000A 905A02            MOV     DPTR,#05A02H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 900000      R     MOV     DPTR,#cyPmBackup+0DH
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1586
0014 905A03            MOV     DPTR,#05A03H
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 900000      R     MOV     DPTR,#cyPmBackup+0EH
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1587
001E 905A04            MOV     DPTR,#05A04H
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 900000      R     MOV     DPTR,#cyPmBackup+0FH
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1588
0028 905A06            MOV     DPTR,#05A06H
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 900000      R     MOV     DPTR,#cyPmBackup+010H
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1589
0032 905A08            MOV     DPTR,#05A08H
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#cyPmBackup+011H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1590
003C 905A0A            MOV     DPTR,#05A0AH
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#cyPmBackup+012H
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1592
0046 905A10            MOV     DPTR,#05A10H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 900000      R     MOV     DPTR,#cyPmBackup+013H
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1593
0050 905A12            MOV     DPTR,#05A12H
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 900000      R     MOV     DPTR,#cyPmBackup+014H
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1594
005A 905A13            MOV     DPTR,#05A13H
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 75  

005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F 900000      R     MOV     DPTR,#cyPmBackup+015H
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1595
0064 905A14            MOV     DPTR,#05A14H
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 900000      R     MOV     DPTR,#cyPmBackup+016H
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1596
006E 905A16            MOV     DPTR,#05A16H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 900000      R     MOV     DPTR,#cyPmBackup+017H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1597
0078 905A18            MOV     DPTR,#05A18H
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 900000      R     MOV     DPTR,#cyPmBackup+018H
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1598
0082 905A1A            MOV     DPTR,#05A1AH
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 900000      R     MOV     DPTR,#cyPmBackup+019H
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1600
008C 905A20            MOV     DPTR,#05A20H
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 900000      R     MOV     DPTR,#cyPmBackup+01AH
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1601
0096 905A22            MOV     DPTR,#05A22H
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 900000      R     MOV     DPTR,#cyPmBackup+01BH
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1602
00A0 905A23            MOV     DPTR,#05A23H
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 900000      R     MOV     DPTR,#cyPmBackup+01CH
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1603
00AA 905A24            MOV     DPTR,#05A24H
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF 900000      R     MOV     DPTR,#cyPmBackup+01DH
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1604
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 76  

00B4 905A26            MOV     DPTR,#05A26H
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 900000      R     MOV     DPTR,#cyPmBackup+01EH
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1605
00BE 905A28            MOV     DPTR,#05A28H
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 900000      R     MOV     DPTR,#cyPmBackup+01FH
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1606
00C8 905A2A            MOV     DPTR,#05A2AH
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD 900000      R     MOV     DPTR,#cyPmBackup+020H
00D0 EF                MOV     A,R7
00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1608
00D2 905A30            MOV     DPTR,#05A30H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 900000      R     MOV     DPTR,#cyPmBackup+021H
00DA EF                MOV     A,R7
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1609
00DC 905A32            MOV     DPTR,#05A32H
00DF E0                MOVX    A,@DPTR
00E0 FF                MOV     R7,A
00E1 900000      R     MOV     DPTR,#cyPmBackup+022H
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1610
00E6 905A33            MOV     DPTR,#05A33H
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB 900000      R     MOV     DPTR,#cyPmBackup+023H
00EE EF                MOV     A,R7
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1611
00F0 905A34            MOV     DPTR,#05A34H
00F3 E0                MOVX    A,@DPTR
00F4 FF                MOV     R7,A
00F5 900000      R     MOV     DPTR,#cyPmBackup+024H
00F8 EF                MOV     A,R7
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1612
00FA 905A36            MOV     DPTR,#05A36H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 900000      R     MOV     DPTR,#cyPmBackup+025H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1613
0104 905A38            MOV     DPTR,#05A38H
0107 E0                MOVX    A,@DPTR
0108 FF                MOV     R7,A
0109 900000      R     MOV     DPTR,#cyPmBackup+026H
010C EF                MOV     A,R7
010D F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 77  

                                           ; SOURCE LINE # 1614
010E 905A3A            MOV     DPTR,#05A3AH
0111 E0                MOVX    A,@DPTR
0112 FF                MOV     R7,A
0113 900000      R     MOV     DPTR,#cyPmBackup+027H
0116 EF                MOV     A,R7
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1616
0118 905A00            MOV     DPTR,#05A00H
011B E4                CLR     A
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1617
011D 905A02            MOV     DPTR,#05A02H
0120 E4                CLR     A
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1618
0122 905A03            MOV     DPTR,#05A03H
0125 E4                CLR     A
0126 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1619
0127 905A04            MOV     DPTR,#05A04H
012A E4                CLR     A
012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1620
012C 905A06            MOV     DPTR,#05A06H
012F E4                CLR     A
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1621
0131 905A08            MOV     DPTR,#05A08H
0134 E4                CLR     A
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1622
0136 905A0A            MOV     DPTR,#05A0AH
0139 E4                CLR     A
013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1624
013B 905A10            MOV     DPTR,#05A10H
013E E4                CLR     A
013F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1625
0140 905A12            MOV     DPTR,#05A12H
0143 E4                CLR     A
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1626
0145 905A13            MOV     DPTR,#05A13H
0148 E4                CLR     A
0149 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1627
014A 905A14            MOV     DPTR,#05A14H
014D E4                CLR     A
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1628
014F 905A16            MOV     DPTR,#05A16H
0152 E4                CLR     A
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1629
0154 905A18            MOV     DPTR,#05A18H
0157 E4                CLR     A
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1630
0159 905A1A            MOV     DPTR,#05A1AH
015C E4                CLR     A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 78  

015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1632
015E 905A20            MOV     DPTR,#05A20H
0161 E4                CLR     A
0162 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1633
0163 905A22            MOV     DPTR,#05A22H
0166 E4                CLR     A
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1634
0168 905A23            MOV     DPTR,#05A23H
016B E4                CLR     A
016C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1635
016D 905A24            MOV     DPTR,#05A24H
0170 E4                CLR     A
0171 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1636
0172 905A26            MOV     DPTR,#05A26H
0175 E4                CLR     A
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1637
0177 905A28            MOV     DPTR,#05A28H
017A E4                CLR     A
017B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1638
017C 905A2A            MOV     DPTR,#05A2AH
017F E4                CLR     A
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1640
0181 905A30            MOV     DPTR,#05A30H
0184 E4                CLR     A
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1641
0186 905A32            MOV     DPTR,#05A32H
0189 E4                CLR     A
018A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1642
018B 905A33            MOV     DPTR,#05A33H
018E E4                CLR     A
018F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1643
0190 905A34            MOV     DPTR,#05A34H
0193 E4                CLR     A
0194 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1644
0195 905A36            MOV     DPTR,#05A36H
0198 E4                CLR     A
0199 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1645
019A 905A38            MOV     DPTR,#05A38H
019D E4                CLR     A
019E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1646
019F 905A3A            MOV     DPTR,#05A3AH
01A2 E4                CLR     A
01A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1654
01A4 9046E8            MOV     DPTR,#046E8H
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 EF                MOV     A,R7
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 79  

01AA 5404              ANL     A,#04H
01AC FF                MOV     R7,A
01AD 7E00              MOV     R6,#00H
01AF EF                MOV     A,R7
01B0 4E                ORL     A,R6
01B1 6033              JZ      ?C0113
                                           ; SOURCE LINE # 1655
                                           ; SOURCE LINE # 1657
01B3 900000      R     MOV     DPTR,#cyPmBackup+04H
01B6 7401              MOV     A,#01H
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1660
01B9 90500B            MOV     DPTR,#0500BH
01BC E0                MOVX    A,@DPTR
01BD FF                MOV     R7,A
01BE EF                MOV     A,R7
01BF 540E              ANL     A,#0EH
01C1 FF                MOV     R7,A
01C2 900000      R     MOV     DPTR,#cyPmBackup+05H
01C5 EF                MOV     A,R7
01C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1663
01C7 90500B            MOV     DPTR,#0500BH
01CA E0                MOVX    A,@DPTR
01CB FF                MOV     R7,A
01CC EF                MOV     A,R7
01CD 54F1              ANL     A,#0F1H
01CF FF                MOV     R7,A
01D0 EF                MOV     A,R7
01D1 440C              ORL     A,#0CH
01D3 FF                MOV     R7,A
01D4 90500B            MOV     DPTR,#0500BH
01D7 EF                MOV     A,R7
01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1667
01D9 9046E8            MOV     DPTR,#046E8H
01DC E0                MOVX    A,@DPTR
01DD FF                MOV     R7,A
01DE EF                MOV     A,R7
01DF 54FB              ANL     A,#0FBH
01E1 FF                MOV     R7,A
01E2 EF                MOV     A,R7
01E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1668
01E4 8005              SJMP    ?C0114
01E6         ?C0113:
                                           ; SOURCE LINE # 1670
                                           ; SOURCE LINE # 1672
01E6 900000      R     MOV     DPTR,#cyPmBackup+04H
01E9 E4                CLR     A
01EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1673
01EB         ?C0114:
                                           ; SOURCE LINE # 1682
01EB 904322            MOV     DPTR,#04322H
01EE E0                MOVX    A,@DPTR
01EF FF                MOV     R7,A
01F0 EF                MOV     A,R7
01F1 5408              ANL     A,#08H
01F3 FF                MOV     R7,A
01F4 7E00              MOV     R6,#00H
01F6 EF                MOV     A,R7
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 80  

01F7 4E                ORL     A,R6
01F8 6012              JZ      ?C0115
                                           ; SOURCE LINE # 1683
                                           ; SOURCE LINE # 1684
01FA 900000      R     MOV     DPTR,#cyPmBackup+031H
01FD 7401              MOV     A,#01H
01FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1685
0200 904322            MOV     DPTR,#04322H
0203 E0                MOVX    A,@DPTR
0204 FF                MOV     R7,A
0205 EF                MOV     A,R7
0206 54F7              ANL     A,#0F7H
0208 FF                MOV     R7,A
0209 EF                MOV     A,R7
020A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1686
020B 22                RET     
020C         ?C0115:
                                           ; SOURCE LINE # 1688
                                           ; SOURCE LINE # 1689
020C 900000      R     MOV     DPTR,#cyPmBackup+031H
020F E4                CLR     A
0210 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1690
                                           ; SOURCE LINE # 1691
0211         ?C0117:
0211 22                RET     
             ; FUNCTION CyPmHibSlpSaveSet (END)

             ; FUNCTION CyPmHibSlpRestore (BEGIN)
                                           ; SOURCE LINE # 1712
                                           ; SOURCE LINE # 1713
                                           ; SOURCE LINE # 1715
0000 900000      R     MOV     DPTR,#cyPmBackup+0CH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 905A00            MOV     DPTR,#05A00H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1716
000A 900000      R     MOV     DPTR,#cyPmBackup+0DH
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 905A02            MOV     DPTR,#05A02H
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1717
0014 900000      R     MOV     DPTR,#cyPmBackup+0EH
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 905A03            MOV     DPTR,#05A03H
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1718
001E 900000      R     MOV     DPTR,#cyPmBackup+0FH
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 905A04            MOV     DPTR,#05A04H
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1719
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 81  

0028 900000      R     MOV     DPTR,#cyPmBackup+010H
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 905A06            MOV     DPTR,#05A06H
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1720
0032 900000      R     MOV     DPTR,#cyPmBackup+011H
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 905A08            MOV     DPTR,#05A08H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1721
003C 900000      R     MOV     DPTR,#cyPmBackup+012H
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 905A0A            MOV     DPTR,#05A0AH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1723
0046 900000      R     MOV     DPTR,#cyPmBackup+013H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 905A10            MOV     DPTR,#05A10H
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1724
0050 900000      R     MOV     DPTR,#cyPmBackup+014H
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 905A12            MOV     DPTR,#05A12H
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1725
005A 900000      R     MOV     DPTR,#cyPmBackup+015H
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F 905A13            MOV     DPTR,#05A13H
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1726
0064 900000      R     MOV     DPTR,#cyPmBackup+016H
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 905A14            MOV     DPTR,#05A14H
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1727
006E 900000      R     MOV     DPTR,#cyPmBackup+017H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 905A16            MOV     DPTR,#05A16H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1728
0078 900000      R     MOV     DPTR,#cyPmBackup+018H
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 905A18            MOV     DPTR,#05A18H
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 82  

                                           ; SOURCE LINE # 1729
0082 900000      R     MOV     DPTR,#cyPmBackup+019H
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 905A1A            MOV     DPTR,#05A1AH
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1731
008C 900000      R     MOV     DPTR,#cyPmBackup+01AH
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 905A20            MOV     DPTR,#05A20H
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1732
0096 900000      R     MOV     DPTR,#cyPmBackup+01BH
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 905A22            MOV     DPTR,#05A22H
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1733
00A0 900000      R     MOV     DPTR,#cyPmBackup+01CH
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 905A23            MOV     DPTR,#05A23H
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1734
00AA 900000      R     MOV     DPTR,#cyPmBackup+01DH
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF 905A24            MOV     DPTR,#05A24H
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1735
00B4 900000      R     MOV     DPTR,#cyPmBackup+01EH
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 905A26            MOV     DPTR,#05A26H
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1736
00BE 900000      R     MOV     DPTR,#cyPmBackup+01FH
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 905A28            MOV     DPTR,#05A28H
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1737
00C8 900000      R     MOV     DPTR,#cyPmBackup+020H
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD 905A2A            MOV     DPTR,#05A2AH
00D0 EF                MOV     A,R7
00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1739
00D2 900000      R     MOV     DPTR,#cyPmBackup+021H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 905A30            MOV     DPTR,#05A30H
00DA EF                MOV     A,R7
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 83  

00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1740
00DC 900000      R     MOV     DPTR,#cyPmBackup+022H
00DF E0                MOVX    A,@DPTR
00E0 FF                MOV     R7,A
00E1 905A32            MOV     DPTR,#05A32H
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1741
00E6 900000      R     MOV     DPTR,#cyPmBackup+023H
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB 905A33            MOV     DPTR,#05A33H
00EE EF                MOV     A,R7
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1742
00F0 900000      R     MOV     DPTR,#cyPmBackup+024H
00F3 E0                MOVX    A,@DPTR
00F4 FF                MOV     R7,A
00F5 905A34            MOV     DPTR,#05A34H
00F8 EF                MOV     A,R7
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1743
00FA 900000      R     MOV     DPTR,#cyPmBackup+025H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 905A36            MOV     DPTR,#05A36H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1744
0104 900000      R     MOV     DPTR,#cyPmBackup+026H
0107 E0                MOVX    A,@DPTR
0108 FF                MOV     R7,A
0109 905A38            MOV     DPTR,#05A38H
010C EF                MOV     A,R7
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1745
010E 900000      R     MOV     DPTR,#cyPmBackup+027H
0111 E0                MOVX    A,@DPTR
0112 FF                MOV     R7,A
0113 905A3A            MOV     DPTR,#05A3AH
0116 EF                MOV     A,R7
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1751
0118 900000      R     MOV     DPTR,#cyPmBackup+04H
011B E0                MOVX    A,@DPTR
011C FF                MOV     R7,A
011D EF                MOV     A,R7
011E B40121            CJNE    A,#01H,?C0118
                                           ; SOURCE LINE # 1752
                                           ; SOURCE LINE # 1754
0121 90500B            MOV     DPTR,#0500BH
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 EF                MOV     A,R7
0127 54F1              ANL     A,#0F1H
0129 FF                MOV     R7,A
012A 900000      R     MOV     DPTR,#cyPmBackup+05H
012D E0                MOVX    A,@DPTR
012E FE                MOV     R6,A
012F EF                MOV     A,R7
0130 4E                ORL     A,R6
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 84  

0131 FF                MOV     R7,A
0132 90500B            MOV     DPTR,#0500BH
0135 EF                MOV     A,R7
0136 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1758
0137 9046E8            MOV     DPTR,#046E8H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 4404              ORL     A,#04H
013F FF                MOV     R7,A
0140 EF                MOV     A,R7
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1759
0142         ?C0118:
                                           ; SOURCE LINE # 1765
0142 900000      R     MOV     DPTR,#cyPmBackup+031H
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
0147 EF                MOV     A,R7
0148 B4010B            CJNE    A,#01H,?C0120
                                           ; SOURCE LINE # 1766
                                           ; SOURCE LINE # 1767
014B 904322            MOV     DPTR,#04322H
014E E0                MOVX    A,@DPTR
014F FF                MOV     R7,A
0150 EF                MOV     A,R7
0151 4408              ORL     A,#08H
0153 FF                MOV     R7,A
0154 EF                MOV     A,R7
0155 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1768
                                           ; SOURCE LINE # 1769
0156         ?C0120:
0156 22                RET     
             ; FUNCTION CyPmHibSlpRestore (END)

             ; FUNCTION CyPmHviLviSaveDisable (BEGIN)
                                           ; SOURCE LINE # 1789
                                           ; SOURCE LINE # 1790
                                           ; SOURCE LINE # 1791
0000 9046F5            MOV     DPTR,#046F5H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5401              ANL     A,#01H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 6033              JZ      ?C0121
                                           ; SOURCE LINE # 1792
                                           ; SOURCE LINE # 1793
000F 900000      R     MOV     DPTR,#cyPmBackup+028H
0012 7401              MOV     A,#01H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1794
0015 9046F4            MOV     DPTR,#046F4H
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B 540F              ANL     A,#0FH
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 85  

001D FF                MOV     R7,A
001E 900000      R     MOV     DPTR,#cyPmBackup+029H
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1797
0023 9046F7            MOV     DPTR,#046F7H
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 5440              ANL     A,#040H
002B FF                MOV     R7,A
002C 7E00              MOV     R6,#00H
002E EF                MOV     A,R7
002F 4E                ORL     A,R6
0030 7004              JNZ     ?C0122
0032 7F00              MOV     R7,#00H
0034 8002              SJMP    ?C0123
0036         ?C0122:
0036 7F01              MOV     R7,#01H
0038         ?C0123:
0038 900000      R     MOV     DPTR,#cyPmBackup+02DH
003B EF                MOV     A,R7
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1800
003D 120000      E     LCALL   CyVdLvDigitDisable
                                           ; SOURCE LINE # 1801
0040 8005              SJMP    ?C0124
0042         ?C0121:
                                           ; SOURCE LINE # 1803
                                           ; SOURCE LINE # 1804
0042 900000      R     MOV     DPTR,#cyPmBackup+028H
0045 E4                CLR     A
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1805
0047         ?C0124:
                                           ; SOURCE LINE # 1807
0047 9046F5            MOV     DPTR,#046F5H
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C EF                MOV     A,R7
004D 5402              ANL     A,#02H
004F FF                MOV     R7,A
0050 7E00              MOV     R6,#00H
0052 EF                MOV     A,R7
0053 4E                ORL     A,R6
0054 6034              JZ      ?C0125
                                           ; SOURCE LINE # 1808
                                           ; SOURCE LINE # 1809
0056 900000      R     MOV     DPTR,#cyPmBackup+02AH
0059 7401              MOV     A,#01H
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1810
005C 9046F4            MOV     DPTR,#046F4H
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 C4                SWAP    A
0063 540F              ANL     A,#0FH
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#cyPmBackup+02BH
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 86  

                                           ; SOURCE LINE # 1813
006B 9046F7            MOV     DPTR,#046F7H
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 5480              ANL     A,#080H
0073 FF                MOV     R7,A
0074 7E00              MOV     R6,#00H
0076 EF                MOV     A,R7
0077 4E                ORL     A,R6
0078 7004              JNZ     ?C0126
007A 7F00              MOV     R7,#00H
007C 8002              SJMP    ?C0127
007E         ?C0126:
007E 7F01              MOV     R7,#01H
0080         ?C0127:
0080 900000      R     MOV     DPTR,#cyPmBackup+02EH
0083 EF                MOV     A,R7
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1816
0085 120000      E     LCALL   CyVdLvAnalogDisable
                                           ; SOURCE LINE # 1817
0088 8005              SJMP    ?C0128
008A         ?C0125:
                                           ; SOURCE LINE # 1819
                                           ; SOURCE LINE # 1820
008A 900000      R     MOV     DPTR,#cyPmBackup+02AH
008D E4                CLR     A
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1821
008F         ?C0128:
                                           ; SOURCE LINE # 1823
008F 9046F5            MOV     DPTR,#046F5H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 5404              ANL     A,#04H
0097 FF                MOV     R7,A
0098 7E00              MOV     R6,#00H
009A EF                MOV     A,R7
009B 4E                ORL     A,R6
009C 600A              JZ      ?C0129
                                           ; SOURCE LINE # 1824
                                           ; SOURCE LINE # 1825
009E 900000      R     MOV     DPTR,#cyPmBackup+02CH
00A1 7401              MOV     A,#01H
00A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1826
00A4 120000      E     LCALL   CyVdHvAnalogDisable
                                           ; SOURCE LINE # 1827
00A7 22                RET     
00A8         ?C0129:
                                           ; SOURCE LINE # 1829
                                           ; SOURCE LINE # 1830
00A8 900000      R     MOV     DPTR,#cyPmBackup+02CH
00AB E4                CLR     A
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1831
                                           ; SOURCE LINE # 1832
00AD         ?C0131:
00AD 22                RET     
             ; FUNCTION CyPmHviLviSaveDisable (END)
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 87  


             ; FUNCTION CyPmHviLviRestore (BEGIN)
                                           ; SOURCE LINE # 1852
                                           ; SOURCE LINE # 1853
                                           ; SOURCE LINE # 1855
0000 900000      R     MOV     DPTR,#cyPmBackup+028H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 B4010D            CJNE    A,#01H,?C0132
                                           ; SOURCE LINE # 1856
                                           ; SOURCE LINE # 1857
0009 900000      R     MOV     DPTR,#cyPmBackup+02DH
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#cyPmBackup+029H
0011 E0                MOVX    A,@DPTR
0012 FD                MOV     R5,A
0013 120000      E     LCALL   _CyVdLvDigitEnable
                                           ; SOURCE LINE # 1858
0016         ?C0132:
                                           ; SOURCE LINE # 1860
0016 900000      R     MOV     DPTR,#cyPmBackup+02AH
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C B4010D            CJNE    A,#01H,?C0133
                                           ; SOURCE LINE # 1861
                                           ; SOURCE LINE # 1862
001F 900000      R     MOV     DPTR,#cyPmBackup+02EH
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 900000      R     MOV     DPTR,#cyPmBackup+02BH
0027 E0                MOVX    A,@DPTR
0028 FD                MOV     R5,A
0029 120000      E     LCALL   _CyVdLvAnalogEnable
                                           ; SOURCE LINE # 1863
002C         ?C0133:
                                           ; SOURCE LINE # 1865
002C 900000      R     MOV     DPTR,#cyPmBackup+02CH
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 B40103            CJNE    A,#01H,?C0135
                                           ; SOURCE LINE # 1866
                                           ; SOURCE LINE # 1867
0035 120000      E     LCALL   CyVdHvAnalogEnable
                                           ; SOURCE LINE # 1868
                                           ; SOURCE LINE # 1869
0038         ?C0135:
0038 22                RET     
             ; FUNCTION CyPmHviLviRestore (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4247    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =     67      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.51   CYPM                                                                  09/04/2014 17:45:51 PAGE 88  

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
