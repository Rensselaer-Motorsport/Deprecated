C51 COMPILER V9.51   USBUART_1_CLS                                                         09/04/2014 17:45:43 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_1_CLS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_1_cls.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_1_cls.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\USBUART_1_cls.lst) CD D
                    -B NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\USBUART_1_cls.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBUART_1_cls.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  USB Class request handler.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USBUART_1.h"
  18          
  19          #if(USBUART_1_EXTERN_CLS == USBUART_1_FALSE)
  20          
  21          #include "USBUART_1_pvt.h"
  22          
  23          
  24          /***************************************
  25          * User Implemented Class Driver Declarations.
  26          ***************************************/
  27          /* `#START USER_DEFINED_CLASS_DECLARATIONS` Place your declaration here */
  28          
  29          /* `#END` */
  30          
  31          
  32          /*******************************************************************************
  33          * Function Name: USBUART_1_DispatchClassRqst
  34          ********************************************************************************
  35          * Summary:
  36          *  This routine dispatches class specific requests depend on interface class.
  37          *
  38          * Parameters:
  39          *  None.
  40          *
  41          * Return:
  42          *  requestHandled.
  43          *
  44          * Reentrant:
  45          *  No.
  46          *
  47          *******************************************************************************/
  48          uint8 USBUART_1_DispatchClassRqst(void) 
  49          {
  50   1          uint8 requestHandled = USBUART_1_FALSE;
  51   1          uint8 interfaceNumber = 0u;
  52   1      
  53   1          switch(CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_RCPT_MASK)
C51 COMPILER V9.51   USBUART_1_CLS                                                         09/04/2014 17:45:43 PAGE 2   

  54   1          {
  55   2              case USBUART_1_RQST_RCPT_IFC:        /* Class-specific request directed to an interface */
  56   2                  interfaceNumber = CY_GET_REG8(USBUART_1_wIndexLo); /* wIndexLo contain Interface number */
  57   2                  break;
  58   2              case USBUART_1_RQST_RCPT_EP:         /* Class-specific request directed to the endpoint */
  59   2                  /* Find related interface to the endpoint, wIndexLo contain EP number */
  60   2                  interfaceNumber = USBUART_1_EP[CY_GET_REG8(USBUART_1_wIndexLo) & 
  61   2                                    USBUART_1_DIR_UNUSED].interface;
  62   2                  break;
  63   2              default:    /* RequestHandled is initialized as FALSE by default */
  64   2                  break;
  65   2          }
  66   1          /* Handle Class request depend on interface type */
  67   1          switch(USBUART_1_interfaceClass[interfaceNumber])
  68   1          {
  69   2              case USBUART_1_CLASS_HID:
  70   2                  #if defined(USBUART_1_ENABLE_HID_CLASS)
  71   2                      requestHandled = USBUART_1_DispatchHIDClassRqst();
  72   2                  #endif /* USBUART_1_ENABLE_HID_CLASS */
  73   2                  break;
  74   2              case USBUART_1_CLASS_AUDIO:
  75   2                  #if defined(USBUART_1_ENABLE_AUDIO_CLASS)
                              requestHandled = USBUART_1_DispatchAUDIOClassRqst();
                          #endif /* USBUART_1_CLASS_AUDIO */
  78   2                  break;
  79   2              case USBUART_1_CLASS_CDC:
  80   2                  #if defined(USBUART_1_ENABLE_CDC_CLASS)
  81   2                      requestHandled = USBUART_1_DispatchCDCClassRqst();
  82   2                  #endif /* USBUART_1_ENABLE_CDC_CLASS */
  83   2                  break;
  84   2              default:    /* requestHandled is initialized as FALSE by default */
  85   2                  break;
  86   2          }
  87   1      
  88   1          /* `#START USER_DEFINED_CLASS_CODE` Place your Class request here */
  89   1      
  90   1          /* `#END` */
  91   1      
  92   1          return(requestHandled);
  93   1      }
  94          
  95          
  96          /*******************************************************************************
  97          * Additional user functions supporting Class Specific Requests
  98          ********************************************************************************/
  99          
 100          /* `#START CLASS_SPECIFIC_FUNCTIONS` Place any additional functions here */
 101          
 102          /* `#END` */
 103          
 104          #endif /* USBUART_1_EXTERN_CLS */
 105          
 106          
 107          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_1_CLS                                                         09/04/2014 17:45:43 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USBUART_1_DispatchClassRqst (BEGIN)
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 51
0005 900000      R     MOV     DPTR,#interfaceNumber
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 53
000A 906000            MOV     DPTR,#06000H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 5403              ANL     A,#03H
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 120000      E     LCALL   ?C?CCASE
0017 0000        R     DW      ?C0002
0019 01                DB      01H
001A 0000        R     DW      ?C0003
001C 02                DB      02H
001D 0000              DW      00H
001F 0000        R     DW      ?C0001
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
0021         ?C0002:
                                           ; SOURCE LINE # 56
0021 906004            MOV     DPTR,#06004H
0024 E0                MOVX    A,@DPTR
0025 FF                MOV     R7,A
0026 900000      R     MOV     DPTR,#interfaceNumber
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
002B 801E              SJMP    ?C0001
                                           ; SOURCE LINE # 58
002D         ?C0003:
                                           ; SOURCE LINE # 60
002D 906004            MOV     DPTR,#06004H
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 EF                MOV     A,R7
0033 547F              ANL     A,#07FH
0035 FF                MOV     R7,A
0036 EF                MOV     A,R7
0037 75F00B            MOV     B,#0BH
003A A4                MUL     AB
003B 2400        E     ADD     A,#LOW USBUART_1_EP+0AH
003D F582              MOV     DPL,A
003F E4                CLR     A
0040 3400        E     ADDC    A,#HIGH USBUART_1_EP+0AH
0042 F583              MOV     DPH,A
0044 E0                MOVX    A,@DPTR
0045 FF                MOV     R7,A
0046 900000      R     MOV     DPTR,#interfaceNumber
0049 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_CLS                                                         09/04/2014 17:45:43 PAGE 4   

004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
004B         ?C0001:
                                           ; SOURCE LINE # 67
004B 900000      R     MOV     DPTR,#interfaceNumber
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 900000      E     MOV     DPTR,#USBUART_1_interfaceClass
0053 E0                MOVX    A,@DPTR
0054 FC                MOV     R4,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FD                MOV     R5,A
0058 8D82              MOV     DPL,R5
005A 8C83              MOV     DPH,R4
005C E582              MOV     A,DPL
005E 2F                ADD     A,R7
005F F582              MOV     DPL,A
0061 E4                CLR     A
0062 3583              ADDC    A,DPH
0064 F583              MOV     DPH,A
0066 E4                CLR     A
0067 93                MOVC    A,@A+DPTR
0068 FF                MOV     R7,A
0069 EF                MOV     A,R7
006A 120000      E     LCALL   ?C?CCASE
006D 0000        R     DW      ?C0005
006F 01                DB      01H
0070 0000        R     DW      ?C0008
0072 02                DB      02H
0073 0000        R     DW      ?C0006
0075 03                DB      03H
0076 0000              DW      00H
0078 0000        R     DW      ?C0005
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
007A         ?C0006:
                                           ; SOURCE LINE # 71
007A 120000      E     LCALL   USBUART_1_DispatchHIDClassRqst
007D 900000      R     MOV     DPTR,#requestHandled
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
0082 8008              SJMP    ?C0005
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0084         ?C0008:
                                           ; SOURCE LINE # 81
0084 120000      E     LCALL   USBUART_1_DispatchCDCClassRqst
0087 900000      R     MOV     DPTR,#requestHandled
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
008C         ?C0005:
                                           ; SOURCE LINE # 92
C51 COMPILER V9.51   USBUART_1_CLS                                                         09/04/2014 17:45:43 PAGE 5   

008C 900000      R     MOV     DPTR,#requestHandled
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
                                           ; SOURCE LINE # 93
0091         ?C0010:
0091 22                RET     
             ; FUNCTION USBUART_1_DispatchClassRqst (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
