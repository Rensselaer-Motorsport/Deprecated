C51 COMPILER V9.51   USBUART_1_DESCR                                                       09/04/2014 17:45:44 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_1_DESCR
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_1_descr.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_1_descr.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\USBUART_1_descr.lst) 
                    -CD DB NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\USBUART_1_descr.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBUART_1_descr.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  USB descriptors and storage.
   7          *
   8          *  Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USBUART_1.h"
  18          #include "USBUART_1_pvt.h"
  19          
  20          
  21          /*****************************************************************************
  22          *  User supplied descriptors.  If you want to specify your own descriptors,
  23          *  define USER_SUPPLIED_DESCRIPTORS below and add your descriptors.
  24          *****************************************************************************/
  25          /* `#START USER_DESCRIPTORS_DECLARATIONS` Place your declaration here */
  26          
  27          /* `#END` */
  28          
  29          
  30          /***************************************
  31          *  USB Customizer Generated Descriptors
  32          ***************************************/
  33          
  34          #if !defined(USER_SUPPLIED_DESCRIPTORS)
  35          /*********************************************************************
  36          * Device Descriptors
  37          *********************************************************************/
  38          const uint8 CYCODE USBUART_1_DEVICE0_DESCR[18u] = {
  39          /* Descriptor Length                       */ 0x12u,
  40          /* DescriptorType: DEVICE                  */ 0x01u,
  41          /* bcdUSB (ver 2.0)                        */ 0x00u, 0x02u,
  42          /* bDeviceClass                            */ 0x02u,
  43          /* bDeviceSubClass                         */ 0x00u,
  44          /* bDeviceProtocol                         */ 0x00u,
  45          /* bMaxPacketSize0                         */ 0x08u,
  46          /* idVendor                                */ 0xB4u, 0x04u,
  47          /* idProduct                               */ 0x32u, 0xF2u,
  48          /* bcdDevice                               */ 0x01u, 0x00u,
  49          /* iManufacturer                           */ 0x01u,
  50          /* iProduct                                */ 0x04u,
  51          /* iSerialNumber                           */ 0x80u,
  52          /* bNumConfigurations                      */ 0x01u
  53          };
C51 COMPILER V9.51   USBUART_1_DESCR                                                       09/04/2014 17:45:44 PAGE 2   

  54          /*********************************************************************
  55          * Config Descriptor  
  56          *********************************************************************/
  57          const uint8 CYCODE USBUART_1_DEVICE0_CONFIGURATION0_DESCR[67u] = {
  58          /*  Config Descriptor Length               */ 0x09u,
  59          /*  DescriptorType: CONFIG                 */ 0x02u,
  60          /*  wTotalLength                           */ 0x43u, 0x00u,
  61          /*  bNumInterfaces                         */ 0x02u,
  62          /*  bConfigurationValue                    */ 0x01u,
  63          /*  iConfiguration                         */ 0x01u,
  64          /*  bmAttributes                           */ 0xC0u,
  65          /*  bMaxPower                              */ 0x32u,
  66          /*********************************************************************
  67          * CDC Interface Descriptor
  68          *********************************************************************/
  69          /*  Interface Descriptor Length            */ 0x09u,
  70          /*  DescriptorType: INTERFACE              */ 0x04u,
  71          /*  bInterfaceNumber                       */ 0x00u,
  72          /*  bAlternateSetting                      */ 0x00u,
  73          /*  bNumEndpoints                          */ 0x01u,
  74          /*  bInterfaceClass                        */ 0x02u,
  75          /*  bInterfaceSubClass                     */ 0x02u,
  76          /*  bInterfaceProtocol                     */ 0x00u,
  77          /*  iInterface                             */ 0x02u,
  78          /*********************************************************************
  79          * Header Descriptor
  80          *********************************************************************/
  81          /*  Header Descriptor Length               */ 0x05u,
  82          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
  83          /*  bDescriptorSubtype                     */ 0x00u,
  84          /*  bcdADC                                 */ 0x10u, 0x01u,
  85          /*********************************************************************
  86          * Abstract Control Management Descriptor
  87          *********************************************************************/
  88          /*  Abstract Control Management Descriptor Length*/ 0x04u,
  89          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
  90          /*  bDescriptorSubtype                     */ 0x02u,
  91          /*  bmCapabilities                         */ 0x02u,
  92          /*********************************************************************
  93          * Union Descriptor
  94          *********************************************************************/
  95          /*  Union Descriptor Length                */ 0x05u,
  96          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
  97          /*  bDescriptorSubtype                     */ 0x06u,
  98          /*  bControlInterface                      */ 0x00u,
  99          /*  bSubordinateInterface                  */ 0x01u,
 100          /*********************************************************************
 101          * Call Management Descriptor
 102          *********************************************************************/
 103          /*  Call Management Descriptor Length      */ 0x05u,
 104          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
 105          /*  bDescriptorSubtype                     */ 0x01u,
 106          /*  bmCapabilities                         */ 0x00u,
 107          /*  bDataInterface                         */ 0x01u,
 108          /*********************************************************************
 109          * Endpoint Descriptor
 110          *********************************************************************/
 111          /*  Endpoint Descriptor Length             */ 0x07u,
 112          /*  DescriptorType: ENDPOINT               */ 0x05u,
 113          /*  bEndpointAddress                       */ 0x81u,
 114          /*  bmAttributes                           */ 0x03u,
 115          /*  wMaxPacketSize                         */ 0x08u, 0x00u,
C51 COMPILER V9.51   USBUART_1_DESCR                                                       09/04/2014 17:45:44 PAGE 3   

 116          /*  bInterval                              */ 0x0Au,
 117          /*********************************************************************
 118          * Data Interface Descriptor
 119          *********************************************************************/
 120          /*  Interface Descriptor Length            */ 0x09u,
 121          /*  DescriptorType: INTERFACE              */ 0x04u,
 122          /*  bInterfaceNumber                       */ 0x01u,
 123          /*  bAlternateSetting                      */ 0x00u,
 124          /*  bNumEndpoints                          */ 0x02u,
 125          /*  bInterfaceClass                        */ 0x0Au,
 126          /*  bInterfaceSubClass                     */ 0x00u,
 127          /*  bInterfaceProtocol                     */ 0x00u,
 128          /*  iInterface                             */ 0x03u,
 129          /*********************************************************************
 130          * Endpoint Descriptor
 131          *********************************************************************/
 132          /*  Endpoint Descriptor Length             */ 0x07u,
 133          /*  DescriptorType: ENDPOINT               */ 0x05u,
 134          /*  bEndpointAddress                       */ 0x82u,
 135          /*  bmAttributes                           */ 0x02u,
 136          /*  wMaxPacketSize                         */ 0x40u, 0x00u,
 137          /*  bInterval                              */ 0x0Au,
 138          /*********************************************************************
 139          * Endpoint Descriptor
 140          *********************************************************************/
 141          /*  Endpoint Descriptor Length             */ 0x07u,
 142          /*  DescriptorType: ENDPOINT               */ 0x05u,
 143          /*  bEndpointAddress                       */ 0x03u,
 144          /*  bmAttributes                           */ 0x02u,
 145          /*  wMaxPacketSize                         */ 0x40u, 0x00u,
 146          /*  bInterval                              */ 0x0Au
 147          };
 148          
 149          /*********************************************************************
 150          * String Descriptor Table
 151          *********************************************************************/
 152          const uint8 CYCODE USBUART_1_STRING_DESCRIPTORS[159u] = {
 153          /*********************************************************************
 154          * Language ID Descriptor
 155          *********************************************************************/
 156          /* Descriptor Length                       */ 0x04u,
 157          /* DescriptorType: STRING                  */ 0x03u,
 158          /* Language Id                             */ 0x09u, 0x04u,
 159          /*********************************************************************
 160          * String Descriptor: "Cypress Semiconductor"
 161          *********************************************************************/
 162          /* Descriptor Length                       */ 0x2Cu,
 163          /* DescriptorType: STRING                  */ 0x03u,
 164           (uint8)'C', 0u,(uint8)'y', 0u,(uint8)'p', 0u,(uint8)'r', 0u,(uint8)'e', 0u,
 165           (uint8)'s', 0u,(uint8)'s', 0u,(uint8)' ', 0u,(uint8)'S', 0u,(uint8)'e', 0u,
 166           (uint8)'m', 0u,(uint8)'i', 0u,(uint8)'c', 0u,(uint8)'o', 0u,(uint8)'n', 0u,
 167           (uint8)'d', 0u,(uint8)'u', 0u,(uint8)'c', 0u,(uint8)'t', 0u,(uint8)'o', 0u,
 168           (uint8)'r', 0u,
 169          /*********************************************************************
 170          * String Descriptor: "CDC Communication Interface"
 171          *********************************************************************/
 172          /* Descriptor Length                       */ 0x38u,
 173          /* DescriptorType: STRING                  */ 0x03u,
 174           (uint8)'C', 0u,(uint8)'D', 0u,(uint8)'C', 0u,(uint8)' ', 0u,(uint8)'C', 0u,
 175           (uint8)'o', 0u,(uint8)'m', 0u,(uint8)'m', 0u,(uint8)'u', 0u,(uint8)'n', 0u,
 176           (uint8)'i', 0u,(uint8)'c', 0u,(uint8)'a', 0u,(uint8)'t', 0u,(uint8)'i', 0u,
 177           (uint8)'o', 0u,(uint8)'n', 0u,(uint8)' ', 0u,(uint8)'I', 0u,(uint8)'n', 0u,
C51 COMPILER V9.51   USBUART_1_DESCR                                                       09/04/2014 17:45:44 PAGE 4   

 178           (uint8)'t', 0u,(uint8)'e', 0u,(uint8)'r', 0u,(uint8)'f', 0u,(uint8)'a', 0u,
 179           (uint8)'c', 0u,(uint8)'e', 0u,
 180          /*********************************************************************
 181          * String Descriptor: "CDC Data Interface"
 182          *********************************************************************/
 183          /* Descriptor Length                       */ 0x26u,
 184          /* DescriptorType: STRING                  */ 0x03u,
 185           (uint8)'C', 0u,(uint8)'D', 0u,(uint8)'C', 0u,(uint8)' ', 0u,(uint8)'D', 0u,
 186           (uint8)'a', 0u,(uint8)'t', 0u,(uint8)'a', 0u,(uint8)' ', 0u,(uint8)'I', 0u,
 187           (uint8)'n', 0u,(uint8)'t', 0u,(uint8)'e', 0u,(uint8)'r', 0u,(uint8)'f', 0u,
 188           (uint8)'a', 0u,(uint8)'c', 0u,(uint8)'e', 0u,
 189          /*********************************************************************
 190          * String Descriptor: "USBUART"
 191          *********************************************************************/
 192          /* Descriptor Length                       */ 0x10u,
 193          /* DescriptorType: STRING                  */ 0x03u,
 194           (uint8)'U', 0u,(uint8)'S', 0u,(uint8)'B', 0u,(uint8)'U', 0u,(uint8)'A', 0u,
 195           (uint8)'R', 0u,(uint8)'T', 0u,
 196          /*********************************************************************/
 197          /* Marks the end of the list.              */ 0x00u};
 198          /*********************************************************************/
 199          
 200          /*********************************************************************
 201          * Serial Number String Descriptor
 202          *********************************************************************/
 203          const uint8 CYCODE USBUART_1_SN_STRING_DESCRIPTOR[2] = {
 204          /* Descriptor Length                       */ 0x02u,
 205          /* DescriptorType: STRING                  */ 0x03u,
 206          
 207          };
 208          
 209          /*********************************************************************
 210          * HID Report Descriptor: 3-Button Mouse
 211          *********************************************************************/
 212          const uint8 CYCODE USBUART_1_HIDREPORT_DESCRIPTOR1[54u] = {
 213          /*  Descriptor Size (Not part of descriptor)*/ USBUART_1_HID_RPT_1_SIZE_LSB,
 214          USBUART_1_HID_RPT_1_SIZE_MSB,
 215          /* USAGE_PAGE                              */ 0x05u, 0x01u, 
 216          /* USAGE                                   */ 0x09u, 0x02u, 
 217          /* COLLECTION                              */ 0xA1u, 0x01u, 
 218          /* USAGE                                   */ 0x09u, 0x01u, 
 219          /* COLLECTION                              */ 0xA1u, 0x00u, 
 220          /* USAGE_PAGE                              */ 0x05u, 0x09u, 
 221          /* USAGE_MINIMUM                           */ 0x19u, 0x01u, 
 222          /* USAGE_MAXIMUM                           */ 0x29u, 0x03u, 
 223          /* LOGICAL_MINIMUM                         */ 0x15u, 0x00u, 
 224          /* LOGICAL_MAXIMUM                         */ 0x25u, 0x01u, 
 225          /* REPORT_COUNT                            */ 0x95u, 0x03u, 
 226          /* REPORT_SIZE                             */ 0x75u, 0x01u, 
 227          /* INPUT                                   */ 0x81u, 0x02u, 
 228          /* REPORT_COUNT                            */ 0x95u, 0x01u, 
 229          /* REPORT_SIZE                             */ 0x75u, 0x05u, 
 230          /* INPUT                                   */ 0x81u, 0x01u, 
 231          /* USAGE_PAGE                              */ 0x05u, 0x01u, 
 232          /* USAGE                                   */ 0x09u, 0x30u, 
 233          /* USAGE                                   */ 0x09u, 0x31u, 
 234          /* LOGICAL_MINIMUM                         */ 0x15u, 0x81u, 
 235          /* LOGICAL_MAXIMUM                         */ 0x25u, 0x7Fu, 
 236          /* REPORT_SIZE                             */ 0x75u, 0x08u, 
 237          /* REPORT_COUNT                            */ 0x95u, 0x02u, 
 238          /* INPUT                                   */ 0x81u, 0x06u, 
 239          /* END_COLLECTION                          */ 0xC0u, 
C51 COMPILER V9.51   USBUART_1_DESCR                                                       09/04/2014 17:45:44 PAGE 5   

 240          /* END_COLLECTION                          */ 0xC0u, 
 241          /*********************************************************************/
 242          /* End of the HID Report Descriptor        */ 0x00u, 0x00u};
 243          /*********************************************************************/
 244          
 245          
 246          /*********************************************************************
 247          * Endpoint Setting Table -- This table contain the endpoint setting
 248          *                           for each endpoint in the configuration. It
 249          *                           contains the necessary information to
 250          *                           configure the endpoint hardware for each
 251          *                           interface and alternate setting.
 252          *********************************************************************/
 253          const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE USBUART_1_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE[3u] = {
 254          /* IFC  ALT    EPAddr bmAttr MaxPktSize Class ********************/
 255          {0x00u, 0x00u, 0x81u, 0x03u, 0x0008u,   0x02u},
 256          {0x01u, 0x00u, 0x82u, 0x02u, 0x0040u,   0x0Au},
 257          {0x01u, 0x00u, 0x03u, 0x02u, 0x0040u,   0x0Au}
 258          };
 259          const uint8 CYCODE USBUART_1_DEVICE0_CONFIGURATION0_INTERFACE_CLASS[2u] = {
 260          0x02u, 0x0Au
 261          };
 262          /*********************************************************************
 263          * Config Dispatch Table -- Points to the Config Descriptor and each of
 264          *                          and endpoint setup table and to each
 265          *                          interface table if it specifies a USB Class
 266          *********************************************************************/
 267          const T_USBUART_1_LUT CYCODE USBUART_1_DEVICE0_CONFIGURATION0_TABLE[5u] = {
 268              {0x01u,     &USBUART_1_DEVICE0_CONFIGURATION0_DESCR},
 269              {0x03u,     &USBUART_1_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE},
 270              {0x00u,    NULL},
 271              {0x00u,    NULL},
 272              {0x00u,     &USBUART_1_DEVICE0_CONFIGURATION0_INTERFACE_CLASS}
 273          };
 274          /*********************************************************************
 275          * Device Dispatch Table -- Points to the Device Descriptor and each of
 276          *                          and Configuration Tables for this Device 
 277          *********************************************************************/
 278          const T_USBUART_1_LUT CYCODE USBUART_1_DEVICE0_TABLE[2u] = {
 279              {0x01u,     &USBUART_1_DEVICE0_DESCR},
 280              {0x01u,     &USBUART_1_DEVICE0_CONFIGURATION0_TABLE}
 281          };
 282          /*********************************************************************
 283          * Device Table -- Indexed by the device number.
 284          *********************************************************************/
 285          const T_USBUART_1_LUT CYCODE USBUART_1_TABLE[1u] = {
 286              {0x01u,     &USBUART_1_DEVICE0_TABLE}
 287          };
 288          
 289          #endif /* USER_SUPPLIED_DESCRIPTORS */
 290          
 291          #if defined(USBUART_1_ENABLE_MSOS_STRING)
 292          
 293              /******************************************************************************
 294              *  USB Microsoft OS String Descriptor
 295              *  "MSFT" identifies a Microsoft host
 296              *  "100" specifies version 1.00
 297              *  USBUART_1_GET_EXTENDED_CONFIG_DESCRIPTOR becomes the bRequest value
 298              *  in a host vendor device/class request
 299              ******************************************************************************/
 300          
 301              const uint8 CYCODE USBUART_1_MSOS_DESCRIPTOR[USBUART_1_MSOS_DESCRIPTOR_LENGTH] = {
C51 COMPILER V9.51   USBUART_1_DESCR                                                       09/04/2014 17:45:44 PAGE 6   

 302              /* Descriptor Length                       */   0x12u,
 303              /* DescriptorType: STRING                  */   0x03u,
 304              /* qwSignature - "MSFT100"                 */   (uint8)'M', 0u, (uint8)'S', 0u, (uint8)'F', 0u, (uint8
             -)'T', 0u,
 305                                                              (uint8)'1', 0u, (uint8)'0', 0u, (uint8)'0', 0u,
 306              /* bMS_VendorCode:                         */   USBUART_1_GET_EXTENDED_CONFIG_DESCRIPTOR,
 307              /* bPad                                    */   0x00u
 308              };
 309          
 310              /* Extended Configuration Descriptor */
 311          
 312              const uint8 CYCODE USBUART_1_MSOS_CONFIGURATION_DESCR[USBUART_1_MSOS_CONF_DESCR_LENGTH] = {
 313              /*  Length of the descriptor 4 bytes       */   0x28u, 0x00u, 0x00u, 0x00u,
 314              /*  Version of the descriptor 2 bytes      */   0x00u, 0x01u,
 315              /*  wIndex - Fixed:INDEX_CONFIG_DESCRIPTOR */   0x04u, 0x00u,
 316              /*  bCount - Count of device functions.    */   0x01u,
 317              /*  Reserved : 7 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
 318              /*  bFirstInterfaceNumber                  */   0x00u,
 319              /*  Reserved                               */   0x01u,
 320              /*  compatibleID    - "CYUSB\0\0"          */   (uint8)'C', (uint8)'Y', (uint8)'U', (uint8)'S', (uint8
             -)'B',
 321                                                              0x00u, 0x00u, 0x00u,
 322              /*  subcompatibleID - "00001\0\0"          */   (uint8)'0', (uint8)'0', (uint8)'0', (uint8)'0', (uint8
             -)'1',
 323                                                              0x00u, 0x00u, 0x00u,
 324              /*  Reserved : 6 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
 325              };
 326          
 327          #endif /* USBUART_1_ENABLE_MSOS_STRING */
 328          
 329          /* DIE ID string descriptor for 8 bytes ID */
 330          #if defined(USBUART_1_ENABLE_IDSN_STRING)
 331              uint8 USBUART_1_idSerialNumberStringDescriptor[USBUART_1_IDSN_DESCR_LENGTH];
 332          #endif /* USBUART_1_ENABLE_IDSN_STRING */
 333          
 334          
 335          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_1_DESCR                                                       09/04/2014 17:45:44 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE




MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    413    ----
   XDATA SIZE       =     34    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
