C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_1_PM
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_1_pm.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_1_pm.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\USBUART_1_pm.lst) CD DB 
                    -NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\USBUART_1_pm.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBUART_1_pm.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  This file provides Suspend/Resume APIs functionality.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "project.h"
  18          #include "USBUART_1.h"
  19          #include "USBUART_1_pvt.h"
  20          
  21          
  22          /***************************************
  23          * Custom Declarations
  24          ***************************************/
  25          /* `#START PM_CUSTOM_DECLARATIONS` Place your declaration here */
  26          
  27          /* `#END` */
  28          
  29          
  30          /***************************************
  31          * Local data allocation
  32          ***************************************/
  33          
  34          static USBUART_1_BACKUP_STRUCT  USBUART_1_backup;
  35          
  36          
  37          #if(USBUART_1_DP_ISR_REMOVE == 0u)
  38          
  39              /*******************************************************************************
  40              * Function Name: USBUART_1_DP_Interrupt
  41              ********************************************************************************
  42              *
  43              * Summary:
  44              *  This Interrupt Service Routine handles DP pin changes for wake-up from
  45              *  the sleep mode.
  46              *
  47              * Parameters:
  48              *  None.
  49              *
  50              * Return:
  51              *  None.
  52              *
  53              *******************************************************************************/
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 2   

  54              CY_ISR(USBUART_1_DP_ISR)
  55              {
  56   1              /* `#START DP_USER_CODE` Place your code here */
  57   1      
  58   1              /* `#END` */
  59   1      
  60   1              /* Clears active interrupt */
  61   1              CY_GET_REG8(USBUART_1_DP_INTSTAT_PTR);
  62   1          }
  63          
  64          #endif /* (USBUART_1_DP_ISR_REMOVE == 0u) */
  65          
  66          
  67          /*******************************************************************************
  68          * Function Name: USBUART_1_SaveConfig
  69          ********************************************************************************
  70          *
  71          * Summary:
  72          *  Saves the current user configuration.
  73          *
  74          * Parameters:
  75          *  None.
  76          *
  77          * Return:
  78          *  None.
  79          *
  80          * Reentrant:
  81          *  No.
  82          *
  83          *******************************************************************************/
  84          void USBUART_1_SaveConfig(void) 
  85          {
  86   1      
  87   1      }
  88          
  89          
  90          /*******************************************************************************
  91          * Function Name: USBUART_1_RestoreConfig
  92          ********************************************************************************
  93          *
  94          * Summary:
  95          *  Restores the current user configuration.
  96          *
  97          * Parameters:
  98          *  None.
  99          *
 100          * Return:
 101          *  None.
 102          *
 103          * Reentrant:
 104          *  No.
 105          *
 106          *******************************************************************************/
 107          void USBUART_1_RestoreConfig(void) 
 108          {
 109   1          if(USBUART_1_configuration != 0u)
 110   1          {
 111   2              USBUART_1_ConfigReg();
 112   2          }
 113   1      }
 114          
 115          
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 3   

 116          /*******************************************************************************
 117          * Function Name: USBUART_1_Suspend
 118          ********************************************************************************
 119          *
 120          * Summary:
 121          *  This function disables the USBFS block and prepares for power down mode.
 122          *
 123          * Parameters:
 124          *  None.
 125          *
 126          * Return:
 127          *   None.
 128          *
 129          * Global variables:
 130          *  USBUART_1_backup.enable:  modified.
 131          *
 132          * Reentrant:
 133          *  No.
 134          *
 135          *******************************************************************************/
 136          void USBUART_1_Suspend(void) 
 137          {
 138   1          uint8 enableInterrupts;
 139   1          enableInterrupts = CyEnterCriticalSection();
 140   1      
 141   1          if((CY_GET_REG8(USBUART_1_CR0_PTR) & USBUART_1_CR0_ENABLE) != 0u)
 142   1          {   /* USB block is enabled */
 143   2              USBUART_1_backup.enableState = 1u;
 144   2      
 145   2              #if(USBUART_1_EP_MM != USBUART_1__EP_MANUAL)
                          USBUART_1_Stop_DMA(USBUART_1_MAX_EP);     /* Stop all DMAs */
                      #endif   /*  USBUART_1_EP_MM != USBUART_1__EP_MANUAL */
 148   2      
 149   2              /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled */
 150   2              USBUART_1_USBIO_CR0_REG &= (uint8)~USBUART_1_USBIO_CR0_TEN;
 151   2              CyDelayUs(0u);  /*~50ns delay */
 152   2      
 153   2              /* Disable the USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted) and pd_pullup_hv(Inverted) hig
             -h. */
 154   2              USBUART_1_PM_USB_CR0_REG &=
 155   2                                      (uint8)~(USBUART_1_PM_USB_CR0_PD_N | USBUART_1_PM_USB_CR0_PD_PULLUP_N);
 156   2      
 157   2              /* Disable the SIE */
 158   2              USBUART_1_CR0_REG &= (uint8)~USBUART_1_CR0_ENABLE;
 159   2      
 160   2              CyDelayUs(0u);  /* ~50ns delay */
 161   2              /* Store mode and Disable VRegulator*/
 162   2              USBUART_1_backup.mode = USBUART_1_CR1_REG & USBUART_1_CR1_REG_ENABLE;
 163   2              USBUART_1_CR1_REG &= (uint8)~USBUART_1_CR1_REG_ENABLE;
 164   2      
 165   2              CyDelayUs(1u);  /* 0.5 us min delay */
 166   2              /* Disable the USBIO reference by setting PM.USB_CR0.fsusbio_ref_en.*/
 167   2              USBUART_1_PM_USB_CR0_REG &= (uint8)~USBUART_1_PM_USB_CR0_REF_EN;
 168   2      
 169   2              /* Switch DP and DM terminals to GPIO mode and disconnect 1.5k pullup*/
 170   2              USBUART_1_USBIO_CR1_REG |= USBUART_1_USBIO_CR1_IOMODE;
 171   2      
 172   2              /* Disable USB in ACT PM */
 173   2              USBUART_1_PM_ACT_CFG_REG &= (uint8)~USBUART_1_PM_ACT_EN_FSUSB;
 174   2              /* Disable USB block for Standby Power Mode */
 175   2              USBUART_1_PM_STBY_CFG_REG &= (uint8)~USBUART_1_PM_STBY_EN_FSUSB;
 176   2              CyDelayUs(1u); /* min  0.5us delay required */
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 4   

 177   2      
 178   2          }
 179   1          else
 180   1          {
 181   2              USBUART_1_backup.enableState = 0u;
 182   2          }
 183   1          
 184   1          CyExitCriticalSection(enableInterrupts);
 185   1      
 186   1          /* Set the DP Interrupt for wake-up from sleep mode. */
 187   1          #if(USBUART_1_DP_ISR_REMOVE == 0u)
 188   1              (void) CyIntSetVector(USBUART_1_DP_INTC_VECT_NUM, &USBUART_1_DP_ISR);
 189   1              CyIntSetPriority(USBUART_1_DP_INTC_VECT_NUM, USBUART_1_DP_INTC_PRIOR);
 190   1              CyIntClearPending(USBUART_1_DP_INTC_VECT_NUM);
 191   1              CyIntEnable(USBUART_1_DP_INTC_VECT_NUM);
 192   1          #endif /* (USBUART_1_DP_ISR_REMOVE == 0u) */
 193   1      }
 194          
 195          
 196          /*******************************************************************************
 197          * Function Name: USBUART_1_Resume
 198          ********************************************************************************
 199          *
 200          * Summary:
 201          *  This function enables the USBFS block after power down mode.
 202          *
 203          * Parameters:
 204          *  None.
 205          *
 206          * Return:
 207          *  None.
 208          *
 209          * Global variables:
 210          *  USBUART_1_backup - checked.
 211          *
 212          * Reentrant:
 213          *  No.
 214          *
 215          *******************************************************************************/
 216          void USBUART_1_Resume(void) 
 217          {
 218   1          uint8 enableInterrupts;
 219   1          enableInterrupts = CyEnterCriticalSection();
 220   1      
 221   1          if(USBUART_1_backup.enableState != 0u)
 222   1          {
 223   2              #if(USBUART_1_DP_ISR_REMOVE == 0u)
 224   2                  CyIntDisable(USBUART_1_DP_INTC_VECT_NUM);
 225   2              #endif /*  USBUART_1_DP_ISR_REMOVE */
 226   2      
 227   2              /* Enable USB block */
 228   2              USBUART_1_PM_ACT_CFG_REG |= USBUART_1_PM_ACT_EN_FSUSB;
 229   2              /* Enable USB block for Standby Power Mode */
 230   2              USBUART_1_PM_STBY_CFG_REG |= USBUART_1_PM_STBY_EN_FSUSB;
 231   2              /* Enable core clock */
 232   2              USBUART_1_USB_CLK_EN_REG |= USBUART_1_USB_CLK_ENABLE;
 233   2      
 234   2              /* Enable the USBIO reference by setting PM.USB_CR0.fsusbio_ref_en.*/
 235   2              USBUART_1_PM_USB_CR0_REG |= USBUART_1_PM_USB_CR0_REF_EN;
 236   2              /* The reference will be available ~40us after power restored */
 237   2              CyDelayUs(40u);
 238   2              /* Return VRegulator*/
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 5   

 239   2              USBUART_1_CR1_REG |= USBUART_1_backup.mode;
 240   2              CyDelayUs(0u);  /*~50ns delay */
 241   2              /* Enable USBIO */
 242   2              USBUART_1_PM_USB_CR0_REG |= USBUART_1_PM_USB_CR0_PD_N;
 243   2              CyDelayUs(2u);
 244   2              /* Set the USBIO pull-up enable */
 245   2              USBUART_1_PM_USB_CR0_REG |= USBUART_1_PM_USB_CR0_PD_PULLUP_N;
 246   2      
 247   2              /* Re-init Arbiter configuration for DMA transfers */
 248   2              #if(USBUART_1_EP_MM != USBUART_1__EP_MANUAL)
                          /* Usb arb interrupt enable */
                          USBUART_1_ARB_INT_EN_REG = USBUART_1_ARB_INT_MASK;
                          #if(USBUART_1_EP_MM == USBUART_1__EP_DMAMANUAL)
                              USBUART_1_ARB_CFG_REG = USBUART_1_ARB_CFG_MANUAL_DMA;
                          #endif   /*  USBUART_1_EP_MM == USBUART_1__EP_DMAMANUAL */
                          #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                              /*Set cfg cmplt this rises DMA request when the full configuration is done */
                              USBUART_1_ARB_CFG_REG = USBUART_1_ARB_CFG_AUTO_DMA | USBUART_1_ARB_CFG_AUTO_MEM;
                          #endif   /*  USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
                      #endif   /*  USBUART_1_EP_MM != USBUART_1__EP_MANUAL */
 259   2      
 260   2              /* STALL_IN_OUT */
 261   2              CY_SET_REG8(USBUART_1_EP0_CR_PTR, USBUART_1_MODE_STALL_IN_OUT);
 262   2              /* Enable the SIE with a last address */
 263   2              USBUART_1_CR0_REG |= USBUART_1_CR0_ENABLE;
 264   2              CyDelayCycles(1u);
 265   2              /* Finally, Enable d+ pullup and select iomode to USB mode*/
 266   2              CY_SET_REG8(USBUART_1_USBIO_CR1_PTR, USBUART_1_USBIO_CR1_USBPUEN);
 267   2      
 268   2              /* Restore USB register settings */
 269   2              USBUART_1_RestoreConfig();
 270   2          }
 271   1      
 272   1          CyExitCriticalSection(enableInterrupts);
 273   1      }
 274          
 275          
 276          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USBUART_1_DP_ISR (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C085              PUSH    DPH1
0008 C084              PUSH    DPL1
000A C086              PUSH    DPS
000C 758600            MOV     DPS,#00H
000F C000        E     PUSH    ?C?XPAGE1SFR
0011 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0014 C0D0              PUSH    PSW
0016 75D000            MOV     PSW,#00H
0019 C007              PUSH    AR7
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 61
001B 90458F            MOV     DPTR,#0458FH
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
                                           ; SOURCE LINE # 62
0020 D007              POP     AR7
0022 D0D0              POP     PSW
0024 D000        E     POP     ?C?XPAGE1SFR
0026 D086              POP     DPS
0028 D084              POP     DPL1
002A D085              POP     DPH1
002C D082              POP     DPL
002E D083              POP     DPH
0030 D0E0              POP     ACC
0032 32                RETI    
             ; FUNCTION USBUART_1_DP_ISR (END)

             ; FUNCTION USBUART_1_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 87
0000 22                RET     
             ; FUNCTION USBUART_1_SaveConfig (END)

             ; FUNCTION USBUART_1_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0000 900000      E     MOV     DPTR,#USBUART_1_configuration
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 6003              JZ      ?C0004
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
0008 120000      E     LCALL   USBUART_1_ConfigReg
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
000B         ?C0004:
000B 22                RET     
             ; FUNCTION USBUART_1_RestoreConfig (END)

             ; FUNCTION USBUART_1_Suspend (BEGIN)
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 7   

                                           ; SOURCE LINE # 139
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#enableInterrupts
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0008 906008            MOV     DPTR,#06008H
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 5480              ANL     A,#080H
0010 FF                MOV     R7,A
0011 7E00              MOV     R6,#00H
0013 EF                MOV     A,R7
0014 4E                ORL     A,R6
0015 7003              JNZ     $ + 5H
0017 020000      R     LJMP    ?C0005
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
001A 900000      R     MOV     DPTR,#USBUART_1_backup
001D 7401              MOV     A,#01H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
0020 906010            MOV     DPTR,#06010H
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 EF                MOV     A,R7
0026 547F              ANL     A,#07FH
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
002B 7F00              MOV     R7,#00H
002D 7E00              MOV     R6,#00H
002F 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 155
0032 904394            MOV     DPTR,#04394H
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 EF                MOV     A,R7
0038 54F9              ANL     A,#0F9H
003A FF                MOV     R7,A
003B EF                MOV     A,R7
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
003D 906008            MOV     DPTR,#06008H
0040 E0                MOVX    A,@DPTR
0041 FF                MOV     R7,A
0042 EF                MOV     A,R7
0043 547F              ANL     A,#07FH
0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
0048 7F00              MOV     R7,#00H
004A 7E00              MOV     R6,#00H
004C 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 162
004F 906009            MOV     DPTR,#06009H
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 8   

0055 5401              ANL     A,#01H
0057 FF                MOV     R7,A
0058 900000      R     MOV     DPTR,#USBUART_1_backup+01H
005B EF                MOV     A,R7
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
005D 906009            MOV     DPTR,#06009H
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 54FE              ANL     A,#0FEH
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
0068 7F01              MOV     R7,#01H
006A 7E00              MOV     R6,#00H
006C 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 167
006F 904394            MOV     DPTR,#04394H
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 EF                MOV     A,R7
0075 54FE              ANL     A,#0FEH
0077 FF                MOV     R7,A
0078 EF                MOV     A,R7
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
007A 906012            MOV     DPTR,#06012H
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F EF                MOV     A,R7
0080 4420              ORL     A,#020H
0082 FF                MOV     R7,A
0083 EF                MOV     A,R7
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
0085 9043A5            MOV     DPTR,#043A5H
0088 E0                MOVX    A,@DPTR
0089 FF                MOV     R7,A
008A EF                MOV     A,R7
008B 54FE              ANL     A,#0FEH
008D FF                MOV     R7,A
008E EF                MOV     A,R7
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
0090 9043B5            MOV     DPTR,#043B5H
0093 E0                MOVX    A,@DPTR
0094 FF                MOV     R7,A
0095 EF                MOV     A,R7
0096 54FE              ANL     A,#0FEH
0098 FF                MOV     R7,A
0099 EF                MOV     A,R7
009A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
009B 7F01              MOV     R7,#01H
009D 7E00              MOV     R6,#00H
009F 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 178
00A2 8005              SJMP    ?C0006
00A4         ?C0005:
                                           ; SOURCE LINE # 180
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 9   

                                           ; SOURCE LINE # 181
00A4 900000      R     MOV     DPTR,#USBUART_1_backup
00A7 E4                CLR     A
00A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
00A9         ?C0006:
                                           ; SOURCE LINE # 184
00A9 900000      R     MOV     DPTR,#enableInterrupts
00AC E0                MOVX    A,@DPTR
00AD FF                MOV     R7,A
00AE 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 188
00B1 7C00        R     MOV     R4,#HIGH USBUART_1_DP_ISR
00B3 7D00        R     MOV     R5,#LOW USBUART_1_DP_ISR
00B5 7F0C              MOV     R7,#0CH
00B7 120000      E     LCALL   _CyIntSetVector
                                           ; SOURCE LINE # 189
00BA 7D07              MOV     R5,#07H
00BC 7F0C              MOV     R7,#0CH
00BE 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 190
00C1 9044D9            MOV     DPTR,#044D9H
00C4 7410              MOV     A,#010H
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
00C7 9044C1            MOV     DPTR,#044C1H
00CA 7410              MOV     A,#010H
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
00CD 22                RET     
             ; FUNCTION USBUART_1_Suspend (END)

             ; FUNCTION USBUART_1_Resume (BEGIN)
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 219
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#enableInterrupts
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0008 900000      R     MOV     DPTR,#USBUART_1_backup
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 7003              JNZ     $ + 5H
0010 020000      R     LJMP    ?C0008
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 224
0013 9044C9            MOV     DPTR,#044C9H
0016 7410              MOV     A,#010H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
0019 9043A5            MOV     DPTR,#043A5H
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 4401              ORL     A,#01H
0021 FF                MOV     R7,A
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 10  

0024 9043B5            MOV     DPTR,#043B5H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 4401              ORL     A,#01H
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
002F 90609D            MOV     DPTR,#0609DH
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 4401              ORL     A,#01H
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
003A 904394            MOV     DPTR,#04394H
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 4401              ORL     A,#01H
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
0045 7F28              MOV     R7,#028H
0047 7E00              MOV     R6,#00H
0049 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 239
004C 906009            MOV     DPTR,#06009H
004F C083              PUSH    DPH
0051 C082              PUSH    DPL
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 900000      R     MOV     DPTR,#USBUART_1_backup+01H
0058 E0                MOVX    A,@DPTR
0059 FE                MOV     R6,A
005A EF                MOV     A,R7
005B 4E                ORL     A,R6
005C FF                MOV     R7,A
005D D082              POP     DPL
005F D083              POP     DPH
0061 EF                MOV     A,R7
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
0063 7F00              MOV     R7,#00H
0065 7E00              MOV     R6,#00H
0067 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 242
006A 904394            MOV     DPTR,#04394H
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EF                MOV     A,R7
0070 4402              ORL     A,#02H
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
0075 7F02              MOV     R7,#02H
0077 7E00              MOV     R6,#00H
C51 COMPILER V9.51   USBUART_1_PM                                                          09/04/2014 17:45:47 PAGE 11  

0079 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 245
007C 904394            MOV     DPTR,#04394H
007F E0                MOVX    A,@DPTR
0080 FF                MOV     R7,A
0081 EF                MOV     A,R7
0082 4404              ORL     A,#04H
0084 FF                MOV     R7,A
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 261
0087 906028            MOV     DPTR,#06028H
008A 7403              MOV     A,#03H
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 263
008D 906008            MOV     DPTR,#06008H
0090 E0                MOVX    A,@DPTR
0091 FF                MOV     R7,A
0092 EF                MOV     A,R7
0093 4480              ORL     A,#080H
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 264
0098 7F01              MOV     R7,#01H
009A 7E00              MOV     R6,#00H
009C 7D00              MOV     R5,#00H
009E 7C00              MOV     R4,#00H
00A0 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 266
00A3 906012            MOV     DPTR,#06012H
00A6 7404              MOV     A,#04H
00A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
00A9 120000      R     LCALL   USBUART_1_RestoreConfig
                                           ; SOURCE LINE # 270
00AC         ?C0008:
                                           ; SOURCE LINE # 272
00AC 900000      R     MOV     DPTR,#enableInterrupts
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 273
00B4 22                RET     
             ; FUNCTION USBUART_1_Resume (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    451    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
