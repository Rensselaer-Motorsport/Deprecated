C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFLASH
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\CyFlash.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\CyFlash.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\CyFlash.lst) CD DB NOIP OT(2,
                    -SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\CyFlash.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: CyFlash.c
   3          * Version 4.10
   4          *
   5          *  Description:
   6          *   Provides an API for the FLASH/EEPROM.
   7          *
   8          *  Note:
   9          *   This code is endian agnostic.
  10          *
  11          *  Note:
  12          *   Documentation of the API's in this file is located in the
  13          *   System Reference Guide provided with PSoC Creator.
  14          *
  15          ********************************************************************************
  16          * Copyright 2008-2014, Cypress Semiconductor Corporation. All rights reserved.
  17          * You may use this file only in accordance with the license, terms, conditions,
  18          * disclaimers, and limitations in the end user license agreement accompanying
  19          * the software package with which this file was provided.
  20          *******************************************************************************/
  21          
  22          #include "CyFlash.h"
  23          
  24          
  25          /*******************************************************************************
  26          * Holds the die temperature, updated by CySetTemp(). Used for flash writing.
  27          * The first byte is the sign of the temperature (0 = negative, 1 = positive).
  28          * The second byte is the magnitude.
  29          *******************************************************************************/
  30          uint8 dieTemperature[CY_FLASH_DIE_TEMP_DATA_SIZE];
  31          
  32          #if(CYDEV_ECC_ENABLE == 0)
  33              static uint8 * rowBuffer = 0;
  34          #endif  /* (CYDEV_ECC_ENABLE == 0) */
  35          
  36          
  37          static cystatus CySetTempInt(void);
  38          
  39          
  40          /*******************************************************************************
  41          * Function Name: CyFlash_Start
  42          ********************************************************************************
  43          *
  44          * Summary:
  45          *  Enable the Flash.
  46          *
  47          * Parameters:
  48          *  None
  49          *
  50          * Return:
  51          *  None
  52          *
  53          *******************************************************************************/
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 2   

  54          void CyFlash_Start(void) 
  55          {
  56   1          /* Active Power Mode */
  57   1          *CY_FLASH_PM_ACT_EEFLASH_PTR |= CY_FLASH_PM_FLASH_MASK;
  58   1      
  59   1          /* Standby Power Mode */
  60   1          *CY_FLASH_PM_ALTACT_EEFLASH_PTR |= CY_FLASH_PM_FLASH_MASK;
  61   1      
  62   1          CyDelayUs(CY_FLASH_EE_STARTUP_DELAY);
  63   1      }
  64          
  65          
  66          /*******************************************************************************
  67          * Function Name: CyFlash_Stop
  68          ********************************************************************************
  69          *
  70          * Summary:
  71          *  Disable the Flash.
  72          *
  73          * Parameters:
  74          *  None
  75          *
  76          * Return:
  77          *  None
  78          *
  79          * Side Effects:
  80          *  This setting is ignored as long as the CPU is currently running.  This will
  81          *  only take effect when the CPU is later disabled.
  82          *
  83          *******************************************************************************/
  84          void CyFlash_Stop(void) 
  85          {
  86   1          /* Active Power Mode */
  87   1          *CY_FLASH_PM_ACT_EEFLASH_PTR &= ((uint8)(~CY_FLASH_PM_FLASH_MASK));
  88   1      
  89   1          /* Standby Power Mode */
  90   1          *CY_FLASH_PM_ALTACT_EEFLASH_PTR &= ((uint8)(~CY_FLASH_PM_FLASH_MASK));
  91   1      }
  92          
  93          
  94          /*******************************************************************************
  95          * Function Name: CySetTempInt
  96          ********************************************************************************
  97          *
  98          * Summary:
  99          *  Sends a command to the SPC to read the die temperature. Sets a global value
 100          *  used by the Write function. This function must be called once before
 101          *  executing a series of Flash writing functions.
 102          *
 103          * Parameters:
 104          *  None
 105          *
 106          * Return:
 107          *  status:
 108          *   CYRET_SUCCESS - if successful
 109          *   CYRET_LOCKED  - if Flash writing already in use
 110          *   CYRET_UNKNOWN - if there was an SPC error
 111          *
 112          *******************************************************************************/
 113          static cystatus CySetTempInt(void) 
 114          {
 115   1          cystatus status;
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 3   

 116   1      
 117   1          /* Make sure SPC is powered */
 118   1          CySpcStart();
 119   1      
 120   1          /* Plan for failure. */
 121   1          status = CYRET_UNKNOWN;
 122   1      
 123   1          if(CySpcLock() == CYRET_SUCCESS)
 124   1          {
 125   2              /* Write the command. */
 126   2              if(CYRET_STARTED == CySpcGetTemp(CY_TEMP_NUMBER_OF_SAMPLES))
 127   2              {
 128   3                  do
 129   3                  {
 130   4                      if(CySpcReadData(dieTemperature, CY_FLASH_DIE_TEMP_DATA_SIZE) == CY_FLASH_DIE_TEMP_DATA_SI
             -ZE)
 131   4                      {
 132   5                          status = CYRET_SUCCESS;
 133   5      
 134   5                          while(CY_SPC_BUSY)
 135   5                          {
 136   6                              /* Spin until idle. */
 137   6                              CyDelayUs(1u);
 138   6                          }
 139   5                          break;
 140   5                      }
 141   4      
 142   4                  } while(CY_SPC_BUSY);
 143   3              }
 144   2      
 145   2              CySpcUnlock();
 146   2          }
 147   1          else
 148   1          {
 149   2              status = CYRET_LOCKED;
 150   2          }
 151   1      
 152   1          return (status);
 153   1      }
 154          
 155          
 156          /*******************************************************************************
 157          * Function Name: CySetTemp
 158          ********************************************************************************
 159          *
 160          * Summary:
 161          *  This is a wraparound for CySetTempInt(). It is used to return the second
 162          *  successful read of the temperature value.
 163          *
 164          * Parameters:
 165          *  None
 166          *
 167          * Return:
 168          *  status:
 169          *   CYRET_SUCCESS if successful.
 170          *   CYRET_LOCKED  if Flash writing already in use
 171          *   CYRET_UNKNOWN if there was an SPC error.
 172          *
 173          *  uint8 dieTemperature[2]:
 174          *   Holds the die temperature for the flash writing algorithm. The first byte is
 175          *   the sign of the temperature (0 = negative, 1 = positive). The second byte is
 176          *   the magnitude.
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 4   

 177          *
 178          *******************************************************************************/
 179          cystatus CySetTemp(void) 
 180          {
 181   1          cystatus status = CySetTempInt();
 182   1      
 183   1          if(status == CYRET_SUCCESS)
 184   1          {
 185   2              status = CySetTempInt();
 186   2          }
 187   1      
 188   1          return (status);
 189   1      }
 190          
 191          
 192          /*******************************************************************************
 193          * Function Name: CySetFlashEEBuffer
 194          ********************************************************************************
 195          *
 196          * Summary:
 197          *  Sets the user supplied temporary buffer to store SPC data while performing
 198          *  Flash and EEPROM commands. This buffer is only necessary when the Flash ECC is
 199          *  disabled.
 200          *
 201          * Parameters:
 202          *  buffer:
 203          *   The address of a block of memory to store temporary memory. The size of the block
 204          *   of memory is CYDEV_FLS_ROW_SIZE + CYDEV_ECC_ROW_SIZE.
 205          *
 206          * Return:
 207          *  status:
 208          *   CYRET_SUCCESS if successful.
 209          *   CYRET_BAD_PARAM if the buffer is NULL
 210          *
 211          *******************************************************************************/
 212          cystatus CySetFlashEEBuffer(uint8 * buffer) 
 213          {
 214   1          cystatus status = CYRET_SUCCESS;
 215   1      
 216   1          CySpcStart();
 217   1      
 218   1          #if(CYDEV_ECC_ENABLE == 0)
 219   1      
 220   1              if(NULL == buffer)
 221   1              {
 222   2                  rowBuffer = rowBuffer;
 223   2                  status = CYRET_BAD_PARAM;
 224   2              }
 225   1              else if(CySpcLock() != CYRET_SUCCESS)
 226   1              {
 227   2                  rowBuffer = rowBuffer;
 228   2                  status = CYRET_LOCKED;
 229   2              }
 230   1              else
 231   1              {
 232   2                  rowBuffer = buffer;
 233   2                  CySpcUnlock();
 234   2              }
 235   1      
 236   1          #else
              
                      /* To suppress warning */
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 5   

                      buffer = buffer;
              
                  #endif  /* (CYDEV_ECC_ENABLE == 0u) */
 242   1      
 243   1          return(status);
 244   1      }
 245          
 246          
 247          #if(CYDEV_ECC_ENABLE == 1)
              
                  /*******************************************************************************
                  * Function Name: CyWriteRowData
                  ********************************************************************************
                  *
                  * Summary:
                  *  Sends a command to the SPC to load and program a row of data in
                  *  Flash or EEPROM.
                  *
                  * Parameters:
                  *  arrayID:    ID of the array to write.
                  *   The type of write, Flash or EEPROM, is determined from the array ID.
                  *   The arrays in the part are sequential starting at the first ID for the
                  *   specific memory type. The array ID for the Flash memory lasts from 0x00 to
                  *   0x3F and for the EEPROM memory it lasts from 0x40 to 0x7F.
                  *  rowAddress: rowAddress of flash row to program.
                  *  rowData:    Array of bytes to write.
                  *
                  * Return:
                  *  status:
                  *   CYRET_SUCCESS if successful.
                  *   CYRET_LOCKED if the SPC is already in use.
                  *   CYRET_CANCELED if command not accepted
                  *   CYRET_UNKNOWN if there was an SPC error.
                  *
                  *******************************************************************************/
                  cystatus CyWriteRowData(uint8 arrayId, uint16 rowAddress, const uint8 * rowData) 
                  {
                      uint16 rowSize;
                      cystatus status;
              
                      rowSize = (arrayId > CY_SPC_LAST_FLASH_ARRAYID) ? CYDEV_EEPROM_ROW_SIZE : CYDEV_FLS_ROW_SIZE;
                      status = CyWriteRowFull(arrayId, rowAddress, rowData, rowSize);
              
                      return(status);
                  }
              
              #else
 286          
 287              /*******************************************************************************
 288              * Function Name: CyWriteRowData
 289              ********************************************************************************
 290              *
 291              * Summary:
 292              *   Sends a command to the SPC to load and program a row of data in
 293              *   Flash or EEPROM.
 294              *
 295              * Parameters:
 296              *  arrayID      : ID of the array to write.
 297              *   The type of write, Flash or EEPROM, is determined from the array ID.
 298              *   The arrays in the part are sequential starting at the first ID for the
 299              *   specific memory type. The array ID for the Flash memory lasts from 0x00 to
 300              *   0x3F and for the EEPROM memory it lasts from 0x40 to 0x7F.
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 6   

 301              *  rowAddress   : rowAddress of flash row to program.
 302              *  rowData      : Array of bytes to write.
 303              *
 304              * Return:
 305              *  status:
 306              *   CYRET_SUCCESS if successful.
 307              *   CYRET_LOCKED if the SPC is already in use.
 308              *   CYRET_CANCELED if command not accepted
 309              *   CYRET_UNKNOWN if there was an SPC error.
 310              *
 311              *******************************************************************************/
 312              cystatus CyWriteRowData(uint8 arrayId, uint16 rowAddress, const uint8 * rowData) 
 313              {
 314   1              uint8 i;
 315   1              uint32 offset;
 316   1              uint16 rowSize;
 317   1              cystatus status;
 318   1      
 319   1              /* Check whether rowBuffer pointer has been initialized by CySetFlashEEBuffer() */
 320   1              if(NULL != rowBuffer)
 321   1              {
 322   2                  if(arrayId > CY_SPC_LAST_FLASH_ARRAYID)
 323   2                  {
 324   3                      rowSize = CYDEV_EEPROM_ROW_SIZE;
 325   3                  }
 326   2                  else
 327   2                  {
 328   3                      rowSize = CYDEV_FLS_ROW_SIZE + CYDEV_ECC_ROW_SIZE;
 329   3      
 330   3                      /* Save ECC area. */
 331   3                      offset = CYDEV_ECC_BASE +
 332   3                              ((uint32)arrayId * CYDEV_ECC_SECTOR_SIZE) +
 333   3                              ((uint32)rowAddress * CYDEV_ECC_ROW_SIZE);
 334   3      
 335   3                      for(i = 0u; i < CYDEV_ECC_ROW_SIZE; i++)
 336   3                      {
 337   4                          *(rowBuffer + CYDEV_FLS_ROW_SIZE + i) = CY_GET_XTND_REG8((void CYFAR *)(offset + i));
 338   4                      }
 339   3                  }
 340   2      
 341   2                  /* Copy rowdata to temporary buffer. */
 342   2              #if(CY_PSOC3)
 343   2                  (void) memcpy((void *) rowBuffer, (void *)((uint32) rowData), (int16) CYDEV_FLS_ROW_SIZE);
 344   2              #else
                          (void) memcpy((void *) rowBuffer, (const void *) rowData, CYDEV_FLS_ROW_SIZE);
                      #endif  /* (CY_PSOC3) */
 347   2      
 348   2                  status = CyWriteRowFull(arrayId, rowAddress, rowBuffer, rowSize);
 349   2              }
 350   1              else
 351   1              {
 352   2                  status = CYRET_UNKNOWN;
 353   2              }
 354   1      
 355   1              return(status);
 356   1          }
 357          
 358          #endif /* (CYDEV_ECC_ENABLE == 0u) */
 359          
 360          
 361          #if ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u))
 362          
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 7   

 363              /*******************************************************************************
 364              * Function Name: CyWriteRowConfig
 365              ********************************************************************************
 366              *
 367              * Summary:
 368              *  Sends a command to the SPC to load and program a row of config data in the Flash.
 369              *  This function is only valid for Flash array IDs (not for EEPROM).
 370              *
 371              * Parameters:
 372              *  arrayId:      ID of the array to write
 373              *   The arrays in the part are sequential starting at the first ID for the
 374              *   specific memory type. The array ID for the Flash memory lasts
 375              *   from 0x00 to 0x3F.
 376              *  rowAddress:   The address of the sector to erase.
 377              *  rowECC:       The array of bytes to write.
 378              *
 379              * Return:
 380              *  status:
 381              *   CYRET_SUCCESS if successful.
 382              *   CYRET_LOCKED if the SPC is already in use.
 383              *   CYRET_CANCELED if command not accepted
 384              *   CYRET_UNKNOWN if there was an SPC error.
 385              *
 386              *******************************************************************************/
 387              cystatus CyWriteRowConfig(uint8 arrayId, uint16 rowAddress, const uint8 * rowECC)\
 388              
 389              {
 390   1              uint32 offset;
 391   1              uint16 i;
 392   1              cystatus status;
 393   1      
 394   1              /* Check whether rowBuffer pointer has been initialized by CySetFlashEEBuffer() */
 395   1              if(NULL != rowBuffer)
 396   1              {
 397   2                  /* Read existing flash data. */
 398   2                  offset = ((uint32)arrayId * CYDEV_FLS_SECTOR_SIZE) +
 399   2                           ((uint32)rowAddress * CYDEV_FLS_ROW_SIZE);
 400   2      
 401   2                  #if (CYDEV_FLS_BASE != 0u)
 402   2                      offset += CYDEV_FLS_BASE;
 403   2                  #endif  /* (CYDEV_FLS_BASE != 0u) */
 404   2      
 405   2                  for (i = 0u; i < CYDEV_FLS_ROW_SIZE; i++)
 406   2                  {
 407   3                      rowBuffer[i] = CY_GET_XTND_REG8((void CYFAR *)(offset + i));
 408   3                  }
 409   2      
 410   2                  #if(CY_PSOC3)
 411   2                      (void) memcpy((void *)&rowBuffer[CYDEV_FLS_ROW_SIZE],
 412   2                                    (void *)(uint32)rowECC,
 413   2                                    (int16)CYDEV_ECC_ROW_SIZE);
 414   2                  #else
                              (void) memcpy((void *)&rowBuffer[CYDEV_FLS_ROW_SIZE],
                                            (const void *)rowECC,
                                            CYDEV_ECC_ROW_SIZE);
                          #endif  /* (CY_PSOC3) */
 419   2      
 420   2                  status = CyWriteRowFull(arrayId, rowAddress, rowBuffer, CYDEV_FLS_ROW_SIZE + CYDEV_ECC_ROW_SIZ
             -E);
 421   2              }
 422   1              else
 423   1              {
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 8   

 424   2                  status = CYRET_UNKNOWN;
 425   2              }
 426   1      
 427   1              return (status);
 428   1          }
 429          
 430          #endif  /* ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u)) */
 431          
 432          
 433          
 434          /*******************************************************************************
 435          * Function Name: CyWriteRowFull
 436          ********************************************************************************
 437          * Summary:
 438          *  Sends a command to the SPC to load and program a row of data in the Flash.
 439          *  rowData array is expected to contain Flash and ECC data if needed.
 440          *
 441          * Parameters:
 442          *  arrayId:    FLASH or EEPROM array id.
 443          *  rowData:    Pointer to a row of data to write.
 444          *  rowNumber:  Zero based number of the row.
 445          *  rowSize:    Size of the row.
 446          *
 447          * Return:
 448          *  CYRET_SUCCESS if successful.
 449          *  CYRET_LOCKED if the SPC is already in use.
 450          *  CYRET_CANCELED if command not accepted
 451          *  CYRET_UNKNOWN if there was an SPC error.
 452          *
 453          *******************************************************************************/
 454          cystatus CyWriteRowFull(uint8 arrayId, uint16 rowNumber, const uint8* rowData, uint16 rowSize) \
 455                  
 456          {
 457   1          cystatus status;
 458   1      
 459   1          if(CySpcLock() == CYRET_SUCCESS)
 460   1          {
 461   2              /* Load row data into SPC internal latch */
 462   2              status = CySpcLoadRow(arrayId, rowData, rowSize);
 463   2      
 464   2              if(CYRET_STARTED == status)
 465   2              {
 466   3                  while(CY_SPC_BUSY)
 467   3                  {
 468   4                      /* Wait for SPC to finish and get SPC status */
 469   4                      CyDelayUs(1u);
 470   4                  }
 471   3      
 472   3                  /* Hide SPC status */
 473   3                  if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 474   3                  {
 475   4                      status = CYRET_SUCCESS;
 476   4                  }
 477   3                  else
 478   3                  {
 479   4                      status = CYRET_UNKNOWN;
 480   4                  }
 481   3      
 482   3                  if(CYRET_SUCCESS == status)
 483   3                  {
 484   4                      /* Erase and program flash with data from SPC interval latch */
 485   4                      status = CySpcWriteRow(arrayId, rowNumber, dieTemperature[0u], dieTemperature[1u]);
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 9   

 486   4      
 487   4                      if(CYRET_STARTED == status)
 488   4                      {
 489   5                          while(CY_SPC_BUSY)
 490   5                          {
 491   6                              /* Wait for SPC to finish and get SPC status */
 492   6                              CyDelayUs(1u);
 493   6                          }
 494   5      
 495   5                          /* Hide SPC status */
 496   5                          if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 497   5                          {
 498   6                              status = CYRET_SUCCESS;
 499   6                          }
 500   5                          else
 501   5                          {
 502   6                              status = CYRET_UNKNOWN;
 503   6                          }
 504   5                      }
 505   4                  }
 506   3      
 507   3              }
 508   2      
 509   2              CySpcUnlock();
 510   2          }
 511   1          else
 512   1          {
 513   2              status = CYRET_LOCKED;
 514   2          }
 515   1      
 516   1          return(status);
 517   1      }
 518          
 519          
 520          /*******************************************************************************
 521          * Function Name: CyFlash_SetWaitCycles
 522          ********************************************************************************
 523          *
 524          * Summary:
 525          *  Sets the number of clock cycles the cache will wait before it samples data
 526          *  coming back from the Flash. This function must be called before increasing the CPU
 527          *  clock frequency. It can optionally be called after lowering the CPU clock
 528          *  frequency in order to improve the CPU performance.
 529          *
 530          * Parameters:
 531          *  uint8 freq:
 532          *   Frequency of operation in Megahertz.
 533          *
 534          * Return:
 535          *  None
 536          *
 537          *******************************************************************************/
 538          void CyFlash_SetWaitCycles(uint8 freq) 
 539          {
 540   1          uint8 interruptState;
 541   1      
 542   1          /* Save current global interrupt enable and disable it */
 543   1          interruptState = CyEnterCriticalSection();
 544   1      
 545   1          /***************************************************************************
 546   1          * The number of clock cycles the cache will wait before it samples data
 547   1          * coming back from the Flash must be equal or greater to to the CPU frequency
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 10  

 548   1          * outlined in clock cycles.
 549   1          ***************************************************************************/
 550   1      
 551   1          #if (CY_PSOC3)
 552   1      
 553   1              if (freq <= 22u)
 554   1              {
 555   2                  *CY_FLASH_CONTROL_PTR = ((*CY_FLASH_CONTROL_PTR & ((uint8)(~CY_FLASH_CYCLES_MASK))) |
 556   2                      ((uint8)(CY_FLASH_LESSER_OR_EQUAL_22MHz << CY_FLASH_CYCLES_MASK_SHIFT)));
 557   2              }
 558   1              else if (freq <= 44u)
 559   1              {
 560   2                  *CY_FLASH_CONTROL_PTR = ((*CY_FLASH_CONTROL_PTR & ((uint8)(~CY_FLASH_CYCLES_MASK))) |
 561   2                      ((uint8)(CY_FLASH_LESSER_OR_EQUAL_44MHz << CY_FLASH_CYCLES_MASK_SHIFT)));
 562   2              }
 563   1              else
 564   1              {
 565   2                  *CY_FLASH_CONTROL_PTR = ((*CY_FLASH_CONTROL_PTR & ((uint8)(~CY_FLASH_CYCLES_MASK))) |
 566   2                      ((uint8)(CY_FLASH_GREATER_44MHz << CY_FLASH_CYCLES_MASK_SHIFT)));
 567   2              }
 568   1      
 569   1          #endif  /* (CY_PSOC3) */
 570   1      
 571   1      
 572   1          #if (CY_PSOC5)
              
                      if (freq <= 16u)
                      {
                          *CY_FLASH_CONTROL_PTR = ((*CY_FLASH_CONTROL_PTR & ((uint8)(~CY_FLASH_CYCLES_MASK))) |
                              ((uint8)(CY_FLASH_LESSER_OR_EQUAL_16MHz << CY_FLASH_CYCLES_MASK_SHIFT)));
                      }
                      else if (freq <= 33u)
                      {
                          *CY_FLASH_CONTROL_PTR = ((*CY_FLASH_CONTROL_PTR & ((uint8)(~CY_FLASH_CYCLES_MASK))) |
                              ((uint8)(CY_FLASH_LESSER_OR_EQUAL_33MHz << CY_FLASH_CYCLES_MASK_SHIFT)));
                      }
                      else if (freq <= 50u)
                      {
                          *CY_FLASH_CONTROL_PTR = ((*CY_FLASH_CONTROL_PTR & ((uint8)(~CY_FLASH_CYCLES_MASK))) |
                              ((uint8)(CY_FLASH_LESSER_OR_EQUAL_50MHz << CY_FLASH_CYCLES_MASK_SHIFT)));
                      }
                      else
                      {
                          *CY_FLASH_CONTROL_PTR = ((*CY_FLASH_CONTROL_PTR & ((uint8)(~CY_FLASH_CYCLES_MASK))) |
                              ((uint8)(CY_FLASH_GREATER_51MHz << CY_FLASH_CYCLES_MASK_SHIFT)));
                      }
              
                  #endif  /* (CY_PSOC5) */
 596   1      
 597   1          /* Restore global interrupt enable state */
 598   1          CyExitCriticalSection(interruptState);
 599   1      }
 600          
 601          
 602          /*******************************************************************************
 603          * Function Name: CyEEPROM_Start
 604          ********************************************************************************
 605          *
 606          * Summary:
 607          *  Enable the EEPROM.
 608          *
 609          * Parameters:
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 11  

 610          *  None
 611          *
 612          * Return:
 613          *  None
 614          *
 615          *******************************************************************************/
 616          void CyEEPROM_Start(void) 
 617          {
 618   1          /* Active Power Mode */
 619   1          *CY_FLASH_PM_ACT_EEFLASH_PTR |= CY_FLASH_PM_EE_MASK;
 620   1      
 621   1          /* Standby Power Mode */
 622   1          *CY_FLASH_PM_ALTACT_EEFLASH_PTR |= CY_FLASH_PM_EE_MASK;
 623   1      }
 624          
 625          
 626          /*******************************************************************************
 627          * Function Name: CyEEPROM_Stop
 628          ********************************************************************************
 629          *
 630          * Summary:
 631          *  Disable the EEPROM.
 632          *
 633          * Parameters:
 634          *  None
 635          *
 636          * Return:
 637          *  None
 638          *
 639          *******************************************************************************/
 640          void CyEEPROM_Stop (void) 
 641          {
 642   1          /* Active Power Mode */
 643   1          *CY_FLASH_PM_ACT_EEFLASH_PTR &= ((uint8)(~CY_FLASH_PM_EE_MASK));
 644   1      
 645   1          /* Standby Power Mode */
 646   1          *CY_FLASH_PM_ALTACT_EEFLASH_PTR &= ((uint8)(~CY_FLASH_PM_EE_MASK));
 647   1      }
 648          
 649          
 650          /*******************************************************************************
 651          * Function Name: CyEEPROM_ReadReserve
 652          ********************************************************************************
 653          *
 654          * Summary:
 655          *  Request access to the EEPROM for reading and wait until access is available.
 656          *
 657          * Parameters:
 658          *  None
 659          *
 660          * Return:
 661          *  None
 662          *
 663          *******************************************************************************/
 664          void CyEEPROM_ReadReserve(void) 
 665          {
 666   1          /* Make request for PHUB to have access */
 667   1          CY_FLASH_EE_SCR_REG |= CY_FLASH_EE_SCR_AHB_EE_REQ;
 668   1      
 669   1          while (0u == (CY_FLASH_EE_SCR_REG & CY_FLASH_EE_SCR_AHB_EE_ACK))
 670   1          {
 671   2              /* Wait for acknowledgement from PHUB */
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 12  

 672   2          }
 673   1      }
 674          
 675          
 676          /*******************************************************************************
 677          * Function Name: CyEEPROM_ReadRelease
 678          ********************************************************************************
 679          *
 680          * Summary:
 681          *  Release the read reservation of the EEPROM.
 682          *
 683          * Parameters:
 684          *  None
 685          *
 686          * Return:
 687          *  None
 688          *
 689          *******************************************************************************/
 690          void CyEEPROM_ReadRelease(void) 
 691          {
 692   1          CY_FLASH_EE_SCR_REG &= (uint8)(~CY_FLASH_EE_SCR_AHB_EE_REQ);
 693   1      }
 694          
 695          
 696          /* [] END OF FILE */
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION CyFlash_Start (BEGIN)
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 57
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4401              ORL     A,#01H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 60
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 4401              ORL     A,#01H
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 62
0016 7F05              MOV     R7,#05H
0018 7E00              MOV     R6,#00H
001A 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 63
001D 22                RET     
             ; FUNCTION CyFlash_Start (END)

             ; FUNCTION CyFlash_Stop (BEGIN)
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 87
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54FE              ANL     A,#0FEH
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 54FE              ANL     A,#0FEH
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
0016 22                RET     
             ; FUNCTION CyFlash_Stop (END)

             ; FUNCTION CySetTempInt (BEGIN)
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 118
0000 120000      E     LCALL   CySpcStart
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 14  

                                           ; SOURCE LINE # 121
0003 900000      R     MOV     DPTR,#status
0006 74FF              MOV     A,#0FFH
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 123
0009 120000      E     LCALL   CySpcLock
000C EF                MOV     A,R7
000D 704A              JNZ     ?C0003
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 126
000F 7F01              MOV     R7,#01H
0011 120000      E     LCALL   _CySpcGetTemp
0014 EF                MOV     A,R7
0015 6407              XRL     A,#07H
0017 703B              JNZ     ?C0004
                                           ; SOURCE LINE # 127
0019         ?C0007:
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
0019 7B01              MOV     R3,#01H
001B 7A00        R     MOV     R2,#HIGH dieTemperature
001D 7900        R     MOV     R1,#LOW dieTemperature
001F 7D02              MOV     R5,#02H
0021 120000      E     LCALL   _CySpcReadData
0024 EF                MOV     A,R7
0025 B4021D            CJNE    A,#02H,?C0005
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
0028 900000      R     MOV     DPTR,#status
002B E4                CLR     A
002C F0                MOVX    @DPTR,A
002D         ?C0009:
                                           ; SOURCE LINE # 134
002D 904722            MOV     DPTR,#04722H
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 EF                MOV     A,R7
0033 5402              ANL     A,#02H
0035 FF                MOV     R7,A
0036 7E00              MOV     R6,#00H
0038 EF                MOV     A,R7
0039 4E                ORL     A,R6
003A 7018              JNZ     ?C0004
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 137
003C 7F01              MOV     R7,#01H
003E 7E00              MOV     R6,#00H
0040 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 138
0043 80E8              SJMP    ?C0009
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 142
0045         ?C0005:
0045 904722            MOV     DPTR,#04722H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 5402              ANL     A,#02H
004D FF                MOV     R7,A
004E 7E00              MOV     R6,#00H
0050 EF                MOV     A,R7
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 15  

0051 4E                ORL     A,R6
0052 60C5              JZ      ?C0007
                                           ; SOURCE LINE # 143
0054         ?C0004:
                                           ; SOURCE LINE # 145
0054 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 146
0057 8006              SJMP    ?C0011
0059         ?C0003:
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
0059 900000      R     MOV     DPTR,#status
005C 7404              MOV     A,#04H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
005F         ?C0011:
                                           ; SOURCE LINE # 152
005F 900000      R     MOV     DPTR,#status
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
                                           ; SOURCE LINE # 153
0064         ?C0012:
0064 22                RET     
             ; FUNCTION CySetTempInt (END)

             ; FUNCTION CySetTemp (BEGIN)
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
0000 120000      R     LCALL   CySetTempInt
0003 900000      R     MOV     DPTR,#status
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
0008 900000      R     MOV     DPTR,#status
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 7008              JNZ     ?C0013
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0010 120000      R     LCALL   CySetTempInt
0013 900000      R     MOV     DPTR,#status
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
0018         ?C0013:
                                           ; SOURCE LINE # 188
0018 900000      R     MOV     DPTR,#status
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
                                           ; SOURCE LINE # 189
001D         ?C0014:
001D 22                RET     
             ; FUNCTION CySetTemp (END)

             ; FUNCTION _CySetFlashEEBuffer (BEGIN)
                                           ; SOURCE LINE # 212
0000 900000      R     MOV     DPTR,#buffer
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 16  

0006 900000      R     MOV     DPTR,#status
0009 E4                CLR     A
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
000B 120000      E     LCALL   CySpcStart
                                           ; SOURCE LINE # 220
000E 7B00              MOV     R3,#00H
0010 7A00              MOV     R2,#00H
0012 7900              MOV     R1,#00H
0014 C003              PUSH    AR3
0016 C002              PUSH    AR2
0018 C001              PUSH    AR1
001A 900000      R     MOV     DPTR,#buffer
001D 120000      E     LCALL   ?C?PLDXDATA
0020 D082              POP     DPL
0022 D083              POP     DPH
0024 D0E0              POP     ACC
0026 6B                XRL     A,R3
0027 7008              JNZ     ?C0063
0029 E9                MOV     A,R1
002A 6582              XRL     A,DPL
002C 7003              JNZ     ?C0063
002E EA                MOV     A,R2
002F 6583              XRL     A,DPH
0031         ?C0063:
0031 7014              JNZ     ?C0015
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0033 900000      R     MOV     DPTR,#rowBuffer
0036 120000      E     LCALL   ?C?PLDXDATA
0039 900000      R     MOV     DPTR,#rowBuffer
003C 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 223
003F 900000      R     MOV     DPTR,#status
0042 7401              MOV     A,#01H
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
0045 8029              SJMP    ?C0016
0047         ?C0015:
                                           ; SOURCE LINE # 225
0047 120000      E     LCALL   CySpcLock
004A EF                MOV     A,R7
004B 6014              JZ      ?C0017
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
004D 900000      R     MOV     DPTR,#rowBuffer
0050 120000      E     LCALL   ?C?PLDXDATA
0053 900000      R     MOV     DPTR,#rowBuffer
0056 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 228
0059 900000      R     MOV     DPTR,#status
005C 7404              MOV     A,#04H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
005F 800F              SJMP    ?C0016
0061         ?C0017:
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
0061 900000      R     MOV     DPTR,#buffer
0064 120000      E     LCALL   ?C?PLDXDATA
0067 900000      R     MOV     DPTR,#rowBuffer
006A 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 17  

                                           ; SOURCE LINE # 233
006D 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 234
0070         ?C0016:
                                           ; SOURCE LINE # 243
0070 900000      R     MOV     DPTR,#status
0073 E0                MOVX    A,@DPTR
0074 FF                MOV     R7,A
                                           ; SOURCE LINE # 244
0075         ?C0019:
0075 22                RET     
             ; FUNCTION _CySetFlashEEBuffer (END)

             ; FUNCTION _CyWriteRowData (BEGIN)
                                           ; SOURCE LINE # 312
0000 900000      R     MOV     DPTR,#arrayId
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowAddress
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowData
0010 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 320
0013 7B00              MOV     R3,#00H
0015 7A00              MOV     R2,#00H
0017 7900              MOV     R1,#00H
0019 C003              PUSH    AR3
001B C002              PUSH    AR2
001D C001              PUSH    AR1
001F 900000      R     MOV     DPTR,#rowBuffer
0022 120000      E     LCALL   ?C?PLDXDATA
0025 D082              POP     DPL
0027 D083              POP     DPH
0029 D0E0              POP     ACC
002B 6B                XRL     A,R3
002C 7008              JNZ     ?C0064
002E E9                MOV     A,R1
002F 6582              XRL     A,DPL
0031 7003              JNZ     ?C0064
0033 EA                MOV     A,R2
0034 6583              XRL     A,DPH
0036         ?C0064:
0036 7003              JNZ     $ + 5H
0038 020000      R     LJMP    ?C0020
                                           ; SOURCE LINE # 321
                                           ; SOURCE LINE # 322
003B 900000      R     MOV     DPTR,#arrayId
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 EF                MOV     A,R7
0041 D3                SETB    C
0042 943F              SUBB    A,#03FH
0044 400C              JC      ?C0021
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
0046 900000      R     MOV     DPTR,#rowSize
0049 E4                CLR     A
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 18  

004A F0                MOVX    @DPTR,A
004B A3                INC     DPTR
004C 7410              MOV     A,#010H
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 325
004F 020000      R     LJMP    ?C0022
0052         ?C0021:
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
0052 900000      R     MOV     DPTR,#rowSize
0055 7401              MOV     A,#01H
0057 F0                MOVX    @DPTR,A
0058 A3                INC     DPTR
0059 7420              MOV     A,#020H
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 333
005C 900000      R     MOV     DPTR,#arrayId
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 7E00              MOV     R6,#00H
0063 7C20              MOV     R4,#020H
0065 7D00              MOV     R5,#00H
0067 120000      E     LCALL   ?C?LIMUL
006A EF                MOV     A,R7
006B 2400              ADD     A,#00H
006D FF                MOV     R7,A
006E EE                MOV     A,R6
006F 3400              ADDC    A,#00H
0071 FE                MOV     R6,A
0072 ED                MOV     A,R5
0073 3408              ADDC    A,#08H
0075 FD                MOV     R5,A
0076 EC                MOV     A,R4
0077 3400              ADDC    A,#00H
0079 FC                MOV     R4,A
007A C004              PUSH    AR4
007C C005              PUSH    AR5
007E C006              PUSH    AR6
0080 C007              PUSH    AR7
0082 900000      R     MOV     DPTR,#rowAddress
0085 E0                MOVX    A,@DPTR
0086 FE                MOV     R6,A
0087 A3                INC     DPTR
0088 E0                MOVX    A,@DPTR
0089 FF                MOV     R7,A
008A 7C00              MOV     R4,#00H
008C 7D20              MOV     R5,#020H
008E 120000      E     LCALL   ?C?LIMUL
0091 A804              MOV     R0,AR4
0093 A905              MOV     R1,AR5
0095 AA06              MOV     R2,AR6
0097 AB07              MOV     R3,AR7
0099 D007              POP     AR7
009B D006              POP     AR6
009D D005              POP     AR5
009F D004              POP     AR4
00A1 120000      E     LCALL   ?C?LADD
00A4 900000      R     MOV     DPTR,#offset
00A7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 335
00AA 900000      R     MOV     DPTR,#i
00AD E4                CLR     A
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 19  

00AE F0                MOVX    @DPTR,A
00AF         ?C0023:
00AF 900000      R     MOV     DPTR,#i
00B2 E0                MOVX    A,@DPTR
00B3 FF                MOV     R7,A
00B4 EF                MOV     A,R7
00B5 C3                CLR     C
00B6 9420              SUBB    A,#020H
00B8 5044              JNC     ?C0022
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 337
00BA 900000      R     MOV     DPTR,#i
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF E4                CLR     A
00C0 FC                MOV     R4,A
00C1 FD                MOV     R5,A
00C2 FE                MOV     R6,A
00C3 900000      R     MOV     DPTR,#offset
00C6 120000      E     LCALL   ?C?LLDXDATA0
00C9 120000      E     LCALL   ?C?LADD
00CC A907              MOV     R1,AR7
00CE AA06              MOV     R2,AR6
00D0 AB05              MOV     R3,AR5
00D2 120000      E     LCALL   _cyread8
00D5 900000      R     MOV     DPTR,#rowBuffer
00D8 120000      E     LCALL   ?C?PLDXDATA
00DB E9                MOV     A,R1
00DC 2400              ADD     A,#00H
00DE F9                MOV     R1,A
00DF EA                MOV     A,R2
00E0 3401              ADDC    A,#01H
00E2 FA                MOV     R2,A
00E3 900000      R     MOV     DPTR,#i
00E6 E0                MOVX    A,@DPTR
00E7 FE                MOV     R6,A
00E8 EE                MOV     A,R6
00E9 FD                MOV     R5,A
00EA 7C00              MOV     R4,#00H
00EC E9                MOV     A,R1
00ED 2D                ADD     A,R5
00EE F9                MOV     R1,A
00EF EA                MOV     A,R2
00F0 3C                ADDC    A,R4
00F1 FA                MOV     R2,A
00F2 EF                MOV     A,R7
00F3 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 338
00F6 900000      R     MOV     DPTR,#i
00F9 E0                MOVX    A,@DPTR
00FA 04                INC     A
00FB F0                MOVX    @DPTR,A
00FC 80B1              SJMP    ?C0023
                                           ; SOURCE LINE # 339
00FE         ?C0022:
                                           ; SOURCE LINE # 343
00FE 900000      R     MOV     DPTR,#rowData
0101 120000      E     LCALL   ?C?PLDXDATA
0104 C003              PUSH    AR3
0106 C002              PUSH    AR2
0108 C001              PUSH    AR1
010A 900000      R     MOV     DPTR,#rowBuffer
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 20  

010D 120000      E     LCALL   ?C?PLDXDATA
0110 A801              MOV     R0,AR1
0112 AC02              MOV     R4,AR2
0114 AD03              MOV     R5,AR3
0116 D001              POP     AR1
0118 D002              POP     AR2
011A D003              POP     AR3
011C 7E01              MOV     R6,#01H
011E 7F00              MOV     R7,#00H
0120 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 348
0123 900000      R     MOV     DPTR,#arrayId
0126 E0                MOVX    A,@DPTR
0127 FF                MOV     R7,A
0128 C007              PUSH    AR7
012A 900000      R     MOV     DPTR,#rowAddress
012D E0                MOVX    A,@DPTR
012E FC                MOV     R4,A
012F A3                INC     DPTR
0130 E0                MOVX    A,@DPTR
0131 FD                MOV     R5,A
0132 900000      R     MOV     DPTR,#rowBuffer
0135 120000      E     LCALL   ?C?PLDXDATA
0138 900000      R     MOV     DPTR,#rowSize
013B E0                MOVX    A,@DPTR
013C FE                MOV     R6,A
013D A3                INC     DPTR
013E E0                MOVX    A,@DPTR
013F FF                MOV     R7,A
0140 900000      R     MOV     DPTR,#?_CyWriteRowFull?BYTE+06H
0143 EE                MOV     A,R6
0144 F0                MOVX    @DPTR,A
0145 A3                INC     DPTR
0146 EF                MOV     A,R7
0147 F0                MOVX    @DPTR,A
0148 D007              POP     AR7
014A 120000      R     LCALL   _CyWriteRowFull
014D 900000      R     MOV     DPTR,#status
0150 EF                MOV     A,R7
0151 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 349
0152 8006              SJMP    ?C0026
0154         ?C0020:
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 352
0154 900000      R     MOV     DPTR,#status
0157 74FF              MOV     A,#0FFH
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 353
015A         ?C0026:
                                           ; SOURCE LINE # 355
015A 900000      R     MOV     DPTR,#status
015D E0                MOVX    A,@DPTR
015E FF                MOV     R7,A
                                           ; SOURCE LINE # 356
015F         ?C0027:
015F 22                RET     
             ; FUNCTION _CyWriteRowData (END)

             ; FUNCTION _CyWriteRowConfig (BEGIN)
                                           ; SOURCE LINE # 387
0000 900000      R     MOV     DPTR,#arrayId
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 21  

0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowAddress
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowECC
0010 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 389
                                           ; SOURCE LINE # 395
0013 7B00              MOV     R3,#00H
0015 7A00              MOV     R2,#00H
0017 7900              MOV     R1,#00H
0019 C003              PUSH    AR3
001B C002              PUSH    AR2
001D C001              PUSH    AR1
001F 900000      R     MOV     DPTR,#rowBuffer
0022 120000      E     LCALL   ?C?PLDXDATA
0025 D082              POP     DPL
0027 D083              POP     DPH
0029 D0E0              POP     ACC
002B 6B                XRL     A,R3
002C 7008              JNZ     ?C0065
002E E9                MOV     A,R1
002F 6582              XRL     A,DPL
0031 7003              JNZ     ?C0065
0033 EA                MOV     A,R2
0034 6583              XRL     A,DPH
0036         ?C0065:
0036 7003              JNZ     $ + 5H
0038 020000      R     LJMP    ?C0028
                                           ; SOURCE LINE # 396
                                           ; SOURCE LINE # 399
003B 900000      R     MOV     DPTR,#rowAddress
003E E0                MOVX    A,@DPTR
003F FE                MOV     R6,A
0040 A3                INC     DPTR
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 7C01              MOV     R4,#01H
0045 7D00              MOV     R5,#00H
0047 120000      E     LCALL   ?C?LIMUL
004A C004              PUSH    AR4
004C C005              PUSH    AR5
004E C006              PUSH    AR6
0050 C007              PUSH    AR7
0052 900000      R     MOV     DPTR,#arrayId
0055 E0                MOVX    A,@DPTR
0056 FF                MOV     R7,A
0057 E4                CLR     A
0058 FC                MOV     R4,A
0059 FD                MOV     R5,A
005A FE                MOV     R6,A
005B 7B00              MOV     R3,#00H
005D 7A00              MOV     R2,#00H
005F 7901              MOV     R1,#01H
0061 7800              MOV     R0,#00H
0063 120000      E     LCALL   ?C?LMUL
0066 A804              MOV     R0,AR4
0068 A905              MOV     R1,AR5
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 22  

006A AA06              MOV     R2,AR6
006C AB07              MOV     R3,AR7
006E D007              POP     AR7
0070 D006              POP     AR6
0072 D005              POP     AR5
0074 D004              POP     AR4
0076 120000      E     LCALL   ?C?LADD
0079 900000      R     MOV     DPTR,#offset
007C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 402
007F 900000      R     MOV     DPTR,#offset
0082 120000      E     LCALL   ?C?LLDXDATA
0085 EF                MOV     A,R7
0086 2400              ADD     A,#00H
0088 FF                MOV     R7,A
0089 EE                MOV     A,R6
008A 3400              ADDC    A,#00H
008C FE                MOV     R6,A
008D ED                MOV     A,R5
008E 3410              ADDC    A,#010H
0090 FD                MOV     R5,A
0091 EC                MOV     A,R4
0092 3400              ADDC    A,#00H
0094 FC                MOV     R4,A
0095 900000      R     MOV     DPTR,#offset
0098 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 405
009B 900000      R     MOV     DPTR,#i
009E E4                CLR     A
009F F0                MOVX    @DPTR,A
00A0 A3                INC     DPTR
00A1 E4                CLR     A
00A2 F0                MOVX    @DPTR,A
00A3         ?C0029:
00A3 900000      R     MOV     DPTR,#i
00A6 E0                MOVX    A,@DPTR
00A7 FE                MOV     R6,A
00A8 A3                INC     DPTR
00A9 E0                MOVX    A,@DPTR
00AA FF                MOV     R7,A
00AB C3                CLR     C
00AC EE                MOV     A,R6
00AD 9401              SUBB    A,#01H
00AF 5041              JNC     ?C0030
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 407
00B1 900000      R     MOV     DPTR,#i
00B4 E0                MOVX    A,@DPTR
00B5 FE                MOV     R6,A
00B6 A3                INC     DPTR
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 E4                CLR     A
00BA FC                MOV     R4,A
00BB FD                MOV     R5,A
00BC 900000      R     MOV     DPTR,#offset
00BF 120000      E     LCALL   ?C?LLDXDATA0
00C2 120000      E     LCALL   ?C?LADD
00C5 A907              MOV     R1,AR7
00C7 AA06              MOV     R2,AR6
00C9 AB05              MOV     R3,AR5
00CB 120000      E     LCALL   _cyread8
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 23  

00CE 900000      R     MOV     DPTR,#rowBuffer
00D1 120000      E     LCALL   ?C?PLDXDATA
00D4 900000      R     MOV     DPTR,#i
00D7 E0                MOVX    A,@DPTR
00D8 FC                MOV     R4,A
00D9 A3                INC     DPTR
00DA E0                MOVX    A,@DPTR
00DB FD                MOV     R5,A
00DC E9                MOV     A,R1
00DD 2D                ADD     A,R5
00DE F9                MOV     R1,A
00DF EA                MOV     A,R2
00E0 3C                ADDC    A,R4
00E1 FA                MOV     R2,A
00E2 EF                MOV     A,R7
00E3 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 408
00E6 900000      R     MOV     DPTR,#i
00E9 E4                CLR     A
00EA 75F001            MOV     B,#01H
00ED 120000      E     LCALL   ?C?IILDX
00F0 80B1              SJMP    ?C0029
00F2         ?C0030:
                                           ; SOURCE LINE # 413
00F2 900000      R     MOV     DPTR,#rowECC
00F5 120000      E     LCALL   ?C?PLDXDATA
00F8 C003              PUSH    AR3
00FA C002              PUSH    AR2
00FC C001              PUSH    AR1
00FE 900000      R     MOV     DPTR,#rowBuffer
0101 120000      E     LCALL   ?C?PLDXDATA
0104 E9                MOV     A,R1
0105 2400              ADD     A,#00H
0107 F9                MOV     R1,A
0108 EA                MOV     A,R2
0109 3401              ADDC    A,#01H
010B FA                MOV     R2,A
010C A801              MOV     R0,AR1
010E AC02              MOV     R4,AR2
0110 AD03              MOV     R5,AR3
0112 D001              POP     AR1
0114 D002              POP     AR2
0116 D003              POP     AR3
0118 7E00              MOV     R6,#00H
011A 7F20              MOV     R7,#020H
011C 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 420
011F 900000      R     MOV     DPTR,#arrayId
0122 E0                MOVX    A,@DPTR
0123 FF                MOV     R7,A
0124 900000      R     MOV     DPTR,#rowAddress
0127 E0                MOVX    A,@DPTR
0128 FC                MOV     R4,A
0129 A3                INC     DPTR
012A E0                MOVX    A,@DPTR
012B FD                MOV     R5,A
012C 900000      R     MOV     DPTR,#rowBuffer
012F 120000      E     LCALL   ?C?PLDXDATA
0132 900000      R     MOV     DPTR,#?_CyWriteRowFull?BYTE+06H
0135 7401              MOV     A,#01H
0137 F0                MOVX    @DPTR,A
0138 A3                INC     DPTR
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 24  

0139 7420              MOV     A,#020H
013B F0                MOVX    @DPTR,A
013C 120000      R     LCALL   _CyWriteRowFull
013F 900000      R     MOV     DPTR,#status
0142 EF                MOV     A,R7
0143 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 421
0144 8006              SJMP    ?C0032
0146         ?C0028:
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
0146 900000      R     MOV     DPTR,#status
0149 74FF              MOV     A,#0FFH
014B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
014C         ?C0032:
                                           ; SOURCE LINE # 427
014C 900000      R     MOV     DPTR,#status
014F E0                MOVX    A,@DPTR
0150 FF                MOV     R7,A
                                           ; SOURCE LINE # 428
0151         ?C0033:
0151 22                RET     
             ; FUNCTION _CyWriteRowConfig (END)

             ; FUNCTION _CyWriteRowFull (BEGIN)
                                           ; SOURCE LINE # 454
0000 900000      R     MOV     DPTR,#arrayId
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowNumber
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowData
0010 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 456
                                           ; SOURCE LINE # 459
0013 120000      E     LCALL   CySpcLock
0016 EF                MOV     A,R7
0017 6003              JZ      $ + 5H
0019 020000      R     LJMP    ?C0034
                                           ; SOURCE LINE # 460
                                           ; SOURCE LINE # 462
001C 900000      R     MOV     DPTR,#arrayId
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#rowData
0024 120000      E     LCALL   ?C?PLDXDATA
0027 900000      R     MOV     DPTR,#rowSize
002A E0                MOVX    A,@DPTR
002B FC                MOV     R4,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E FD                MOV     R5,A
002F 900000      E     MOV     DPTR,#?_CySpcLoadRow?BYTE+04H
0032 EC                MOV     A,R4
0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 ED                MOV     A,R5
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 25  

0036 F0                MOVX    @DPTR,A
0037 120000      E     LCALL   _CySpcLoadRow
003A 900000      R     MOV     DPTR,#status
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 464
003F 900000      R     MOV     DPTR,#status
0042 E0                MOVX    A,@DPTR
0043 FF                MOV     R7,A
0044 EF                MOV     A,R7
0045 6407              XRL     A,#07H
0047 6003              JZ      $ + 5H
0049 020000      R     LJMP    ?C0035
                                           ; SOURCE LINE # 465
004C         ?C0036:
                                           ; SOURCE LINE # 466
004C 904722            MOV     DPTR,#04722H
004F E0                MOVX    A,@DPTR
0050 FF                MOV     R7,A
0051 EF                MOV     A,R7
0052 5402              ANL     A,#02H
0054 FF                MOV     R7,A
0055 7E00              MOV     R6,#00H
0057 EF                MOV     A,R7
0058 4E                ORL     A,R6
0059 7009              JNZ     ?C0037
                                           ; SOURCE LINE # 467
                                           ; SOURCE LINE # 469
005B 7F01              MOV     R7,#01H
005D 7E00              MOV     R6,#00H
005F 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 470
0062 80E8              SJMP    ?C0036
0064         ?C0037:
                                           ; SOURCE LINE # 473
0064 904722            MOV     DPTR,#04722H
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 EF                MOV     A,R7
006A 5402              ANL     A,#02H
006C FF                MOV     R7,A
006D 7E00              MOV     R6,#00H
006F EF                MOV     A,R7
0070 4E                ORL     A,R6
0071 600D              JZ      ?C0039
0073 904722            MOV     DPTR,#04722H
0076 E0                MOVX    A,@DPTR
0077 FF                MOV     R7,A
0078 EF                MOV     A,R7
0079 13                RRC     A
007A 13                RRC     A
007B 543F              ANL     A,#03FH
007D FF                MOV     R7,A
007E 8002              SJMP    ?C0040
0080         ?C0039:
0080 7FFF              MOV     R7,#0FFH
0082         ?C0040:
0082 EF                MOV     A,R7
0083 7007              JNZ     ?C0038
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
0085 900000      R     MOV     DPTR,#status
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 26  

0088 E4                CLR     A
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 476
008A 8006              SJMP    ?C0041
008C         ?C0038:
                                           ; SOURCE LINE # 478
                                           ; SOURCE LINE # 479
008C 900000      R     MOV     DPTR,#status
008F 74FF              MOV     A,#0FFH
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
0092         ?C0041:
                                           ; SOURCE LINE # 482
0092 900000      R     MOV     DPTR,#status
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 7074              JNZ     ?C0035
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 485
009A 900000      R     MOV     DPTR,#arrayId
009D E0                MOVX    A,@DPTR
009E FF                MOV     R7,A
009F 900000      R     MOV     DPTR,#rowNumber
00A2 E0                MOVX    A,@DPTR
00A3 FC                MOV     R4,A
00A4 A3                INC     DPTR
00A5 E0                MOVX    A,@DPTR
00A6 FD                MOV     R5,A
00A7 900000      R     MOV     DPTR,#dieTemperature
00AA E0                MOVX    A,@DPTR
00AB FB                MOV     R3,A
00AC 900000      R     MOV     DPTR,#dieTemperature+01H
00AF E0                MOVX    A,@DPTR
00B0 FE                MOV     R6,A
00B1 900000      E     MOV     DPTR,#?_CySpcWriteRow?BYTE+04H
00B4 EE                MOV     A,R6
00B5 F0                MOVX    @DPTR,A
00B6 120000      E     LCALL   _CySpcWriteRow
00B9 900000      R     MOV     DPTR,#status
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 487
00BE 900000      R     MOV     DPTR,#status
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 EF                MOV     A,R7
00C4 6407              XRL     A,#07H
00C6 7046              JNZ     ?C0035
                                           ; SOURCE LINE # 488
00C8         ?C0044:
                                           ; SOURCE LINE # 489
00C8 904722            MOV     DPTR,#04722H
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD EF                MOV     A,R7
00CE 5402              ANL     A,#02H
00D0 FF                MOV     R7,A
00D1 7E00              MOV     R6,#00H
00D3 EF                MOV     A,R7
00D4 4E                ORL     A,R6
00D5 7009              JNZ     ?C0045
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 27  

                                           ; SOURCE LINE # 490
                                           ; SOURCE LINE # 492
00D7 7F01              MOV     R7,#01H
00D9 7E00              MOV     R6,#00H
00DB 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 493
00DE 80E8              SJMP    ?C0044
00E0         ?C0045:
                                           ; SOURCE LINE # 496
00E0 904722            MOV     DPTR,#04722H
00E3 E0                MOVX    A,@DPTR
00E4 FF                MOV     R7,A
00E5 EF                MOV     A,R7
00E6 5402              ANL     A,#02H
00E8 FF                MOV     R7,A
00E9 7E00              MOV     R6,#00H
00EB EF                MOV     A,R7
00EC 4E                ORL     A,R6
00ED 600D              JZ      ?C0047
00EF 904722            MOV     DPTR,#04722H
00F2 E0                MOVX    A,@DPTR
00F3 FF                MOV     R7,A
00F4 EF                MOV     A,R7
00F5 13                RRC     A
00F6 13                RRC     A
00F7 543F              ANL     A,#03FH
00F9 FF                MOV     R7,A
00FA 8002              SJMP    ?C0048
00FC         ?C0047:
00FC 7FFF              MOV     R7,#0FFH
00FE         ?C0048:
00FE EF                MOV     A,R7
00FF 7007              JNZ     ?C0046
                                           ; SOURCE LINE # 497
                                           ; SOURCE LINE # 498
0101 900000      R     MOV     DPTR,#status
0104 E4                CLR     A
0105 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 499
0106 8006              SJMP    ?C0035
0108         ?C0046:
                                           ; SOURCE LINE # 501
                                           ; SOURCE LINE # 502
0108 900000      R     MOV     DPTR,#status
010B 74FF              MOV     A,#0FFH
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 505
                                           ; SOURCE LINE # 507
010E         ?C0035:
                                           ; SOURCE LINE # 509
010E 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 510
0111 8006              SJMP    ?C0050
0113         ?C0034:
                                           ; SOURCE LINE # 512
                                           ; SOURCE LINE # 513
0113 900000      R     MOV     DPTR,#status
0116 7404              MOV     A,#04H
0118 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 514
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 28  

0119         ?C0050:
                                           ; SOURCE LINE # 516
0119 900000      R     MOV     DPTR,#status
011C E0                MOVX    A,@DPTR
011D FF                MOV     R7,A
                                           ; SOURCE LINE # 517
011E         ?C0051:
011E 22                RET     
             ; FUNCTION _CyWriteRowFull (END)

             ; FUNCTION _CyFlash_SetWaitCycles (BEGIN)
                                           ; SOURCE LINE # 538
0000 900000      R     MOV     DPTR,#freq
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 539
                                           ; SOURCE LINE # 543
0005 120000      E     LCALL   CyEnterCriticalSection
0008 900000      R     MOV     DPTR,#interruptState
000B EF                MOV     A,R7
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 553
000D 900000      R     MOV     DPTR,#freq
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 EF                MOV     A,R7
0013 D3                SETB    C
0014 9416              SUBB    A,#016H
0016 5014              JNC     ?C0052
                                           ; SOURCE LINE # 554
                                           ; SOURCE LINE # 556
0018 904800            MOV     DPTR,#04800H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E 543F              ANL     A,#03FH
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 4440              ORL     A,#040H
0024 FF                MOV     R7,A
0025 904800            MOV     DPTR,#04800H
0028 EF                MOV     A,R7
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 557
002A 8031              SJMP    ?C0053
002C         ?C0052:
                                           ; SOURCE LINE # 558
002C 900000      R     MOV     DPTR,#freq
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 D3                SETB    C
0033 942C              SUBB    A,#02CH
0035 5014              JNC     ?C0054
                                           ; SOURCE LINE # 559
                                           ; SOURCE LINE # 561
0037 904800            MOV     DPTR,#04800H
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C EF                MOV     A,R7
003D 543F              ANL     A,#03FH
003F FF                MOV     R7,A
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 29  

0040 EF                MOV     A,R7
0041 4480              ORL     A,#080H
0043 FF                MOV     R7,A
0044 904800            MOV     DPTR,#04800H
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 562
0049 8012              SJMP    ?C0053
004B         ?C0054:
                                           ; SOURCE LINE # 564
                                           ; SOURCE LINE # 566
004B 904800            MOV     DPTR,#04800H
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 543F              ANL     A,#03FH
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 44C0              ORL     A,#0C0H
0057 FF                MOV     R7,A
0058 904800            MOV     DPTR,#04800H
005B EF                MOV     A,R7
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 567
005D         ?C0053:
                                           ; SOURCE LINE # 598
005D 900000      R     MOV     DPTR,#interruptState
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 599
0065 22                RET     
             ; FUNCTION _CyFlash_SetWaitCycles (END)

             ; FUNCTION CyEEPROM_Start (BEGIN)
                                           ; SOURCE LINE # 616
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 619
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4410              ORL     A,#010H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 622
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 4410              ORL     A,#010H
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 623
0016 22                RET     
             ; FUNCTION CyEEPROM_Start (END)

             ; FUNCTION CyEEPROM_Stop (BEGIN)
                                           ; SOURCE LINE # 640
                                           ; SOURCE LINE # 641
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 30  

                                           ; SOURCE LINE # 643
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54EF              ANL     A,#0EFH
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 646
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 54EF              ANL     A,#0EFH
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 647
0016 22                RET     
             ; FUNCTION CyEEPROM_Stop (END)

             ; FUNCTION CyEEPROM_ReadReserve (BEGIN)
                                           ; SOURCE LINE # 664
                                           ; SOURCE LINE # 665
                                           ; SOURCE LINE # 667
0000 904702            MOV     DPTR,#04702H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4401              ORL     A,#01H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
000B         ?C0059:
                                           ; SOURCE LINE # 669
000B 904702            MOV     DPTR,#04702H
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 5402              ANL     A,#02H
0013 FF                MOV     R7,A
0014 7E00              MOV     R6,#00H
0016 EF                MOV     A,R7
0017 4E                ORL     A,R6
0018 60F1              JZ      ?C0059
                                           ; SOURCE LINE # 670
                                           ; SOURCE LINE # 672
001A         ?C0060:
                                           ; SOURCE LINE # 673
001A         ?C0061:
001A 22                RET     
             ; FUNCTION CyEEPROM_ReadReserve (END)

             ; FUNCTION CyEEPROM_ReadRelease (BEGIN)
                                           ; SOURCE LINE # 690
                                           ; SOURCE LINE # 691
                                           ; SOURCE LINE # 692
0000 904702            MOV     DPTR,#04702H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
C51 COMPILER V9.51   CYFLASH                                                               09/04/2014 17:45:51 PAGE 31  

0006 54FE              ANL     A,#0FEH
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 693
000B 22                RET     
             ; FUNCTION CyEEPROM_ReadRelease (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1466    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
