C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_1_HID
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_1_hid.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_1_hid.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\USBUART_1_hid.lst) CD D
                    -B NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\USBUART_1_hid.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBUART_1_hid.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  USB HID Class request handler.
   7          *
   8          * Related Document:
   9          *  Device Class Definition for Human Interface Devices (HID) Version 1.11  
  10          *
  11          * Note:
  12          *
  13          ********************************************************************************
  14          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  15          * You may use this file only in accordance with the license, terms, conditions,
  16          * disclaimers, and limitations in the end user license agreement accompanying
  17          * the software package with which this file was provided.
  18          *******************************************************************************/
  19          
  20          #include "USBUART_1.h"
  21          
  22          #if defined(USBUART_1_ENABLE_HID_CLASS)
  23          
  24          #include "USBUART_1_pvt.h"
  25          #include "USBUART_1_hid.h"
  26          
  27          
  28          /***************************************
  29          *    HID Variables
  30          ***************************************/
  31          
  32          volatile uint8 USBUART_1_hidProtocol[USBUART_1_MAX_INTERFACES_NUMBER];  /* HID device protocol status */
  33          volatile uint8 USBUART_1_hidIdleRate[USBUART_1_MAX_INTERFACES_NUMBER];  /* HID device idle reload value */
  34          volatile uint8 USBUART_1_hidIdleTimer[USBUART_1_MAX_INTERFACES_NUMBER]; /* HID device idle rate value */
  35          
  36          
  37          /***************************************
  38          * Custom Declarations
  39          ***************************************/
  40          
  41          /* `#START HID_CUSTOM_DECLARATIONS` Place your declaration here */
  42          
  43          /* `#END` */
  44          
  45          
  46          /*******************************************************************************
  47          * Function Name: USBUART_1_UpdateHIDTimer
  48          ********************************************************************************
  49          *
  50          * Summary:
  51          *  Updates the HID report timer and reloads it if expired
  52          *
  53          * Parameters:
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 2   

  54          *  interface:  Interface Number.
  55          *
  56          * Return:
  57          *  status.
  58          *
  59          * Reentrant:
  60          *  No.
  61          *
  62          *******************************************************************************/
  63          uint8 USBUART_1_UpdateHIDTimer(uint8 interface) 
  64          {
  65   1          uint8 stat = USBUART_1_IDLE_TIMER_INDEFINITE;
  66   1      
  67   1          if(USBUART_1_hidIdleRate[interface] != 0u)
  68   1          {
  69   2              if(USBUART_1_hidIdleTimer[interface] > 0u)
  70   2              {
  71   3                  USBUART_1_hidIdleTimer[interface]--;
  72   3                  stat = USBUART_1_IDLE_TIMER_RUNNING;
  73   3              }
  74   2              else
  75   2              {
  76   3                  USBUART_1_hidIdleTimer[interface] = USBUART_1_hidIdleRate[interface];
  77   3                  stat = USBUART_1_IDLE_TIMER_EXPIRED;
  78   3              }
  79   2          }
  80   1      
  81   1          return(stat);
  82   1      }
  83          
  84          
  85          /*******************************************************************************
  86          * Function Name: USBUART_1_GetProtocol
  87          ********************************************************************************
  88          *
  89          * Summary:
  90          *  Returns the selected protocol value to the application
  91          *
  92          * Parameters:
  93          *  interface:  Interface Number.
  94          *
  95          * Return:
  96          *  Interface protocol.
  97          *
  98          *******************************************************************************/
  99          uint8 USBUART_1_GetProtocol(uint8 interface) 
 100          {
 101   1          return(USBUART_1_hidProtocol[interface]);
 102   1      }
 103          
 104          
 105          /*******************************************************************************
 106          * Function Name: USBUART_1_DispatchHIDClassRqst
 107          ********************************************************************************
 108          *
 109          * Summary:
 110          *  This routine dispatches class requests
 111          *
 112          * Parameters:
 113          *  None.
 114          *
 115          * Return:
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 3   

 116          *  requestHandled
 117          *
 118          * Reentrant:
 119          *  No.
 120          *
 121          *******************************************************************************/
 122          uint8 USBUART_1_DispatchHIDClassRqst(void) 
 123          {
 124   1          uint8 requestHandled = USBUART_1_FALSE;
 125   1          uint8 interfaceNumber;
 126   1      
 127   1          interfaceNumber = CY_GET_REG8(USBUART_1_wIndexLo);
 128   1          if ((CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_DIR_MASK) == USBUART_1_RQST_DIR_D2H)
 129   1          {   /* Control Read */
 130   2              switch (CY_GET_REG8(USBUART_1_bRequest))
 131   2              {
 132   3                  case USBUART_1_GET_DESCRIPTOR:
 133   3                      if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_HID_CLASS)
 134   3                      {
 135   4                          USBUART_1_FindHidClassDecriptor();
 136   4                          if (USBUART_1_currentTD.count != 0u)
 137   4                          {
 138   5                              requestHandled = USBUART_1_InitControlRead();
 139   5                          }
 140   4                      }
 141   3                      else if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_HID_REPORT)
 142   3                      {
 143   4                          USBUART_1_FindReportDescriptor();
 144   4                          if (USBUART_1_currentTD.count != 0u)
 145   4                          {
 146   5                              requestHandled = USBUART_1_InitControlRead();
 147   5                          }
 148   4                      }
 149   3                      else
 150   3                      {   /* requestHandled is initialezed as FALSE by default */
 151   4                      }
 152   3                      break;
 153   3                  case USBUART_1_HID_GET_REPORT:
 154   3                      USBUART_1_FindReport();
 155   3                      if (USBUART_1_currentTD.count != 0u)
 156   3                      {
 157   4                          requestHandled = USBUART_1_InitControlRead();
 158   4                      }
 159   3                      break;
 160   3      
 161   3                  case USBUART_1_HID_GET_IDLE:
 162   3                      /* This function does not support multiple reports per interface*/
 163   3                      /* Validate interfaceNumber and Report ID (should be 0) */
 164   3                      if( (interfaceNumber < USBUART_1_MAX_INTERFACES_NUMBER) &&
 165   3                          (CY_GET_REG8(USBUART_1_wValueLo) == 0u ) ) /* Do not support Idle per Report ID */
 166   3                      {
 167   4                          USBUART_1_currentTD.count = 1u;
 168   4                          USBUART_1_currentTD.pData = &USBUART_1_hidIdleRate[interfaceNumber];
 169   4                          requestHandled  = USBUART_1_InitControlRead();
 170   4                      }
 171   3                      break;
 172   3                  case USBUART_1_HID_GET_PROTOCOL:
 173   3                      /* Validate interfaceNumber */
 174   3                      if( interfaceNumber < USBUART_1_MAX_INTERFACES_NUMBER)
 175   3                      {
 176   4                          USBUART_1_currentTD.count = 1u;
 177   4                          USBUART_1_currentTD.pData = &USBUART_1_hidProtocol[interfaceNumber];
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 4   

 178   4                          requestHandled  = USBUART_1_InitControlRead();
 179   4                      }
 180   3                      break;
 181   3                  default:    /* requestHandled is initialized as FALSE by default */
 182   3                      break;
 183   3              }
 184   2          }
 185   1          else if ((CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_DIR_MASK) ==
 186   1                                                                                  USBUART_1_RQST_DIR_H2D)
 187   1          {   /* Control Write */
 188   2              switch (CY_GET_REG8(USBUART_1_bRequest))
 189   2              {
 190   3                  case USBUART_1_HID_SET_REPORT:
 191   3                      USBUART_1_FindReport();
 192   3                      if (USBUART_1_currentTD.count != 0u)
 193   3                      {
 194   4                          requestHandled = USBUART_1_InitControlWrite();
 195   4                      }
 196   3                      break;
 197   3                  case USBUART_1_HID_SET_IDLE:
 198   3                      /* This function does not support multiple reports per interface */
 199   3                      /* Validate interfaceNumber and Report ID (should be 0) */
 200   3                      if( (interfaceNumber < USBUART_1_MAX_INTERFACES_NUMBER) &&
 201   3                          (CY_GET_REG8(USBUART_1_wValueLo) == 0u ) ) /* Do not support Idle per Report ID */
 202   3                      {
 203   4                          USBUART_1_hidIdleRate[interfaceNumber] = CY_GET_REG8(USBUART_1_wValueHi);
 204   4                          /* With regards to HID spec: "7.2.4 Set_Idle Request"
 205   4                          *  Latency. If the current period has gone past the
 206   4                          *  newly proscribed time duration, then a report
 207   4                          *  will be generated immediately.
 208   4                          */
 209   4                          if(USBUART_1_hidIdleRate[interfaceNumber] <
 210   4                             USBUART_1_hidIdleTimer[interfaceNumber])
 211   4                          {
 212   5                              /* Set the timer to zero and let the UpdateHIDTimer() API return IDLE_TIMER_EXPIRE
             -D status*/
 213   5                              USBUART_1_hidIdleTimer[interfaceNumber] = 0u;
 214   5                          }
 215   4                          /* If the new request is received within 4 milliseconds
 216   4                          *  (1 count) of the end of the current period, then the
 217   4                          *  new request will have no effect until after the report.
 218   4                          */
 219   4                          else if(USBUART_1_hidIdleTimer[interfaceNumber] <= 1u)
 220   4                          {
 221   5                              /* Do nothing.
 222   5                              *  Let the UpdateHIDTimer() API continue to work and
 223   5                              *  return IDLE_TIMER_EXPIRED status
 224   5                              */
 225   5                          }
 226   4                          else
 227   4                          {   /* Reload the timer*/
 228   5                              USBUART_1_hidIdleTimer[interfaceNumber] =
 229   5                              USBUART_1_hidIdleRate[interfaceNumber];
 230   5                          }
 231   4                          requestHandled = USBUART_1_InitNoDataControlTransfer();
 232   4                      }
 233   3                      break;
 234   3      
 235   3                  case USBUART_1_HID_SET_PROTOCOL:
 236   3                      /* Validate interfaceNumber and protocol (must be 0 or 1) */
 237   3                      if( (interfaceNumber < USBUART_1_MAX_INTERFACES_NUMBER) &&
 238   3                          (CY_GET_REG8(USBUART_1_wValueLo) <= 1u) )
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 5   

 239   3                      {
 240   4                          USBUART_1_hidProtocol[interfaceNumber] = CY_GET_REG8(USBUART_1_wValueLo);
 241   4                          requestHandled = USBUART_1_InitNoDataControlTransfer();
 242   4                      }
 243   3                      break;
 244   3                  default:    /* requestHandled is initialized as FALSE by default */
 245   3                      break;
 246   3              }
 247   2          }
 248   1          else
 249   1          {   /* requestHandled is initialized as FALSE by default */
 250   2          }
 251   1      
 252   1          return(requestHandled);
 253   1      }
 254          
 255          
 256          /*******************************************************************************
 257          * Function Name: USB_FindHidClassDescriptor
 258          ********************************************************************************
 259          *
 260          * Summary:
 261          *  This routine find Hid Class Descriptor pointer based on the Interface number
 262          *  and Alternate setting then loads the currentTD structure with the address of
 263          *  the buffer and the size.
 264          *  The HID Class Descriptor resides inside the config descriptor.
 265          *
 266          * Parameters:
 267          *  None.
 268          *
 269          * Return:
 270          *  currentTD
 271          *
 272          * Reentrant:
 273          *  No.
 274          *
 275          *******************************************************************************/
 276          void USBUART_1_FindHidClassDecriptor(void) 
 277          {
 278   1          const T_USBUART_1_LUT CYCODE *pTmp;
 279   1          volatile uint8 *pDescr;
 280   1          uint8 interfaceN;
 281   1      
 282   1          pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 283   1          interfaceN = CY_GET_REG8(USBUART_1_wIndexLo);
 284   1          /* Third entry in the LUT starts the Interface Table pointers */
 285   1          /* Now use the request interface number*/
 286   1          pTmp = &pTmp[interfaceN + 2u];
 287   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_TABLE */
 288   1          pTmp = (const T_USBUART_1_LUT CYCODE *) pTmp->p_list;
 289   1          /* Now use Alternate setting number */
 290   1          pTmp = &pTmp[USBUART_1_interfaceSetting[interfaceN]];
 291   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_ALTERNATEi_HID_TABLE */
 292   1          pTmp = (const T_USBUART_1_LUT CYCODE *) pTmp->p_list;
 293   1          /* Fifth entry in the LUT points to Hid Class Descriptor in Configuration Descriptor */
 294   1          pTmp = &pTmp[4u];
 295   1          pDescr = (volatile uint8 *)pTmp->p_list;
 296   1          /* The first byte contains the descriptor length */
 297   1          USBUART_1_currentTD.count = *pDescr;
 298   1          USBUART_1_currentTD.pData = pDescr;
 299   1      }
 300          
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 6   

 301          
 302          /*******************************************************************************
 303          * Function Name: USB_FindReportDescriptor
 304          ********************************************************************************
 305          *
 306          * Summary:
 307          *  This routine find Hid Report Descriptor pointer based on the Interface
 308          *  number, then loads the currentTD structure with the address of the buffer
 309          *  and the size.
 310          *  Hid Report Descriptor is located after IN/OUT/FEATURE reports.
 311          *
 312          * Parameters:
 313          *   void
 314          *
 315          * Return:
 316          *  currentTD
 317          *
 318          * Reentrant:
 319          *  No.
 320          *
 321          *******************************************************************************/
 322          void USBUART_1_FindReportDescriptor(void) 
 323          {
 324   1          const T_USBUART_1_LUT CYCODE *pTmp;
 325   1          volatile uint8 *pDescr;
 326   1          uint8 interfaceN;
 327   1      
 328   1          pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 329   1          interfaceN = CY_GET_REG8(USBUART_1_wIndexLo);
 330   1          /* Third entry in the LUT starts the Interface Table pointers */
 331   1          /* Now use the request interface number */
 332   1          pTmp = &pTmp[interfaceN + 2u];
 333   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_TABLE */
 334   1          pTmp = (const T_USBUART_1_LUT CYCODE *) pTmp->p_list;
 335   1          /* Now use Alternate setting number */
 336   1          pTmp = &pTmp[USBUART_1_interfaceSetting[interfaceN]];
 337   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_ALTERNATEi_HID_TABLE */
 338   1          pTmp = (const T_USBUART_1_LUT CYCODE *) pTmp->p_list;
 339   1          /* Fourth entry in the LUT starts the Hid Report Descriptor */
 340   1          pTmp = &pTmp[3u];
 341   1          pDescr = (volatile uint8 *)pTmp->p_list;
 342   1          /* The 1st and 2nd bytes of descriptor contain its length. LSB is 1st. */
 343   1          USBUART_1_currentTD.count =  (((uint16)pDescr[1u] << 8u) | pDescr[0u]);
 344   1          USBUART_1_currentTD.pData = &pDescr[2u];
 345   1      }
 346          
 347          
 348          /*******************************************************************************
 349          * Function Name: USBUART_1_FindReport
 350          ********************************************************************************
 351          *
 352          * Summary:
 353          *  This routine sets up a transfer based on the Interface number, Report Type
 354          *  and Report ID, then loads the currentTD structure with the address of the
 355          *  buffer and the size.  The caller has to decide if it is a control read or
 356          *  control write.
 357          *
 358          * Parameters:
 359          *  None.
 360          *
 361          * Return:
 362          *  currentTD
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 7   

 363          *
 364          * Reentrant:
 365          *  No.
 366          *
 367          *******************************************************************************/
 368          void USBUART_1_FindReport(void) 
 369          {
 370   1          const T_USBUART_1_LUT CYCODE *pTmp;
 371   1          T_USBUART_1_TD *pTD;
 372   1          uint8 interfaceN;
 373   1          uint8 reportType;
 374   1      
 375   1          /* `#START HID_FINDREPORT` Place custom handling here */
 376   1      
 377   1          /* `#END` */
 378   1          USBUART_1_currentTD.count = 0u;   /* Init not supported condition */
 379   1          pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 380   1          reportType = CY_GET_REG8(USBUART_1_wValueHi);
 381   1          interfaceN = CY_GET_REG8(USBUART_1_wIndexLo);
 382   1          /* Third entry in the LUT COnfiguration Table starts the Interface Table pointers */
 383   1          /* Now use the request interface number */
 384   1          pTmp = &pTmp[interfaceN + 2u];
 385   1          /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_TABLE*/
 386   1          pTmp = (const T_USBUART_1_LUT CYCODE *) pTmp->p_list;
 387   1          if(interfaceN < USBUART_1_MAX_INTERFACES_NUMBER)
 388   1          {
 389   2              /* Now use Alternate setting number */
 390   2              pTmp = &pTmp[USBUART_1_interfaceSetting[interfaceN]];
 391   2              /* USB_DEVICEx_CONFIGURATIONy_INTERFACEz_ALTERNATEi_HID_TABLE */
 392   2              pTmp = (const T_USBUART_1_LUT CYCODE *) pTmp->p_list;
 393   2              /* Validate reportType to comply with "7.2.1 Get_Report Request" */
 394   2              if((reportType >= USBUART_1_HID_GET_REPORT_INPUT) &&
 395   2                 (reportType <= USBUART_1_HID_GET_REPORT_FEATURE))
 396   2              {
 397   3                  /* Get the entry proper TD (IN, OUT or Feature Report Table)*/
 398   3                  pTmp = &pTmp[reportType - 1u];
 399   3                  reportType = CY_GET_REG8(USBUART_1_wValueLo);    /* Get reportID */
 400   3                  /* Validate table support by the HID descriptor, compare table count with reportID */
 401   3                  if(pTmp->c >= reportType)
 402   3                  {
 403   4                      pTD = (T_USBUART_1_TD *) pTmp->p_list;
 404   4                      pTD = &pTD[reportType];                          /* select entry depend on report ID*/
 405   4                      USBUART_1_currentTD.pData = pTD->pData;   /* Buffer pointer */
 406   4                      USBUART_1_currentTD.count = pTD->count;   /* Buffer Size */
 407   4                      USBUART_1_currentTD.pStatusBlock = pTD->pStatusBlock;
 408   4                  }
 409   3              }
 410   2          }
 411   1      }
 412          
 413          
 414          /*******************************************************************************
 415          * Additional user functions supporting HID Requests
 416          ********************************************************************************/
 417          
 418          /* `#START HID_FUNCTIONS` Place any additional functions here */
 419          
 420          /* `#END` */
 421          
 422          #endif  /*  USBUART_1_ENABLE_HID_CLASS */
 423          
 424          
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 8   

 425          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _USBUART_1_UpdateHIDTimer (BEGIN)
                                           ; SOURCE LINE # 63
0000 900000      R     MOV     DPTR,#interface
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0005 900000      R     MOV     DPTR,#stat
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 67
000A 900000      R     MOV     DPTR,#interface
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 7400        R     MOV     A,#LOW USBUART_1_hidIdleRate
0011 2F                ADD     A,R7
0012 F582              MOV     DPL,A
0014 E4                CLR     A
0015 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleRate
0017 F583              MOV     DPH,A
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C 6059              JZ      ?C0001
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
001E 900000      R     MOV     DPTR,#interface
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 7400        R     MOV     A,#LOW USBUART_1_hidIdleTimer
0025 2F                ADD     A,R7
0026 F582              MOV     DPL,A
0028 E4                CLR     A
0029 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleTimer
002B F583              MOV     DPH,A
002D E0                MOVX    A,@DPTR
002E FF                MOV     R7,A
002F EF                MOV     A,R7
0030 D3                SETB    C
0031 9400              SUBB    A,#00H
0033 401A              JC      ?C0002
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
0035 900000      R     MOV     DPTR,#interface
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 7400        R     MOV     A,#LOW USBUART_1_hidIdleTimer
003C 2F                ADD     A,R7
003D F582              MOV     DPL,A
003F E4                CLR     A
0040 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleTimer
0042 F583              MOV     DPH,A
0044 E0                MOVX    A,@DPTR
0045 14                DEC     A
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
0047 900000      R     MOV     DPTR,#stat
004A 7402              MOV     A,#02H
004C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 10  

                                           ; SOURCE LINE # 73
004D 8028              SJMP    ?C0001
004F         ?C0002:
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
004F 900000      R     MOV     DPTR,#interface
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 7400        R     MOV     A,#LOW USBUART_1_hidIdleRate
0056 2F                ADD     A,R7
0057 F582              MOV     DPL,A
0059 E4                CLR     A
005A 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleRate
005C F583              MOV     DPH,A
005E E0                MOVX    A,@DPTR
005F FF                MOV     R7,A
0060 900000      R     MOV     DPTR,#interface
0063 E0                MOVX    A,@DPTR
0064 FE                MOV     R6,A
0065 7400        R     MOV     A,#LOW USBUART_1_hidIdleTimer
0067 2E                ADD     A,R6
0068 F582              MOV     DPL,A
006A E4                CLR     A
006B 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleTimer
006D F583              MOV     DPH,A
006F EF                MOV     A,R7
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0071 900000      R     MOV     DPTR,#stat
0074 7401              MOV     A,#01H
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0077         ?C0001:
                                           ; SOURCE LINE # 81
0077 900000      R     MOV     DPTR,#stat
007A E0                MOVX    A,@DPTR
007B FF                MOV     R7,A
                                           ; SOURCE LINE # 82
007C         ?C0004:
007C 22                RET     
             ; FUNCTION _USBUART_1_UpdateHIDTimer (END)

             ; FUNCTION _USBUART_1_GetProtocol (BEGIN)
                                           ; SOURCE LINE # 99
0000 900000      R     MOV     DPTR,#interface
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0005 900000      R     MOV     DPTR,#interface
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 7400        R     MOV     A,#LOW USBUART_1_hidProtocol
000C 2F                ADD     A,R7
000D F582              MOV     DPL,A
000F E4                CLR     A
0010 3400        R     ADDC    A,#HIGH USBUART_1_hidProtocol
0012 F583              MOV     DPH,A
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
                                           ; SOURCE LINE # 102
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 11  

0016         ?C0005:
0016 22                RET     
             ; FUNCTION _USBUART_1_GetProtocol (END)

             ; FUNCTION USBUART_1_DispatchHIDClassRqst (BEGIN)
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0005 906004            MOV     DPTR,#06004H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#interfaceNumber
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 128
000F 906000            MOV     DPTR,#06000H
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 5480              ANL     A,#080H
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A EF                MOV     A,R7
001B 6480              XRL     A,#080H
001D 4E                ORL     A,R6
001E 6003              JZ      $ + 5H
0020 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
0023 906001            MOV     DPTR,#06001H
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 120000      E     LCALL   ?C?CCASE
002C 0000        R     DW      ?C0015
002E 01                DB      01H
002F 0000        R     DW      ?C0017
0031 02                DB      02H
0032 0000        R     DW      ?C0019
0034 03                DB      03H
0035 0000        R     DW      ?C0008
0037 06                DB      06H
0038 0000              DW      00H
003A 0000        R     DW      ?C0022
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
003C         ?C0008:
                                           ; SOURCE LINE # 133
003C 906003            MOV     DPTR,#06003H
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 EF                MOV     A,R7
0042 B4211D            CJNE    A,#021H,?C0009
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
0045 120000      R     LCALL   USBUART_1_FindHidClassDecriptor
                                           ; SOURCE LINE # 136
0048 900000      E     MOV     DPTR,#USBUART_1_currentTD
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 12  

004B E0                MOVX    A,@DPTR
004C FE                MOV     R6,A
004D A3                INC     DPTR
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 4E                ORL     A,R6
0052 7003              JNZ     $ + 5H
0054 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0057 120000      E     LCALL   USBUART_1_InitControlRead
005A 900000      R     MOV     DPTR,#requestHandled
005D EF                MOV     A,R7
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
005F 020000      R     LJMP    ?C0022
0062         ?C0009:
                                           ; SOURCE LINE # 141
0062 906003            MOV     DPTR,#06003H
0065 E0                MOVX    A,@DPTR
0066 FF                MOV     R7,A
0067 EF                MOV     A,R7
0068 6422              XRL     A,#022H
006A 6003              JZ      $ + 5H
006C 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
006F 120000      R     LCALL   USBUART_1_FindReportDescriptor
                                           ; SOURCE LINE # 144
0072 900000      E     MOV     DPTR,#USBUART_1_currentTD
0075 E0                MOVX    A,@DPTR
0076 FE                MOV     R6,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A EF                MOV     A,R7
007B 4E                ORL     A,R6
007C 7003              JNZ     $ + 5H
007E 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
0081 120000      E     LCALL   USBUART_1_InitControlRead
0084 900000      R     MOV     DPTR,#requestHandled
0087 EF                MOV     A,R7
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
0089 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
008C         ?C0015:
                                           ; SOURCE LINE # 154
008C 120000      R     LCALL   USBUART_1_FindReport
                                           ; SOURCE LINE # 155
008F 900000      E     MOV     DPTR,#USBUART_1_currentTD
0092 E0                MOVX    A,@DPTR
0093 FE                MOV     R6,A
0094 A3                INC     DPTR
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 13  

0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 4E                ORL     A,R6
0099 7003              JNZ     $ + 5H
009B 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 157
009E 120000      E     LCALL   USBUART_1_InitControlRead
00A1 900000      R     MOV     DPTR,#requestHandled
00A4 EF                MOV     A,R7
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 159
00A6 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 161
00A9         ?C0017:
                                           ; SOURCE LINE # 165
00A9 900000      R     MOV     DPTR,#interfaceNumber
00AC E0                MOVX    A,@DPTR
00AD FF                MOV     R7,A
00AE EF                MOV     A,R7
00AF C3                CLR     C
00B0 9402              SUBB    A,#02H
00B2 4003              JC      $ + 5H
00B4 020000      R     LJMP    ?C0022
00B7 906002            MOV     DPTR,#06002H
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 6003              JZ      $ + 5H
00BF 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
00C2 900000      E     MOV     DPTR,#USBUART_1_currentTD
00C5 E4                CLR     A
00C6 F0                MOVX    @DPTR,A
00C7 A3                INC     DPTR
00C8 7401              MOV     A,#01H
00CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
00CB 900000      R     MOV     DPTR,#interfaceNumber
00CE E0                MOVX    A,@DPTR
00CF FF                MOV     R7,A
00D0 7400        R     MOV     A,#LOW USBUART_1_hidIdleRate
00D2 2F                ADD     A,R7
00D3 F9                MOV     R1,A
00D4 E4                CLR     A
00D5 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleRate
00D7 FA                MOV     R2,A
00D8 7B01              MOV     R3,#01H
00DA 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
00DD 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 169
00E0 120000      E     LCALL   USBUART_1_InitControlRead
00E3 900000      R     MOV     DPTR,#requestHandled
00E6 EF                MOV     A,R7
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
00E8 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 172
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 14  

00EB         ?C0019:
                                           ; SOURCE LINE # 174
00EB 900000      R     MOV     DPTR,#interfaceNumber
00EE E0                MOVX    A,@DPTR
00EF FF                MOV     R7,A
00F0 EF                MOV     A,R7
00F1 C3                CLR     C
00F2 9402              SUBB    A,#02H
00F4 4003              JC      $ + 5H
00F6 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
00F9 900000      E     MOV     DPTR,#USBUART_1_currentTD
00FC E4                CLR     A
00FD F0                MOVX    @DPTR,A
00FE A3                INC     DPTR
00FF 7401              MOV     A,#01H
0101 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
0102 900000      R     MOV     DPTR,#interfaceNumber
0105 E0                MOVX    A,@DPTR
0106 FF                MOV     R7,A
0107 7400        R     MOV     A,#LOW USBUART_1_hidProtocol
0109 2F                ADD     A,R7
010A F9                MOV     R1,A
010B E4                CLR     A
010C 3400        R     ADDC    A,#HIGH USBUART_1_hidProtocol
010E FA                MOV     R2,A
010F 7B01              MOV     R3,#01H
0111 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0114 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 178
0117 120000      E     LCALL   USBUART_1_InitControlRead
011A 900000      R     MOV     DPTR,#requestHandled
011D EF                MOV     A,R7
011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
011F 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
0122 020000      R     LJMP    ?C0022
0125         ?C0006:
                                           ; SOURCE LINE # 185
0125 906000            MOV     DPTR,#06000H
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A EF                MOV     A,R7
012B 5480              ANL     A,#080H
012D FF                MOV     R7,A
012E 7E00              MOV     R6,#00H
0130 EF                MOV     A,R7
0131 4E                ORL     A,R6
0132 6003              JZ      $ + 5H
0134 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
0137 906001            MOV     DPTR,#06001H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 15  

013C EF                MOV     A,R7
013D 120000      E     LCALL   ?C?CCASE
0140 0000        R     DW      ?C0025
0142 09                DB      09H
0143 0000        R     DW      ?C0027
0145 0A                DB      0AH
0146 0000        R     DW      ?C0033
0148 0B                DB      0BH
0149 0000              DW      00H
014B 0000        R     DW      ?C0022
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
014D         ?C0025:
                                           ; SOURCE LINE # 191
014D 120000      R     LCALL   USBUART_1_FindReport
                                           ; SOURCE LINE # 192
0150 900000      E     MOV     DPTR,#USBUART_1_currentTD
0153 E0                MOVX    A,@DPTR
0154 FE                MOV     R6,A
0155 A3                INC     DPTR
0156 E0                MOVX    A,@DPTR
0157 FF                MOV     R7,A
0158 EF                MOV     A,R7
0159 4E                ORL     A,R6
015A 7003              JNZ     $ + 5H
015C 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
015F 120000      E     LCALL   USBUART_1_InitControlWrite
0162 900000      R     MOV     DPTR,#requestHandled
0165 EF                MOV     A,R7
0166 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
0167 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 197
016A         ?C0027:
                                           ; SOURCE LINE # 201
016A 900000      R     MOV     DPTR,#interfaceNumber
016D E0                MOVX    A,@DPTR
016E FF                MOV     R7,A
016F EF                MOV     A,R7
0170 C3                CLR     C
0171 9402              SUBB    A,#02H
0173 4003              JC      $ + 5H
0175 020000      R     LJMP    ?C0022
0178 906002            MOV     DPTR,#06002H
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 6003              JZ      $ + 5H
0180 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
0183 906003            MOV     DPTR,#06003H
0186 E0                MOVX    A,@DPTR
0187 FF                MOV     R7,A
0188 900000      R     MOV     DPTR,#interfaceNumber
018B E0                MOVX    A,@DPTR
018C FE                MOV     R6,A
018D 7400        R     MOV     A,#LOW USBUART_1_hidIdleRate
018F 2E                ADD     A,R6
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 16  

0190 F582              MOV     DPL,A
0192 E4                CLR     A
0193 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleRate
0195 F583              MOV     DPH,A
0197 EF                MOV     A,R7
0198 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
0199 900000      R     MOV     DPTR,#interfaceNumber
019C E0                MOVX    A,@DPTR
019D FF                MOV     R7,A
019E 7400        R     MOV     A,#LOW USBUART_1_hidIdleTimer
01A0 2F                ADD     A,R7
01A1 F582              MOV     DPL,A
01A3 E4                CLR     A
01A4 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleTimer
01A6 F583              MOV     DPH,A
01A8 E0                MOVX    A,@DPTR
01A9 FF                MOV     R7,A
01AA 900000      R     MOV     DPTR,#interfaceNumber
01AD E0                MOVX    A,@DPTR
01AE FE                MOV     R6,A
01AF 7400        R     MOV     A,#LOW USBUART_1_hidIdleRate
01B1 2E                ADD     A,R6
01B2 F582              MOV     DPL,A
01B4 E4                CLR     A
01B5 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleRate
01B7 F583              MOV     DPH,A
01B9 E0                MOVX    A,@DPTR
01BA FE                MOV     R6,A
01BB EE                MOV     A,R6
01BC C3                CLR     C
01BD 9F                SUBB    A,R7
01BE 5013              JNC     ?C0029
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 213
01C0 900000      R     MOV     DPTR,#interfaceNumber
01C3 E0                MOVX    A,@DPTR
01C4 FF                MOV     R7,A
01C5 7400        R     MOV     A,#LOW USBUART_1_hidIdleTimer
01C7 2F                ADD     A,R7
01C8 F582              MOV     DPL,A
01CA E4                CLR     A
01CB 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleTimer
01CD F583              MOV     DPH,A
01CF E4                CLR     A
01D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
01D1 8039              SJMP    ?C0030
01D3         ?C0029:
                                           ; SOURCE LINE # 219
01D3 900000      R     MOV     DPTR,#interfaceNumber
01D6 E0                MOVX    A,@DPTR
01D7 FF                MOV     R7,A
01D8 7400        R     MOV     A,#LOW USBUART_1_hidIdleTimer
01DA 2F                ADD     A,R7
01DB F582              MOV     DPL,A
01DD E4                CLR     A
01DE 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleTimer
01E0 F583              MOV     DPH,A
01E2 E0                MOVX    A,@DPTR
01E3 FF                MOV     R7,A
01E4 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 17  

01E5 D3                SETB    C
01E6 9401              SUBB    A,#01H
01E8 4022              JC      ?C0030
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 225
01EA         ?C0031:
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
01EA 900000      R     MOV     DPTR,#interfaceNumber
01ED E0                MOVX    A,@DPTR
01EE FF                MOV     R7,A
01EF 7400        R     MOV     A,#LOW USBUART_1_hidIdleRate
01F1 2F                ADD     A,R7
01F2 F582              MOV     DPL,A
01F4 E4                CLR     A
01F5 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleRate
01F7 F583              MOV     DPH,A
01F9 E0                MOVX    A,@DPTR
01FA FF                MOV     R7,A
01FB 900000      R     MOV     DPTR,#interfaceNumber
01FE E0                MOVX    A,@DPTR
01FF FE                MOV     R6,A
0200 7400        R     MOV     A,#LOW USBUART_1_hidIdleTimer
0202 2E                ADD     A,R6
0203 F582              MOV     DPL,A
0205 E4                CLR     A
0206 3400        R     ADDC    A,#HIGH USBUART_1_hidIdleTimer
0208 F583              MOV     DPH,A
020A EF                MOV     A,R7
020B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
020C         ?C0030:
                                           ; SOURCE LINE # 231
020C 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
020F 900000      R     MOV     DPTR,#requestHandled
0212 EF                MOV     A,R7
0213 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0214 8034              SJMP    ?C0022
                                           ; SOURCE LINE # 235
0216         ?C0033:
                                           ; SOURCE LINE # 238
0216 900000      R     MOV     DPTR,#interfaceNumber
0219 E0                MOVX    A,@DPTR
021A FF                MOV     R7,A
021B EF                MOV     A,R7
021C C3                CLR     C
021D 9402              SUBB    A,#02H
021F 5029              JNC     ?C0022
0221 906002            MOV     DPTR,#06002H
0224 E0                MOVX    A,@DPTR
0225 FF                MOV     R7,A
0226 EF                MOV     A,R7
0227 D3                SETB    C
0228 9401              SUBB    A,#01H
022A 501E              JNC     ?C0022
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
022C 906002            MOV     DPTR,#06002H
022F E0                MOVX    A,@DPTR
0230 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 18  

0231 900000      R     MOV     DPTR,#interfaceNumber
0234 E0                MOVX    A,@DPTR
0235 FE                MOV     R6,A
0236 7400        R     MOV     A,#LOW USBUART_1_hidProtocol
0238 2E                ADD     A,R6
0239 F582              MOV     DPL,A
023B E4                CLR     A
023C 3400        R     ADDC    A,#HIGH USBUART_1_hidProtocol
023E F583              MOV     DPH,A
0240 EF                MOV     A,R7
0241 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
0242 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
0245 900000      R     MOV     DPTR,#requestHandled
0248 EF                MOV     A,R7
0249 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
024A         ?C0022:
                                           ; SOURCE LINE # 252
024A 900000      R     MOV     DPTR,#requestHandled
024D E0                MOVX    A,@DPTR
024E FF                MOV     R7,A
                                           ; SOURCE LINE # 253
024F         ?C0037:
024F 22                RET     
             ; FUNCTION USBUART_1_DispatchHIDClassRqst (END)

             ; FUNCTION USBUART_1_FindHidClassDecriptor (BEGIN)
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 282
0000 900000      E     MOV     DPTR,#USBUART_1_configuration
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 14                DEC     A
0007 FF                MOV     R7,A
0008 120000      E     LCALL   _USBUART_1_GetConfigTablePtr
000B 900000      R     MOV     DPTR,#pTmp
000E EE                MOV     A,R6
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 283
0013 906004            MOV     DPTR,#06004H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 900000      R     MOV     DPTR,#interfaceN
001B EF                MOV     A,R7
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 286
001D 900000      R     MOV     DPTR,#interfaceN
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 19  

0022 7E00              MOV     R6,#00H
0024 EF                MOV     A,R7
0025 2402              ADD     A,#02H
0027 FF                MOV     R7,A
0028 EE                MOV     A,R6
0029 3400              ADDC    A,#00H
002B FE                MOV     R6,A
002C EF                MOV     A,R7
002D 7802              MOV     R0,#02H
002F         ?C0044:
002F C3                CLR     C
0030 33                RLC     A
0031 CE                XCH     A,R6
0032 33                RLC     A
0033 CE                XCH     A,R6
0034 D8F9              DJNZ    R0,?C0044
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#pTmp
003A E0                MOVX    A,@DPTR
003B FC                MOV     R4,A
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E FD                MOV     R5,A
003F EF                MOV     A,R7
0040 2D                ADD     A,R5
0041 FF                MOV     R7,A
0042 EE                MOV     A,R6
0043 3C                ADDC    A,R4
0044 FE                MOV     R6,A
0045 900000      R     MOV     DPTR,#pTmp
0048 EE                MOV     A,R6
0049 F0                MOVX    @DPTR,A
004A A3                INC     DPTR
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 288
004D 900000      R     MOV     DPTR,#pTmp
0050 E0                MOVX    A,@DPTR
0051 FE                MOV     R6,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 8F82              MOV     DPL,R7
0057 8E83              MOV     DPH,R6
0059 A3                INC     DPTR
005A 120000      E     LCALL   ?C?PLDCODE
005D AE02              MOV     R6,AR2
005F AF01              MOV     R7,AR1
0061 900000      R     MOV     DPTR,#pTmp
0064 EE                MOV     A,R6
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 290
0069 900000      R     MOV     DPTR,#interfaceN
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
0070 2F                ADD     A,R7
0071 F582              MOV     DPL,A
0073 E4                CLR     A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 20  

0074 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0076 F583              MOV     DPH,A
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A 7E04              MOV     R6,#04H
007C EF                MOV     A,R7
007D 8EF0              MOV     B,R6
007F A4                MUL     AB
0080 FF                MOV     R7,A
0081 AEF0              MOV     R6,B
0083 900000      R     MOV     DPTR,#pTmp
0086 E0                MOVX    A,@DPTR
0087 FC                MOV     R4,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FD                MOV     R5,A
008B EF                MOV     A,R7
008C 2D                ADD     A,R5
008D FF                MOV     R7,A
008E EE                MOV     A,R6
008F 3C                ADDC    A,R4
0090 FE                MOV     R6,A
0091 900000      R     MOV     DPTR,#pTmp
0094 EE                MOV     A,R6
0095 F0                MOVX    @DPTR,A
0096 A3                INC     DPTR
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
0099 900000      R     MOV     DPTR,#pTmp
009C E0                MOVX    A,@DPTR
009D FE                MOV     R6,A
009E A3                INC     DPTR
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 8F82              MOV     DPL,R7
00A3 8E83              MOV     DPH,R6
00A5 A3                INC     DPTR
00A6 120000      E     LCALL   ?C?PLDCODE
00A9 AE02              MOV     R6,AR2
00AB AF01              MOV     R7,AR1
00AD 900000      R     MOV     DPTR,#pTmp
00B0 EE                MOV     A,R6
00B1 F0                MOVX    @DPTR,A
00B2 A3                INC     DPTR
00B3 EF                MOV     A,R7
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
00B5 900000      R     MOV     DPTR,#pTmp
00B8 E0                MOVX    A,@DPTR
00B9 FE                MOV     R6,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC FF                MOV     R7,A
00BD EF                MOV     A,R7
00BE 2410              ADD     A,#010H
00C0 FF                MOV     R7,A
00C1 EE                MOV     A,R6
00C2 3400              ADDC    A,#00H
00C4 FE                MOV     R6,A
00C5 900000      R     MOV     DPTR,#pTmp
00C8 EE                MOV     A,R6
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 21  

00C9 F0                MOVX    @DPTR,A
00CA A3                INC     DPTR
00CB EF                MOV     A,R7
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
00CD 900000      R     MOV     DPTR,#pTmp
00D0 E0                MOVX    A,@DPTR
00D1 FE                MOV     R6,A
00D2 A3                INC     DPTR
00D3 E0                MOVX    A,@DPTR
00D4 FF                MOV     R7,A
00D5 8F82              MOV     DPL,R7
00D7 8E83              MOV     DPH,R6
00D9 A3                INC     DPTR
00DA 120000      E     LCALL   ?C?PLDCODE
00DD 900000      R     MOV     DPTR,#pDescr
00E0 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 297
00E3 900000      R     MOV     DPTR,#pDescr
00E6 120000      E     LCALL   ?C?PLDXDATA
00E9 120000      E     LCALL   ?C?CLDPTR
00EC FF                MOV     R7,A
00ED 7E00              MOV     R6,#00H
00EF 900000      E     MOV     DPTR,#USBUART_1_currentTD
00F2 EE                MOV     A,R6
00F3 F0                MOVX    @DPTR,A
00F4 A3                INC     DPTR
00F5 EF                MOV     A,R7
00F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 298
00F7 900000      R     MOV     DPTR,#pDescr
00FA 120000      E     LCALL   ?C?PLDXDATA
00FD 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0100 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 299
0103 22                RET     
             ; FUNCTION USBUART_1_FindHidClassDecriptor (END)

             ; FUNCTION USBUART_1_FindReportDescriptor (BEGIN)
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 328
0000 900000      E     MOV     DPTR,#USBUART_1_configuration
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 14                DEC     A
0007 FF                MOV     R7,A
0008 120000      E     LCALL   _USBUART_1_GetConfigTablePtr
000B 900000      R     MOV     DPTR,#pTmp
000E EE                MOV     A,R6
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 329
0013 906004            MOV     DPTR,#06004H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 900000      R     MOV     DPTR,#interfaceN
001B EF                MOV     A,R7
001C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 22  

                                           ; SOURCE LINE # 332
001D 900000      R     MOV     DPTR,#interfaceN
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 7E00              MOV     R6,#00H
0024 EF                MOV     A,R7
0025 2402              ADD     A,#02H
0027 FF                MOV     R7,A
0028 EE                MOV     A,R6
0029 3400              ADDC    A,#00H
002B FE                MOV     R6,A
002C EF                MOV     A,R7
002D 7802              MOV     R0,#02H
002F         ?C0045:
002F C3                CLR     C
0030 33                RLC     A
0031 CE                XCH     A,R6
0032 33                RLC     A
0033 CE                XCH     A,R6
0034 D8F9              DJNZ    R0,?C0045
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#pTmp
003A E0                MOVX    A,@DPTR
003B FC                MOV     R4,A
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E FD                MOV     R5,A
003F EF                MOV     A,R7
0040 2D                ADD     A,R5
0041 FF                MOV     R7,A
0042 EE                MOV     A,R6
0043 3C                ADDC    A,R4
0044 FE                MOV     R6,A
0045 900000      R     MOV     DPTR,#pTmp
0048 EE                MOV     A,R6
0049 F0                MOVX    @DPTR,A
004A A3                INC     DPTR
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 334
004D 900000      R     MOV     DPTR,#pTmp
0050 E0                MOVX    A,@DPTR
0051 FE                MOV     R6,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 8F82              MOV     DPL,R7
0057 8E83              MOV     DPH,R6
0059 A3                INC     DPTR
005A 120000      E     LCALL   ?C?PLDCODE
005D AE02              MOV     R6,AR2
005F AF01              MOV     R7,AR1
0061 900000      R     MOV     DPTR,#pTmp
0064 EE                MOV     A,R6
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
0069 900000      R     MOV     DPTR,#interfaceN
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 23  

006E 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
0070 2F                ADD     A,R7
0071 F582              MOV     DPL,A
0073 E4                CLR     A
0074 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0076 F583              MOV     DPH,A
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A 7E04              MOV     R6,#04H
007C EF                MOV     A,R7
007D 8EF0              MOV     B,R6
007F A4                MUL     AB
0080 FF                MOV     R7,A
0081 AEF0              MOV     R6,B
0083 900000      R     MOV     DPTR,#pTmp
0086 E0                MOVX    A,@DPTR
0087 FC                MOV     R4,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FD                MOV     R5,A
008B EF                MOV     A,R7
008C 2D                ADD     A,R5
008D FF                MOV     R7,A
008E EE                MOV     A,R6
008F 3C                ADDC    A,R4
0090 FE                MOV     R6,A
0091 900000      R     MOV     DPTR,#pTmp
0094 EE                MOV     A,R6
0095 F0                MOVX    @DPTR,A
0096 A3                INC     DPTR
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 338
0099 900000      R     MOV     DPTR,#pTmp
009C E0                MOVX    A,@DPTR
009D FE                MOV     R6,A
009E A3                INC     DPTR
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 8F82              MOV     DPL,R7
00A3 8E83              MOV     DPH,R6
00A5 A3                INC     DPTR
00A6 120000      E     LCALL   ?C?PLDCODE
00A9 AE02              MOV     R6,AR2
00AB AF01              MOV     R7,AR1
00AD 900000      R     MOV     DPTR,#pTmp
00B0 EE                MOV     A,R6
00B1 F0                MOVX    @DPTR,A
00B2 A3                INC     DPTR
00B3 EF                MOV     A,R7
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 340
00B5 900000      R     MOV     DPTR,#pTmp
00B8 E0                MOVX    A,@DPTR
00B9 FE                MOV     R6,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC FF                MOV     R7,A
00BD EF                MOV     A,R7
00BE 240C              ADD     A,#0CH
00C0 FF                MOV     R7,A
00C1 EE                MOV     A,R6
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 24  

00C2 3400              ADDC    A,#00H
00C4 FE                MOV     R6,A
00C5 900000      R     MOV     DPTR,#pTmp
00C8 EE                MOV     A,R6
00C9 F0                MOVX    @DPTR,A
00CA A3                INC     DPTR
00CB EF                MOV     A,R7
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 341
00CD 900000      R     MOV     DPTR,#pTmp
00D0 E0                MOVX    A,@DPTR
00D1 FE                MOV     R6,A
00D2 A3                INC     DPTR
00D3 E0                MOVX    A,@DPTR
00D4 FF                MOV     R7,A
00D5 8F82              MOV     DPL,R7
00D7 8E83              MOV     DPH,R6
00D9 A3                INC     DPTR
00DA 120000      E     LCALL   ?C?PLDCODE
00DD 900000      R     MOV     DPTR,#pDescr
00E0 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 343
00E3 900000      R     MOV     DPTR,#pDescr
00E6 120000      E     LCALL   ?C?PLDXDATA
00E9 E9                MOV     A,R1
00EA 2401              ADD     A,#01H
00EC F9                MOV     R1,A
00ED EA                MOV     A,R2
00EE 3400              ADDC    A,#00H
00F0 FA                MOV     R2,A
00F1 120000      E     LCALL   ?C?CLDPTR
00F4 FF                MOV     R7,A
00F5 7E00              MOV     R6,#00H
00F7 EF                MOV     A,R7
00F8 7F00              MOV     R7,#00H
00FA FE                MOV     R6,A
00FB 900000      R     MOV     DPTR,#pDescr
00FE 120000      E     LCALL   ?C?PLDXDATA
0101 120000      E     LCALL   ?C?CLDPTR
0104 FD                MOV     R5,A
0105 7C00              MOV     R4,#00H
0107 EE                MOV     A,R6
0108 4C                ORL     A,R4
0109 FE                MOV     R6,A
010A EF                MOV     A,R7
010B 4D                ORL     A,R5
010C FF                MOV     R7,A
010D 900000      E     MOV     DPTR,#USBUART_1_currentTD
0110 EE                MOV     A,R6
0111 F0                MOVX    @DPTR,A
0112 A3                INC     DPTR
0113 EF                MOV     A,R7
0114 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 344
0115 900000      R     MOV     DPTR,#pDescr
0118 120000      E     LCALL   ?C?PLDXDATA
011B E9                MOV     A,R1
011C 2402              ADD     A,#02H
011E F9                MOV     R1,A
011F EA                MOV     A,R2
0120 3400              ADDC    A,#00H
0122 FA                MOV     R2,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 25  

0123 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0126 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 345
0129 22                RET     
             ; FUNCTION USBUART_1_FindReportDescriptor (END)

             ; FUNCTION USBUART_1_FindReport (BEGIN)
                                           ; SOURCE LINE # 368
                                           ; SOURCE LINE # 369
                                           ; SOURCE LINE # 378
0000 900000      E     MOV     DPTR,#USBUART_1_currentTD
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 E4                CLR     A
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 379
0008 900000      E     MOV     DPTR,#USBUART_1_configuration
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 14                DEC     A
000F FF                MOV     R7,A
0010 120000      E     LCALL   _USBUART_1_GetConfigTablePtr
0013 900000      R     MOV     DPTR,#pTmp
0016 EE                MOV     A,R6
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 380
001B 906003            MOV     DPTR,#06003H
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#reportType
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 381
0025 906004            MOV     DPTR,#06004H
0028 E0                MOVX    A,@DPTR
0029 FF                MOV     R7,A
002A 900000      R     MOV     DPTR,#interfaceN
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 384
002F 900000      R     MOV     DPTR,#interfaceN
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 7E00              MOV     R6,#00H
0036 EF                MOV     A,R7
0037 2402              ADD     A,#02H
0039 FF                MOV     R7,A
003A EE                MOV     A,R6
003B 3400              ADDC    A,#00H
003D FE                MOV     R6,A
003E EF                MOV     A,R7
003F 7802              MOV     R0,#02H
0041         ?C0046:
0041 C3                CLR     C
0042 33                RLC     A
0043 CE                XCH     A,R6
0044 33                RLC     A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 26  

0045 CE                XCH     A,R6
0046 D8F9              DJNZ    R0,?C0046
0048 FF                MOV     R7,A
0049 900000      R     MOV     DPTR,#pTmp
004C E0                MOVX    A,@DPTR
004D FC                MOV     R4,A
004E A3                INC     DPTR
004F E0                MOVX    A,@DPTR
0050 FD                MOV     R5,A
0051 EF                MOV     A,R7
0052 2D                ADD     A,R5
0053 FF                MOV     R7,A
0054 EE                MOV     A,R6
0055 3C                ADDC    A,R4
0056 FE                MOV     R6,A
0057 900000      R     MOV     DPTR,#pTmp
005A EE                MOV     A,R6
005B F0                MOVX    @DPTR,A
005C A3                INC     DPTR
005D EF                MOV     A,R7
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 386
005F 900000      R     MOV     DPTR,#pTmp
0062 E0                MOVX    A,@DPTR
0063 FE                MOV     R6,A
0064 A3                INC     DPTR
0065 E0                MOVX    A,@DPTR
0066 FF                MOV     R7,A
0067 8F82              MOV     DPL,R7
0069 8E83              MOV     DPH,R6
006B A3                INC     DPTR
006C 120000      E     LCALL   ?C?PLDCODE
006F AE02              MOV     R6,AR2
0071 AF01              MOV     R7,AR1
0073 900000      R     MOV     DPTR,#pTmp
0076 EE                MOV     A,R6
0077 F0                MOVX    @DPTR,A
0078 A3                INC     DPTR
0079 EF                MOV     A,R7
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
007B 900000      R     MOV     DPTR,#interfaceN
007E E0                MOVX    A,@DPTR
007F FF                MOV     R7,A
0080 EF                MOV     A,R7
0081 C3                CLR     C
0082 9402              SUBB    A,#02H
0084 4003              JC      $ + 5H
0086 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 388
                                           ; SOURCE LINE # 390
0089 900000      R     MOV     DPTR,#interfaceN
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
0090 2F                ADD     A,R7
0091 F582              MOV     DPL,A
0093 E4                CLR     A
0094 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0096 F583              MOV     DPH,A
0098 E0                MOVX    A,@DPTR
0099 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 27  

009A 7E04              MOV     R6,#04H
009C EF                MOV     A,R7
009D 8EF0              MOV     B,R6
009F A4                MUL     AB
00A0 FF                MOV     R7,A
00A1 AEF0              MOV     R6,B
00A3 900000      R     MOV     DPTR,#pTmp
00A6 E0                MOVX    A,@DPTR
00A7 FC                MOV     R4,A
00A8 A3                INC     DPTR
00A9 E0                MOVX    A,@DPTR
00AA FD                MOV     R5,A
00AB EF                MOV     A,R7
00AC 2D                ADD     A,R5
00AD FF                MOV     R7,A
00AE EE                MOV     A,R6
00AF 3C                ADDC    A,R4
00B0 FE                MOV     R6,A
00B1 900000      R     MOV     DPTR,#pTmp
00B4 EE                MOV     A,R6
00B5 F0                MOVX    @DPTR,A
00B6 A3                INC     DPTR
00B7 EF                MOV     A,R7
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
00B9 900000      R     MOV     DPTR,#pTmp
00BC E0                MOVX    A,@DPTR
00BD FE                MOV     R6,A
00BE A3                INC     DPTR
00BF E0                MOVX    A,@DPTR
00C0 FF                MOV     R7,A
00C1 8F82              MOV     DPL,R7
00C3 8E83              MOV     DPH,R6
00C5 A3                INC     DPTR
00C6 120000      E     LCALL   ?C?PLDCODE
00C9 AE02              MOV     R6,AR2
00CB AF01              MOV     R7,AR1
00CD 900000      R     MOV     DPTR,#pTmp
00D0 EE                MOV     A,R6
00D1 F0                MOVX    @DPTR,A
00D2 A3                INC     DPTR
00D3 EF                MOV     A,R7
00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 394
00D5 900000      R     MOV     DPTR,#reportType
00D8 E0                MOVX    A,@DPTR
00D9 FF                MOV     R7,A
00DA EF                MOV     A,R7
00DB C3                CLR     C
00DC 9401              SUBB    A,#01H
00DE 5003              JNC     $ + 5H
00E0 020000      R     LJMP    ?C0043
00E3 900000      R     MOV     DPTR,#reportType
00E6 E0                MOVX    A,@DPTR
00E7 FF                MOV     R7,A
00E8 EF                MOV     A,R7
00E9 D3                SETB    C
00EA 9403              SUBB    A,#03H
00EC 4003              JC      $ + 5H
00EE 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 396
                                           ; SOURCE LINE # 398
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 28  

00F1 900000      R     MOV     DPTR,#reportType
00F4 E0                MOVX    A,@DPTR
00F5 FF                MOV     R7,A
00F6 7E00              MOV     R6,#00H
00F8 EF                MOV     A,R7
00F9 24FF              ADD     A,#0FFH
00FB FF                MOV     R7,A
00FC EE                MOV     A,R6
00FD 34FF              ADDC    A,#0FFH
00FF FE                MOV     R6,A
0100 EF                MOV     A,R7
0101 7802              MOV     R0,#02H
0103         ?C0047:
0103 C3                CLR     C
0104 33                RLC     A
0105 CE                XCH     A,R6
0106 33                RLC     A
0107 CE                XCH     A,R6
0108 D8F9              DJNZ    R0,?C0047
010A FF                MOV     R7,A
010B 900000      R     MOV     DPTR,#pTmp
010E E0                MOVX    A,@DPTR
010F FC                MOV     R4,A
0110 A3                INC     DPTR
0111 E0                MOVX    A,@DPTR
0112 FD                MOV     R5,A
0113 EF                MOV     A,R7
0114 2D                ADD     A,R5
0115 FF                MOV     R7,A
0116 EE                MOV     A,R6
0117 3C                ADDC    A,R4
0118 FE                MOV     R6,A
0119 900000      R     MOV     DPTR,#pTmp
011C EE                MOV     A,R6
011D F0                MOVX    @DPTR,A
011E A3                INC     DPTR
011F EF                MOV     A,R7
0120 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 399
0121 906002            MOV     DPTR,#06002H
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 900000      R     MOV     DPTR,#reportType
0129 EF                MOV     A,R7
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 401
012B 900000      R     MOV     DPTR,#pTmp
012E E0                MOVX    A,@DPTR
012F FE                MOV     R6,A
0130 A3                INC     DPTR
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 8F82              MOV     DPL,R7
0135 8E83              MOV     DPH,R6
0137 E4                CLR     A
0138 93                MOVC    A,@A+DPTR
0139 FF                MOV     R7,A
013A 900000      R     MOV     DPTR,#reportType
013D E0                MOVX    A,@DPTR
013E FE                MOV     R6,A
013F EF                MOV     A,R7
0140 C3                CLR     C
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 29  

0141 9E                SUBB    A,R6
0142 4078              JC      ?C0043
                                           ; SOURCE LINE # 402
                                           ; SOURCE LINE # 403
0144 900000      R     MOV     DPTR,#pTmp
0147 E0                MOVX    A,@DPTR
0148 FE                MOV     R6,A
0149 A3                INC     DPTR
014A E0                MOVX    A,@DPTR
014B FF                MOV     R7,A
014C 8F82              MOV     DPL,R7
014E 8E83              MOV     DPH,R6
0150 A3                INC     DPTR
0151 120000      E     LCALL   ?C?PLDCODE
0154 900000      R     MOV     DPTR,#pTD
0157 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 404
015A 900000      R     MOV     DPTR,#reportType
015D E0                MOVX    A,@DPTR
015E FF                MOV     R7,A
015F 7E08              MOV     R6,#08H
0161 EF                MOV     A,R7
0162 8EF0              MOV     B,R6
0164 A4                MUL     AB
0165 FF                MOV     R7,A
0166 AEF0              MOV     R6,B
0168 900000      R     MOV     DPTR,#pTD
016B 120000      E     LCALL   ?C?PLDXDATA
016E E9                MOV     A,R1
016F 2F                ADD     A,R7
0170 F9                MOV     R1,A
0171 EA                MOV     A,R2
0172 3E                ADDC    A,R6
0173 FA                MOV     R2,A
0174 900000      R     MOV     DPTR,#pTD
0177 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 405
017A 900000      R     MOV     DPTR,#pTD
017D 120000      E     LCALL   ?C?PLDXDATA
0180 E9                MOV     A,R1
0181 2402              ADD     A,#02H
0183 F9                MOV     R1,A
0184 EA                MOV     A,R2
0185 3400              ADDC    A,#00H
0187 FA                MOV     R2,A
0188 120000      E     LCALL   ?C?PLDPTR
018B 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
018E 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 406
0191 900000      R     MOV     DPTR,#pTD
0194 120000      E     LCALL   ?C?PLDXDATA
0197 120000      E     LCALL   ?C?ILDPTR
019A FF                MOV     R7,A
019B AEF0              MOV     R6,B
019D 900000      E     MOV     DPTR,#USBUART_1_currentTD
01A0 EE                MOV     A,R6
01A1 F0                MOVX    @DPTR,A
01A2 A3                INC     DPTR
01A3 EF                MOV     A,R7
01A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
01A5 900000      R     MOV     DPTR,#pTD
C51 COMPILER V9.51   USBUART_1_HID                                                         09/04/2014 17:45:47 PAGE 30  

01A8 120000      E     LCALL   ?C?PLDXDATA
01AB E9                MOV     A,R1
01AC 2405              ADD     A,#05H
01AE F9                MOV     R1,A
01AF EA                MOV     A,R2
01B0 3400              ADDC    A,#00H
01B2 FA                MOV     R2,A
01B3 120000      E     LCALL   ?C?PLDPTR
01B6 900000      E     MOV     DPTR,#USBUART_1_currentTD+05H
01B9 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 408
                                           ; SOURCE LINE # 409
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 411
01BC         ?C0043:
01BC 22                RET     
             ; FUNCTION USBUART_1_FindReport (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1743    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
